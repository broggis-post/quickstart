[INFO ] 2020-04-16T08:15:10,519Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T08:15:10,717Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T08:15:11,839Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T08:15:12,586Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T08:15:12,596Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T08:15:12,597Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T08:15:13,051Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T08:15:13,074Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T08:15:13,475Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T08:15:13,475Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:13,475Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T08:15:13,607Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:13,619Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T08:15:13,988Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T08:15:14,162Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T08:15:14,173Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T08:15:14,184Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T08:15:14,184Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T08:15:14,194Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T08:15:14,572Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:14,572Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T08:15:14,584Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T08:15:14,595Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T08:15:14,595Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T08:15:14,595Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T08:15:14,595Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T08:15:14,595Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T08:15:14,606Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T08:15:14,606Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T08:15:14,982Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:14,982Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T08:15:15,033Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:15,033Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T08:15:15,055Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:15,055Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T08:15:15,140Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:15,140Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T08:15:15,184Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T08:15:15,184Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T08:15:15,259Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,280Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,338Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T08:15:15,370Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,381Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T08:15:15,381Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,391Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T08:15:15,391Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,414Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,415Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T08:15:15,448Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,448Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T08:15:15,458Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,458Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,459Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T08:15:15,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,469Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,479Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T08:15:15,548Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,548Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T08:15:15,549Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,560Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T08:15:15,560Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T08:15:15,560Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,560Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T08:15:15,570Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,570Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T08:15:15,570Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,570Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,570Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,603Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,603Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,603Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:15,614Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T08:15:17,161Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T08:15:17,161Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T08:15:17,161Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T08:15:17,161Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T08:15:17,175Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T08:15:17,185Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T08:15:17,185Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T08:15:17,209Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T08:15:17,335Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-081506.138/nodes/0/cordapps] {}
[INFO ] 2020-04-16T08:15:17,338Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T08:15:17,343Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T08:15:17,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T08:15:17,990Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T08:15:18,017Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T08:15:18,067Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:18,067Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:18,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T08:15:06.094Z
      epoch=1
  } {}
[INFO ] 2020-04-16T08:15:21,783Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:21,787Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-081506.138/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:21,787Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:21,820Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:21,884Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:21,888Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:23,484Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:23,989Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:23,991Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:23,993Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:23,993Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:24,052Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:24,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T08:15:24,096Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T08:15:24,096Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T08:15:24,280Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T08:15:24,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T08:15:24,287Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,290Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T08:15:24,402Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,444Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T08:15:24,458Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,481Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:24,509Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=72AFA696DA925602EBB2506D475F8EF073AC18B02A1B5EB091F67E68D5D92C97 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T08:15:24,514Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T08:15:24,516Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T08:15:24,837Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,860Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:24,860Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:24,860Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:24,865Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-081506.138/nodes/1/cordapps] {}
[INFO ] 2020-04-16T08:15:24,866Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T08:15:24,866Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T08:15:24,872Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T08:15:24,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T08:15:24,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T08:15:24,913Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:24,913Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:24,915Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T08:15:06.094Z
      epoch=1
  } {}
[INFO ] 2020-04-16T08:15:25,357Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,359Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-081506.138/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,359Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,376Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,378Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,378Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,483Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,494Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,495Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,497Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,497Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,546Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:25,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T08:15:25,553Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:25,553Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:25,650Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:25,651Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T08:15:25,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T08:15:25,670Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:25,671Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:25,677Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:25,683Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T08:15:25,686Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:25,690Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:26,063Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=72AFA696DA925602EBB2506D475F8EF073AC18B02A1B5EB091F67E68D5D92C97 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T08:15:26,072Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:26,077Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:26,079Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T08:15:26,089Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:26,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:26,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:26,100Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:26,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:26,100Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:26,106Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-081506.138/nodes/2/cordapps] {}
[INFO ] 2020-04-16T08:15:26,106Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T08:15:26,106Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T08:15:26,113Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-081506.138/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T08:15:26,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T08:15:26,139Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T08:15:26,159Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:26,160Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T08:15:26,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T08:15:06.094Z
      epoch=1
  } {}
[INFO ] 2020-04-16T08:15:26,540Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,542Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-081506.138/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,542Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,557Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,560Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,560Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,659Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,666Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,667Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,669Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,669Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,707Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T08:15:26,710Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T08:15:26,711Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:26,711Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:26,804Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T08:15:26,805Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T08:15:26,823Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T08:15:26,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,825Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:26,829Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,836Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T08:15:26,838Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,843Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:26,871Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=72AFA696DA925602EBB2506D475F8EF073AC18B02A1B5EB091F67E68D5D92C97 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T08:15:26,877Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587024924287) {}
[INFO ] 2020-04-16T08:15:26,881Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T08:15:26,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,889Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:26,897Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587024925670) {}
[INFO ] 2020-04-16T08:15:26,899Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:26,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,907Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T08:15:26,913Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,913Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:26,913Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587024926823) {}
[INFO ] 2020-04-16T08:15:26,913Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T08:15:27,365Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=64bec8b6-4dc2-4a07-b071-342b58180cc0, invocation_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, invocation_timestamp=2020-04-16T08:15:26.939Z, origin=Only For Testing, session_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, session_timestamp=2020-04-16T08:15:26.939Z, thread-id=333, tx_id=6441F84B5D806485C855B3CD7E6B33077EB5BEF5FE5264CCA28788DC843E13DE}
[INFO ] 2020-04-16T08:15:27,365Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=64bec8b6-4dc2-4a07-b071-342b58180cc0, invocation_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, invocation_timestamp=2020-04-16T08:15:26.939Z, origin=Only For Testing, session_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, session_timestamp=2020-04-16T08:15:26.939Z, thread-id=333, tx_id=6441F84B5D806485C855B3CD7E6B33077EB5BEF5FE5264CCA28788DC843E13DE}
[INFO ] 2020-04-16T08:15:27,458Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=64bec8b6-4dc2-4a07-b071-342b58180cc0, invocation_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, invocation_timestamp=2020-04-16T08:15:26.939Z, origin=Only For Testing, session_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, session_timestamp=2020-04-16T08:15:26.939Z, thread-id=333, tx_id=6441F84B5D806485C855B3CD7E6B33077EB5BEF5FE5264CCA28788DC843E13DE}
[INFO ] 2020-04-16T08:15:27,459Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=64bec8b6-4dc2-4a07-b071-342b58180cc0, invocation_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, invocation_timestamp=2020-04-16T08:15:26.939Z, origin=Only For Testing, session_id=64ee7ac2-352b-4658-bd91-ba19e9c77bff, session_timestamp=2020-04-16T08:15:26.939Z, thread-id=333, tx_id=6441F84B5D806485C855B3CD7E6B33077EB5BEF5FE5264CCA28788DC843E13DE}
