[INFO ] 2020-04-15T09:18:34,549Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-091833.975/custom-cordapp_1_6_e11045f9-5465-4723-9cf6-38b03deed17f.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-091833.975/custom-cordapp_1_6_941b8419-159a-4801-9738-82dacc770712.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:18:34,592Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-091833.975/custom-cordapp_1_6_e11045f9-5465-4723-9cf6-38b03deed17f.jar {}
[INFO ] 2020-04-15T09:18:34,639Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-091833.975/custom-cordapp_1_6_941b8419-159a-4801-9738-82dacc770712.jar {}
[ERROR] 2020-04-15T09:18:36,024Z [main] internal.Verifier. - Error validating transaction 5747AF7A53CF97698FABE370E1411A81698D7662286CBE155D17CCF254E31172. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:45) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:97) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:94) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:93) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,026Z [main] internal.Verifier. - Error validating transaction 5747AF7A53CF97698FABE370E1411A81698D7662286CBE155D17CCF254E31172. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:45) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:97) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:94) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:93) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,034Z [main] internal.Verifier. - Error validating transaction 5747AF7A53CF97698FABE370E1411A81698D7662286CBE155D17CCF254E31172. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:45) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:94) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:93) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,132Z [main] internal.Verifier. - Error validating transaction D6E2C6708EEDF0F3AB8DFFFC9DBF37FF973C8012DBE58D2F288B2207A7BCC29B. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:42) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:58) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:54) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:53) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,136Z [main] internal.Verifier. - Error validating transaction D6E2C6708EEDF0F3AB8DFFFC9DBF37FF973C8012DBE58D2F288B2207A7BCC29B. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:42) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:58) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:54) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:53) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,146Z [main] internal.Verifier. - Error validating transaction D6E2C6708EEDF0F3AB8DFFFC9DBF37FF973C8012DBE58D2F288B2207A7BCC29B. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:42) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:54) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:53) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,252Z [main] internal.Verifier. - Error validating transaction 04F21AD169DFD12DFD6CB06FE5FFFB93C323D5BA1CFF144CA59C4F1A1FC8B734. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:84) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:81) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:80) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,254Z [main] internal.Verifier. - Error validating transaction 04F21AD169DFD12DFD6CB06FE5FFFB93C323D5BA1CFF144CA59C4F1A1FC8B734. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:84) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:81) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:80) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,260Z [main] internal.Verifier. - Error validating transaction 04F21AD169DFD12DFD6CB06FE5FFFB93C323D5BA1CFF144CA59C4F1A1FC8B734. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:81) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:80) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[WARN ] 2020-04-15T09:18:36,295Z [main] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-04-15T09:18:36,344Z [main] internal.Verifier. - Error validating transaction 65C6F7F70727D588F18C2C153DA6864076408B2B78B82A16EA82C8C25EF06B14. [errorCode=11xj1ns, moreInformationAt=https://errors.corda.net/OS/4.4/11xj1ns] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:36) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:344) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:41) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:39) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,409Z [main] internal.Verifier. - Error validating transaction 2D3487AEB3E4F6971A51D456AD3D2510EFB0D02B10F5D3BA56948E953E0D77F9. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:40) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:44) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:39) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,412Z [main] internal.Verifier. - Error validating transaction 2D3487AEB3E4F6971A51D456AD3D2510EFB0D02B10F5D3BA56948E953E0D77F9. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:40) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:44) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:39) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,418Z [main] internal.Verifier. - Error validating transaction 2D3487AEB3E4F6971A51D456AD3D2510EFB0D02B10F5D3BA56948E953E0D77F9. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:40) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:39) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,498Z [main] internal.Verifier. - Error validating transaction C1EE14087918D4796DA83C66FE314F2AF2E03F72156510752D6D0AD45F5276BB. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:71) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:68) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:67) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,499Z [main] internal.Verifier. - Error validating transaction C1EE14087918D4796DA83C66FE314F2AF2E03F72156510752D6D0AD45F5276BB. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:183) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:77) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:71) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:278) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:302) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:68) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:67) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[ERROR] 2020-04-15T09:18:36,503Z [main] internal.Verifier. - Error validating transaction C1EE14087918D4796DA83C66FE314F2AF2E03F72156510752D6D0AD45F5276BB. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.4/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:47) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:38) ~[main/:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:68) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:67) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) ~[junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ~[junit-rt.jar:?]
[INFO ] 2020-04-15T09:20:54,688Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/contracts-java ... {}
[INFO ] 2020-04-15T09:20:54,868Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:55,921Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T09:20:55,954Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:55,993Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,005Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T09:20:56,005Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,005Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T09:20:56,017Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,017Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T09:20:56,017Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,048Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,048Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,048Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T09:20:56,048Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,049Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,070Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,071Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T09:20:56,071Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,071Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T09:20:56,082Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,082Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T09:20:56,082Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,082Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T09:20:56,094Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,094Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,104Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,104Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,104Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,115Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,115Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,126Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T09:20:56,151Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,152Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T09:20:56,163Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,163Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,163Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T09:20:56,173Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,173Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,173Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':contracts-java' {}
[INFO ] 2020-04-15T09:20:56,173Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,179Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,186Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T09:20:56,186Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,201Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T09:20:56,480Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T09:20:56,481Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,486Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T09:20:56,486Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,505Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,516Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T09:20:56,517Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,517Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T09:20:56,517Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,517Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T09:20:56,517Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T09:20:56,550Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,550Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T09:20:56,563Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T09:20:56,584Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,584Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T09:20:56,584Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,584Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T09:20:56,597Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,597Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T09:20:56,597Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,597Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T09:20:56,617Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T09:20:56,617Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,628Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,641Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,641Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,661Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,661Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,661Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,661Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T09:20:56,661Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T09:20:56,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T09:20:56,684Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,684Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,684Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T09:20:56,684Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,684Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,695Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T09:20:56,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,728Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T09:20:56,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T09:20:56,728Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T09:20:56,738Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,738Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T09:20:56,738Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,739Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,739Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,759Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T09:20:56,769Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T09:20:56,769Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,770Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T09:20:56,770Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T09:20:56,770Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,781Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T09:20:56,781Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T09:20:56,784Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T09:20:56,906Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092050.446/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:20:56,910Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:20:56,916Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:20:56,975Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:20:57,553Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:20:57,580Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:20:57,639Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:20:57,639Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:20:57,743Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:20:48.747Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:01,139Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:01,144Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092050.446/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:01,144Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:01,171Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:01,212Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:01,215Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:02,745Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,214Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,216Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,218Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,218Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,277Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:03,306Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:03,319Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:03,319Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:03,511Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:03,517Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:03,517Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:03,520Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:03,635Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:03,679Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:03,695Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:03,718Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:03,746Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:03,752Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:03,754Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:04,088Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:04,112Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:04,113Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:04,113Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:04,113Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:04,118Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092050.446/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:04,119Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:04,119Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:04,124Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:04,142Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:04,143Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:04,158Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:04,159Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:04,161Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:20:48.747Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:04,586Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,588Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092050.446/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,588Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,606Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,608Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,608Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,684Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,693Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,694Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,695Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,695Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,737Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:04,742Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:04,743Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:04,743Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:04,822Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:04,823Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:04,840Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:04,840Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,841Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:04,847Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,853Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:04,855Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,860Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:04,880Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:04,887Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,890Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:04,891Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:04,899Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,900Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:04,909Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,909Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:04,909Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:04,909Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:04,913Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092050.446/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:04,913Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:04,913Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:04,918Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092050.446/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:04,937Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:04,938Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:04,954Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:04,954Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:04,956Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:20:48.747Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:05,242Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,244Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092050.446/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,244Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,256Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,258Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,258Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,324Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,331Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,331Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,333Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,333Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,366Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:05,369Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:05,370Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:05,370Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:05,445Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:05,446Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:05,460Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:05,460Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,461Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:05,465Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,469Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:05,471Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,474Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:05,495Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:05,500Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,502Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942463517) {}
[INFO ] 2020-04-15T09:21:05,503Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:05,509Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,510Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:05,516Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942464840) {}
[INFO ] 2020-04-15T09:21:05,517Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:05,523Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,524Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:05,529Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,529Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:05,529Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942465460) {}
[INFO ] 2020-04-15T09:21:05,529Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:05,530Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:05,530Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:05,532Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:05,532Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:05,987Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326}
[WARN ] 2020-04-15T09:21:05,987Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326}
[INFO ] 2020-04-15T09:21:06,409Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,443Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,510Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,510Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,571Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,591Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,600Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,605Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,616Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=c20a6d0e-bcfe-411b-927a-26cdd0424e31, invocation_id=f1590b4e-07d3-40db-900b-8ece114e4358, invocation_timestamp=2020-04-15T09:21:06.369Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f1590b4e-07d3-40db-900b-8ece114e4358, session_timestamp=2020-04-15T09:21:06.369Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,637Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,637Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=652872fd-c066-4b27-adfe-a9f00262d959, invocation_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, invocation_timestamp=2020-04-15T09:21:05.580Z, origin=Only For Testing, session_id=338a7e62-24a8-42b2-9a79-bfa9dd718f46, session_timestamp=2020-04-15T09:21:05.580Z, thread-id=326, tx_id=23C78FEBF73E0B8E7E09DBA37E3612A0BE7E6352A11A3A2E1C62CA16F29E014C}
[INFO ] 2020-04-15T09:21:06,737Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092106.679/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:21:06,738Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:06,738Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:06,745Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:06,771Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:06,771Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:06,777Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:06,777Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:06,784Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:06.679Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:07,132Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,132Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092106.679/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,132Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,144Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,146Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,146Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,198Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,203Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,204Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,205Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,205Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,239Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,261Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:07,267Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,267Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,346Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,350Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:07,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,351Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:07,361Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,367Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:07,369Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,372Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,392Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:07,394Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:07,394Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:07,398Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,400Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,400Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,400Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,400Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,404Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092106.679/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:07,404Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:07,404Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:07,409Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:07,423Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:07,424Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:07,439Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:07,439Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:07,440Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:06.679Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:07,688Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,689Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092106.679/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,689Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,699Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,701Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,701Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,761Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,766Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,767Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,768Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,768Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,804Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:07,807Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:07,808Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,808Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,892Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:07,893Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:07,907Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:07,907Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,909Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:07,913Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,918Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:07,920Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,925Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,960Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:07,965Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,967Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:07,968Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:07,975Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,976Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:07,984Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,984Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,984Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:07,984Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:07,989Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092106.679/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:07,990Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:07,990Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:07,996Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092106.679/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:08,012Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:08,013Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:08,026Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:08,026Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:08,028Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:06.679Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:08,290Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,291Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092106.679/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,291Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,301Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,303Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,303Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,373Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,380Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,381Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,382Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,382Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,422Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:08,425Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:08,426Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:08,426Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:08,506Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:08,507Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:08,520Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:08,520Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,522Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:08,527Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,531Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:08,534Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,538Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:08,558Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:08,563Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,565Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942467350) {}
[INFO ] 2020-04-15T09:21:08,566Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:08,572Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,573Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:08,580Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942467907) {}
[INFO ] 2020-04-15T09:21:08,580Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:08,586Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,586Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:08,593Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,593Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:08,593Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942468520) {}
[INFO ] 2020-04-15T09:21:08,593Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:08,593Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:08,593Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:08,593Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:08,593Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:08,691Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,700Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,751Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=35e09764-73ed-4702-aa90-822c17a3cc3d, invocation_id=03375de7-742e-4b38-ad0e-c06ef34e244d, invocation_timestamp=2020-04-15T09:21:08.594Z, origin=Only For Testing, session_id=03375de7-742e-4b38-ad0e-c06ef34e244d, session_timestamp=2020-04-15T09:21:08.594Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,751Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=35e09764-73ed-4702-aa90-822c17a3cc3d, invocation_id=03375de7-742e-4b38-ad0e-c06ef34e244d, invocation_timestamp=2020-04-15T09:21:08.594Z, origin=Only For Testing, session_id=03375de7-742e-4b38-ad0e-c06ef34e244d, session_timestamp=2020-04-15T09:21:08.594Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,768Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=35e09764-73ed-4702-aa90-822c17a3cc3d, invocation_id=03375de7-742e-4b38-ad0e-c06ef34e244d, invocation_timestamp=2020-04-15T09:21:08.594Z, origin=Only For Testing, session_id=03375de7-742e-4b38-ad0e-c06ef34e244d, session_timestamp=2020-04-15T09:21:08.594Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,780Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,787Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,792Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,799Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=d513f968-b7bb-4def-bfc3-86e7b959212a, invocation_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, invocation_timestamp=2020-04-15T09:21:08.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2ba2f5cf-efdc-49df-9bfb-1bb2188f0ebe, session_timestamp=2020-04-15T09:21:08.678Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,805Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=35e09764-73ed-4702-aa90-822c17a3cc3d, invocation_id=03375de7-742e-4b38-ad0e-c06ef34e244d, invocation_timestamp=2020-04-15T09:21:08.594Z, origin=Only For Testing, session_id=03375de7-742e-4b38-ad0e-c06ef34e244d, session_timestamp=2020-04-15T09:21:08.594Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,805Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=35e09764-73ed-4702-aa90-822c17a3cc3d, invocation_id=03375de7-742e-4b38-ad0e-c06ef34e244d, invocation_timestamp=2020-04-15T09:21:08.594Z, origin=Only For Testing, session_id=03375de7-742e-4b38-ad0e-c06ef34e244d, session_timestamp=2020-04-15T09:21:08.594Z, thread-id=607, tx_id=449F9B35C192C74771B14334C44BCB0BE7EF6EC644A041533358FEEE64DB89CB}
[INFO ] 2020-04-15T09:21:08,869Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092108.823/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:21:08,869Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:08,869Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:08,875Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:08,896Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:08,897Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:08,902Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:08,902Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:08,909Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:08.823Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:09,217Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,218Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092108.823/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,218Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,227Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,229Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,229Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,276Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,283Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,284Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,286Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,286Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,322Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,337Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:09,342Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:09,342Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:09,411Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:09,414Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:09,414Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,415Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:09,425Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,432Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:09,435Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,438Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:09,463Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:09,466Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:09,466Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:09,470Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,472Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,472Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:09,472Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:09,472Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:09,477Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092108.823/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:09,478Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:09,478Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:09,484Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:09,503Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:09,503Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:09,519Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:09,519Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:09,521Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:08.823Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:09,822Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,823Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092108.823/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,823Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,836Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,838Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,838Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,906Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,912Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,913Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,914Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,914Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,950Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:09,953Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:09,954Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:09,954Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:10,022Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:10,023Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:10,035Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:10,035Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,036Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,039Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,044Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:10,046Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,048Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:10,065Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:10,069Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,071Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:10,072Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:10,077Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,078Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,084Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,084Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:10,084Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,084Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:10,088Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092108.823/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:10,088Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:10,088Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:10,094Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092108.823/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:10,109Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:10,109Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:10,121Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:10,121Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:10,123Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:08.823Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:10,401Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,402Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092108.823/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,402Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,413Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,414Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,414Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,480Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,486Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,487Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,489Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,489Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,524Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:10,527Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:10,527Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:10,527Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:10,594Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:10,594Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:10,608Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:10,608Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,609Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,612Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,615Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:10,617Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,619Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:10,636Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:10,641Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,643Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942469414) {}
[INFO ] 2020-04-15T09:21:10,643Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:10,649Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,649Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,654Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942470035) {}
[INFO ] 2020-04-15T09:21:10,654Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,659Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,660Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:10,664Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,664Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:10,665Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942470608) {}
[INFO ] 2020-04-15T09:21:10,665Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:10,665Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:10,665Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:10,665Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:10,665Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:10,757Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,764Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,806Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae73f5a4-26ff-461b-acb2-76d443fb168a, invocation_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, invocation_timestamp=2020-04-15T09:21:10.666Z, origin=Only For Testing, session_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, session_timestamp=2020-04-15T09:21:10.666Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,806Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae73f5a4-26ff-461b-acb2-76d443fb168a, invocation_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, invocation_timestamp=2020-04-15T09:21:10.666Z, origin=Only For Testing, session_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, session_timestamp=2020-04-15T09:21:10.666Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,820Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae73f5a4-26ff-461b-acb2-76d443fb168a, invocation_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, invocation_timestamp=2020-04-15T09:21:10.666Z, origin=Only For Testing, session_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, session_timestamp=2020-04-15T09:21:10.666Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,828Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,832Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,835Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,841Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=0c2b0764-8290-4076-b74d-5302cd67f3aa, invocation_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, invocation_timestamp=2020-04-15T09:21:10.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c4ce90d3-d97b-4e64-8798-95c1f6ce0fc3, session_timestamp=2020-04-15T09:21:10.746Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,846Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae73f5a4-26ff-461b-acb2-76d443fb168a, invocation_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, invocation_timestamp=2020-04-15T09:21:10.666Z, origin=Only For Testing, session_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, session_timestamp=2020-04-15T09:21:10.666Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,847Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae73f5a4-26ff-461b-acb2-76d443fb168a, invocation_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, invocation_timestamp=2020-04-15T09:21:10.666Z, origin=Only For Testing, session_id=d1dc88e4-7112-4dd3-9bcd-0728fc8bf736, session_timestamp=2020-04-15T09:21:10.666Z, thread-id=883, tx_id=7170E1504492C7ED054A8D0FD1EE7D8271D9FB7A8D330B282CC13BA54DEB7394}
[INFO ] 2020-04-15T09:21:10,886Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092110.855/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:21:10,886Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:10,886Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:10,890Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:10,902Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:10,902Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:10,905Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:10,905Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:10,908Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:10.855Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:11,153Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,154Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092110.855/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,154Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,165Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,166Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,166Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,216Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,221Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,222Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,223Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,223Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,251Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,261Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:11,266Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,266Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,319Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,322Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:11,322Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,323Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:11,331Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,336Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:11,339Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,342Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,359Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:11,361Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:11,361Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:11,363Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,364Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,364Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,364Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,364Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,368Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092110.855/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:11,368Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:11,368Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:11,373Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:11,386Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:11,387Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:11,403Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:11,403Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:11,404Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:10.855Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:11,664Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,664Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092110.855/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,664Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,671Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,672Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,672Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,708Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,711Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,711Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,712Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,712Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,740Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:11,742Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:11,743Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,743Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,795Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:11,796Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:11,807Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:11,807Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,808Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:11,810Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,813Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:11,815Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,817Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,833Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:11,837Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,838Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:11,839Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:11,844Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,845Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:11,850Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,850Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,850Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:11,850Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:11,854Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092110.855/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:11,854Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:11,854Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:11,859Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092110.855/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:11,872Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:11,872Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:11,889Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:11,889Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:11,891Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:10.855Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:12,102Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,103Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092110.855/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,103Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,109Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,110Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,110Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,145Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,149Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,150Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,151Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,151Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,178Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,180Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:12,181Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,181Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,229Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,230Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:12,244Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:12,244Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,245Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:12,249Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,252Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:12,254Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,258Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:12,275Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:12,280Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,281Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942471322) {}
[INFO ] 2020-04-15T09:21:12,282Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:12,286Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,287Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:12,293Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942471807) {}
[INFO ] 2020-04-15T09:21:12,294Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:12,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,301Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:12,305Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,305Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:12,305Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942472244) {}
[INFO ] 2020-04-15T09:21:12,305Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:12,305Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:12,305Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:12,305Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:12,305Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:12,370Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,377Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,410Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=62e6a1e7-798d-41ca-b445-94a00a074bf0, invocation_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, invocation_timestamp=2020-04-15T09:21:12.306Z, origin=Only For Testing, session_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, session_timestamp=2020-04-15T09:21:12.306Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,410Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=62e6a1e7-798d-41ca-b445-94a00a074bf0, invocation_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, invocation_timestamp=2020-04-15T09:21:12.306Z, origin=Only For Testing, session_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, session_timestamp=2020-04-15T09:21:12.306Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,421Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=62e6a1e7-798d-41ca-b445-94a00a074bf0, invocation_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, invocation_timestamp=2020-04-15T09:21:12.306Z, origin=Only For Testing, session_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, session_timestamp=2020-04-15T09:21:12.306Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,428Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,432Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,436Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,444Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=3b0bcb48-8f4e-4e28-8bf2-6bc4ada2525c, invocation_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, invocation_timestamp=2020-04-15T09:21:12.362Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ebd711d9-47dd-46d7-8976-ef0755ca58ae, session_timestamp=2020-04-15T09:21:12.362Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,450Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=62e6a1e7-798d-41ca-b445-94a00a074bf0, invocation_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, invocation_timestamp=2020-04-15T09:21:12.306Z, origin=Only For Testing, session_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, session_timestamp=2020-04-15T09:21:12.306Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,450Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=62e6a1e7-798d-41ca-b445-94a00a074bf0, invocation_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, invocation_timestamp=2020-04-15T09:21:12.306Z, origin=Only For Testing, session_id=7a15f11d-6391-47f7-ab81-2e269aa6283e, session_timestamp=2020-04-15T09:21:12.306Z, thread-id=1159, tx_id=F1181F26D714696FD50D71D4B63CE06937F10712A393685579265A46A0A133BF}
[INFO ] 2020-04-15T09:21:12,494Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092112.463/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:21:12,495Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:12,495Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:12,499Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:12,511Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:12,512Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:12,514Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:12,514Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:12,517Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:12.463Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:12,728Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,729Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092112.463/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,729Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,736Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,737Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,737Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,776Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,780Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,780Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,781Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,781Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,812Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:12,824Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:12,830Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,830Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,896Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:12,899Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:12,899Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,900Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:12,908Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,913Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:12,915Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,917Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:12,934Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:12,935Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:12,935Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:12,937Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,939Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,939Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:12,939Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:12,939Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:12,942Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092112.463/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:12,942Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:12,942Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:12,947Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:12,959Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:12,959Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:12,969Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:12,969Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:12,970Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:12.463Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:13,190Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,191Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092112.463/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,191Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,197Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,198Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,198Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,239Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,242Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,243Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,244Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,244Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,269Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,271Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:13,271Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,271Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,321Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,322Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:13,333Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:13,333Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,333Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,336Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,339Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:13,341Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,343Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:13,357Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:13,360Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,362Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:13,362Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:13,365Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,366Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,369Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,369Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:13,369Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,369Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:13,372Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092112.463/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:13,372Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:13,372Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:13,376Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092112.463/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:13,387Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:13,388Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:13,403Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:13,403Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:13,404Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:12.463Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:13,599Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,600Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092112.463/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,600Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,608Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,609Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,609Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,649Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,653Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,654Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,655Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,655Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,680Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:13,682Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:13,683Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,683Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,733Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:13,734Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:13,744Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:13,744Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,745Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,747Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,750Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:13,752Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,754Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:13,768Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:13,772Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942472899) {}
[INFO ] 2020-04-15T09:21:13,774Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:13,777Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,778Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,781Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942473333) {}
[INFO ] 2020-04-15T09:21:13,782Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,786Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,787Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:13,790Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,790Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:13,790Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942473744) {}
[INFO ] 2020-04-15T09:21:13,790Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:13,790Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:13,790Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:13,790Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:13,790Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:13,850Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,855Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,880Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a112c7a1-417e-411d-8649-5e091fdb2b3c, invocation_id=988726ed-19d2-4997-a981-52964f3ede2f, invocation_timestamp=2020-04-15T09:21:13.791Z, origin=Only For Testing, session_id=988726ed-19d2-4997-a981-52964f3ede2f, session_timestamp=2020-04-15T09:21:13.791Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,880Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a112c7a1-417e-411d-8649-5e091fdb2b3c, invocation_id=988726ed-19d2-4997-a981-52964f3ede2f, invocation_timestamp=2020-04-15T09:21:13.791Z, origin=Only For Testing, session_id=988726ed-19d2-4997-a981-52964f3ede2f, session_timestamp=2020-04-15T09:21:13.791Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,890Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a112c7a1-417e-411d-8649-5e091fdb2b3c, invocation_id=988726ed-19d2-4997-a981-52964f3ede2f, invocation_timestamp=2020-04-15T09:21:13.791Z, origin=Only For Testing, session_id=988726ed-19d2-4997-a981-52964f3ede2f, session_timestamp=2020-04-15T09:21:13.791Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,896Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,900Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,902Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,907Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=a0e6f7b0-18a8-4220-a27e-4689dc6f90d8, invocation_id=383817ac-1db4-4f4b-ae53-96ee1789b842, invocation_timestamp=2020-04-15T09:21:13.842Z, origin=O=Mock Company 1, L=London, C=GB, session_id=383817ac-1db4-4f4b-ae53-96ee1789b842, session_timestamp=2020-04-15T09:21:13.842Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,911Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a112c7a1-417e-411d-8649-5e091fdb2b3c, invocation_id=988726ed-19d2-4997-a981-52964f3ede2f, invocation_timestamp=2020-04-15T09:21:13.791Z, origin=Only For Testing, session_id=988726ed-19d2-4997-a981-52964f3ede2f, session_timestamp=2020-04-15T09:21:13.791Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,911Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a112c7a1-417e-411d-8649-5e091fdb2b3c, invocation_id=988726ed-19d2-4997-a981-52964f3ede2f, invocation_timestamp=2020-04-15T09:21:13.791Z, origin=Only For Testing, session_id=988726ed-19d2-4997-a981-52964f3ede2f, session_timestamp=2020-04-15T09:21:13.791Z, thread-id=1435, tx_id=4FEEE23F34BF6BEC1DB724F806484F89641DF9371FC9A69AB79F1607903A27F5}
[INFO ] 2020-04-15T09:21:13,995Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092113.965/nodes/0/cordapps] {}
[INFO ] 2020-04-15T09:21:13,995Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:13,995Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,000Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,012Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:14,012Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:14,014Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,014Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,017Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:13.965Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:14,212Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,212Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092113.965/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,212Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,218Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,219Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,219Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,253Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,258Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,258Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,259Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,259Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,284Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,293Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:14,298Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,298Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,350Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,352Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:14,352Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,353Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:14,358Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,362Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:14,364Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,366Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,380Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:14,381Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T09:21:14,381Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T09:21:14,383Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,384Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,384Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,384Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,384Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,387Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092113.965/nodes/1/cordapps] {}
[INFO ] 2020-04-15T09:21:14,388Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:14,388Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,392Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,402Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:14,403Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:14,413Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,413Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,414Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:13.965Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:14,640Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,641Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092113.965/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,641Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,649Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,649Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,649Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,686Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,691Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,691Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,692Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,692Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,717Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:14,719Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:14,719Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,719Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,770Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:14,770Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:14,780Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:14,780Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,781Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:14,783Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,786Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:14,788Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,790Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,805Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:14,809Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,810Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:14,810Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:14,814Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,814Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:14,817Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,818Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,818Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:14,818Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:14,821Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-092113.965/nodes/2/cordapps] {}
[INFO ] 2020-04-15T09:21:14,821Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T09:21:14,821Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,825Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-092113.965/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T09:21:14,837Z [main] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T09:21:14,837Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T09:21:14,850Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,850Z [main] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:14,852Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T09:21:13.965Z
      epoch=1
  } {}
[INFO ] 2020-04-15T09:21:15,024Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,025Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-092113.965/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,025Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,031Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,031Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,031Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,064Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,068Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,068Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,069Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,069Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,093Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T09:21:15,095Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T09:21:15,096Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:15,096Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:15,144Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T09:21:15,144Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T09:21:15,155Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T09:21:15,155Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,155Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:15,158Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,161Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T09:21:15,162Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,165Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:15,177Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=9C563FA7B6745C4BB4CF309C6EE24954C3D7AC751D0F4BE9390394D7C9BF6412 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T09:21:15,180Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,182Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586942474352) {}
[INFO ] 2020-04-15T09:21:15,182Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T09:21:15,185Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,185Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:15,188Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586942474780) {}
[INFO ] 2020-04-15T09:21:15,188Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:15,191Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,191Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T09:21:15,196Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,196Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T09:21:15,196Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586942475155) {}
[INFO ] 2020-04-15T09:21:15,196Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-15T09:21:15,196Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:15,196Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2020-04-15T09:21:15,196Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2020-04-15T09:21:15,196Z [main] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T09:21:15,249Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,254Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,277Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=60302617-54d1-411d-8d6d-67e08a575879, invocation_id=e0fe3788-1410-48b6-9853-700b36422a6e, invocation_timestamp=2020-04-15T09:21:15.197Z, origin=Only For Testing, session_id=e0fe3788-1410-48b6-9853-700b36422a6e, session_timestamp=2020-04-15T09:21:15.197Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,277Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=60302617-54d1-411d-8d6d-67e08a575879, invocation_id=e0fe3788-1410-48b6-9853-700b36422a6e, invocation_timestamp=2020-04-15T09:21:15.197Z, origin=Only For Testing, session_id=e0fe3788-1410-48b6-9853-700b36422a6e, session_timestamp=2020-04-15T09:21:15.197Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,287Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=60302617-54d1-411d-8d6d-67e08a575879, invocation_id=e0fe3788-1410-48b6-9853-700b36422a6e, invocation_timestamp=2020-04-15T09:21:15.197Z, origin=Only For Testing, session_id=e0fe3788-1410-48b6-9853-700b36422a6e, session_timestamp=2020-04-15T09:21:15.197Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,293Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,297Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,299Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,303Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=0571f469-1b62-406f-8fc5-e1de4c2a52fc, invocation_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, invocation_timestamp=2020-04-15T09:21:15.242Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5baeafaa-52ac-4e75-a648-f78c63a8f037, session_timestamp=2020-04-15T09:21:15.242Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,308Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=60302617-54d1-411d-8d6d-67e08a575879, invocation_id=e0fe3788-1410-48b6-9853-700b36422a6e, invocation_timestamp=2020-04-15T09:21:15.197Z, origin=Only For Testing, session_id=e0fe3788-1410-48b6-9853-700b36422a6e, session_timestamp=2020-04-15T09:21:15.197Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T09:21:15,308Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=60302617-54d1-411d-8d6d-67e08a575879, invocation_id=e0fe3788-1410-48b6-9853-700b36422a6e, invocation_timestamp=2020-04-15T09:21:15.197Z, origin=Only For Testing, session_id=e0fe3788-1410-48b6-9853-700b36422a6e, session_timestamp=2020-04-15T09:21:15.197Z, thread-id=1711, tx_id=F46FFCE65B9C9F12A961A807DE014EA223802DFEBE4DB4590B9B921C49CE83E8}
[INFO ] 2020-04-15T10:25:42,119Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/NotaryService {}
[INFO ] 2020-04-15T10:25:42,602Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T10:25:42,721Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/NotaryService/cordapps] {}
[INFO ] 2020-04-15T10:25:42,729Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/NotaryService/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:25:42,737Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/NotaryService/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar {}
[INFO ] 2020-04-15T10:25:43,410Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:25:43,438Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:25:43,488Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:43,488Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:43,580Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:25:39.634Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:25:46,850Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:46,853Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:46,853Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:46,878Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:46,912Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:46,915Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:48,826Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,310Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,311Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,314Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,314Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,372Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:49,399Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:25:49,414Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:25:49,414Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:25:49,600Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:25:49,606Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:25:49,606Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:49,610Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:25:49,709Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:49,749Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:25:49,758Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:49,762Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:25:49,776Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:25:50,029Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10117 {}
[INFO ] 2020-04-15T10:25:50,031Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10118 {}
[INFO ] 2020-04-15T10:25:50,031Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10119 {}
[INFO ] 2020-04-15T10:25:51,068Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10117 {}
[INFO ] 2020-04-15T10:25:51,243Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10117 {}
[INFO ] 2020-04-15T10:25:51,656Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10117 {}
[INFO ] 2020-04-15T10:25:51,908Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10117 {}
[INFO ] 2020-04-15T10:25:51,938Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLfotQ5nqFnm3Kn3ciEk3YyZVhuzGrdRqhNena7WrUr3E bound on same address {}
[INFO ] 2020-04-15T10:25:51,985Z [Thread-0 (ActiveMQ-client-factory-threads-532051052)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DLfotQ5nqFnm3Kn3ciEk3YyZVhuzGrdRqhNena7WrUr3E], sendQueues=[]) {}
[INFO ] 2020-04-15T10:25:52,007Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=E1E38CFB2F51ECCE6EF402988A6418740F4C4987555583C8BA962D9509050252 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:25:52,012Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T10:25:52,014Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T10:25:52,327Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:52,342Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:25:52,342Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:25:52,348Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:25:52,386Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:25:52,493Z [driver-pool-thread-0] internal.RPCClient. - Startup took 129 msec {}
[INFO ] 2020-04-15T10:25:52,577Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankA {}
[INFO ] 2020-04-15T10:25:52,578Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T10:25:52,579Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankA/cordapps] {}
[INFO ] 2020-04-15T10:25:52,579Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankA/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:25:52,579Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankA/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar {}
[INFO ] 2020-04-15T10:25:52,594Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:25:52,594Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:25:52,597Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB {}
[INFO ] 2020-04-15T10:25:52,598Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T10:25:52,599Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB/cordapps] {}
[INFO ] 2020-04-15T10:25:52,600Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:25:52,600Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB/cordapps/custom-cordapp_1_6_487b6a49-d06f-43e1-9ba8-1261512be439.jar {}
[INFO ] 2020-04-15T10:25:52,618Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:25:52,618Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:25:52,622Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:52,622Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:52,625Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:25:39.634Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:25:52,647Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:52,647Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:25:52,650Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:25:39.634Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:25:53,004Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,006Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,006Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,021Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,023Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,023Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,092Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,102Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,103Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,104Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,104Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,155Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,160Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:25:53,162Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,162Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,263Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,264Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:25:53,284Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:25:53,284Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:53,286Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:25:53,292Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:53,299Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:25:53,299Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:25:53,301Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10121 {}
[INFO ] 2020-04-15T10:25:53,301Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10122 {}
[INFO ] 2020-04-15T10:25:53,301Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10123 {}
[INFO ] 2020-04-15T10:25:53,303Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:53,311Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:25:53,311Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:53,312Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:25:53,394Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10121 {}
[INFO ] 2020-04-15T10:25:53,483Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,484Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-102539.616/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,484Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,490Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10121 {}
[INFO ] 2020-04-15T10:25:53,502Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,507Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,508Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,538Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10121 {}
[INFO ] 2020-04-15T10:25:53,574Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10121 {}
[INFO ] 2020-04-15T10:25:53,592Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,600Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLDVfxMVsUnGUeWyGvftPsPDpuAbpzkbPrKoNeM5v2K2ha bound on same address {}
[INFO ] 2020-04-15T10:25:53,601Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,602Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,604Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,604Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,620Z [Thread-0 (ActiveMQ-client-factory-threads-1097398172)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DLDVfxMVsUnGUeWyGvftPsPDpuAbpzkbPrKoNeM5v2K2ha], sendQueues=[]) {}
[INFO ] 2020-04-15T10:25:53,643Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=E1E38CFB2F51ECCE6EF402988A6418740F4C4987555583C8BA962D9509050252 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:25:53,654Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:53,660Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:25:53,660Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:25:53,661Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:25:53,667Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:25:53,673Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:25:53,674Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,674Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,706Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:25:53,720Z [driver-pool-thread-1] internal.RPCClient. - Startup took 58 msec {}
[INFO ] 2020-04-15T10:25:53,784Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:25:53,785Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:25:53,797Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:25:53,797Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:53,798Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:25:53,803Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:53,807Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:25:53,807Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:25:53,808Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10125 {}
[INFO ] 2020-04-15T10:25:53,808Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10126 {}
[INFO ] 2020-04-15T10:25:53,808Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10127 {}
[INFO ] 2020-04-15T10:25:53,810Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10117], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946349606) {}
[INFO ] 2020-04-15T10:25:53,816Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:25:53,830Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:53,832Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:25:53,901Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10125 {}
[INFO ] 2020-04-15T10:25:53,980Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10125 {}
[INFO ] 2020-04-15T10:25:54,010Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10125 {}
[INFO ] 2020-04-15T10:25:54,036Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10125 {}
[INFO ] 2020-04-15T10:25:54,057Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLCE7o7YzwoQdvb2QGRXb9is7EagwftPsUkJtgpaFHiNo bound on same address {}
[INFO ] 2020-04-15T10:25:54,073Z [Thread-0 (ActiveMQ-client-factory-threads-1308415776)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLCE7o7YzwoQdvb2QGRXb9is7EagwftPsUkJtgpaFHiNo], sendQueues=[]) {}
[INFO ] 2020-04-15T10:25:54,087Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=E1E38CFB2F51ECCE6EF402988A6418740F4C4987555583C8BA962D9509050252 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:25:54,094Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:54,097Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:25:54,097Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:25:54,098Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:25:54,174Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:25:54,192Z [driver-pool-thread-0] internal.RPCClient. - Startup took 93 msec {}
[INFO ] 2020-04-15T10:25:54,302Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:54,303Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:25:54,314Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:54,759Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:54,760Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:25:54,770Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:54,771Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:54,772Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:25:54,779Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10125], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946353797) {}
[INFO ] 2020-04-15T10:25:54,814Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:54,815Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:25:54,822Z [InProcessNode-3-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10121], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946353284) {}
[INFO ] 2020-04-15T10:25:54,882Z [Thread-0 (ActiveMQ-client-factory-threads-1226254234)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.6817174678813362261, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=6a89399e-3827-46bf-9339-0e129efb61dc, invocation_timestamp=2020-04-15T10:25:54.848Z, origin=default, session_id=ec2689ff-e638-4b3a-beb6-a73080a989e0, session_timestamp=2020-04-15T10:25:54.098Z}
[INFO ] 2020-04-15T10:25:54,905Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:25:55,007Z [Thread-0 (ActiveMQ-client-factory-threads-961095754)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.3951088190346214493, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=681c9a05-6ad6-4e5b-ae7e-b6909fe44a00, invocation_timestamp=2020-04-15T10:25:54.840Z, origin=default, session_id=aa9c5d06-a85f-437f-9fb1-f20ccb8f28e8, session_timestamp=2020-04-15T10:25:53.661Z}
[INFO ] 2020-04-15T10:25:57,249Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:25:57,249Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:25:59,521Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:25:59,525Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:25:59,526Z [Thread-0 (ActiveMQ-client-factory-threads-1189220145)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.9072975624753219210, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=d375f15b-d9a1-47fe-bced-b9d57c4f23de, invocation_timestamp=2020-04-15T10:25:52.556Z, origin=default, session_id=ceed491a-eb4f-437e-afa3-f8314cbc06cd, session_timestamp=2020-04-15T10:25:52.366Z}
[INFO ] 2020-04-15T10:26:01,779Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:35:58,972Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/NotaryService {}
[INFO ] 2020-04-15T10:35:59,423Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T10:35:59,532Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/NotaryService/cordapps] {}
[INFO ] 2020-04-15T10:35:59,547Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/NotaryService/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:35:59,555Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/NotaryService/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:00,189Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:00,219Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:00,270Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:00,270Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:00,361Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:35:56.397Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:03,806Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:03,809Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:03,809Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:03,837Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:03,877Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:03,881Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:05,986Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,485Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,486Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,489Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,489Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,557Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:06,591Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:06,607Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:06,607Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:06,819Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:06,825Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:06,825Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:06,828Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:06,931Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:06,979Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:06,987Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:06,991Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:07,005Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:07,253Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10129 {}
[INFO ] 2020-04-15T10:36:07,256Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10130 {}
[INFO ] 2020-04-15T10:36:07,256Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10131 {}
[INFO ] 2020-04-15T10:36:08,173Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10129 {}
[INFO ] 2020-04-15T10:36:08,360Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10129 {}
[INFO ] 2020-04-15T10:36:08,805Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10129 {}
[INFO ] 2020-04-15T10:36:08,903Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10129 {}
[INFO ] 2020-04-15T10:36:08,934Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL52APnPH79SXdf8pQJLyfM5YfKfAtq5PSpUFfMqLMFZPx bound on same address {}
[INFO ] 2020-04-15T10:36:09,018Z [Thread-0 (ActiveMQ-client-factory-threads-284425986)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DL52APnPH79SXdf8pQJLyfM5YfKfAtq5PSpUFfMqLMFZPx], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:09,045Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:09,050Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T10:36:09,052Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T10:36:09,598Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:09,617Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:09,618Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:09,626Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:09,675Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:09,798Z [driver-pool-thread-0] internal.RPCClient. - Startup took 150 msec {}
[INFO ] 2020-04-15T10:36:09,889Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankA {}
[INFO ] 2020-04-15T10:36:09,890Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T10:36:09,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankA/cordapps] {}
[INFO ] 2020-04-15T10:36:09,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankA/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:36:09,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankA/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:09,903Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:09,903Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:09,906Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB {}
[INFO ] 2020-04-15T10:36:09,907Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T10:36:09,907Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB/cordapps] {}
[INFO ] 2020-04-15T10:36:09,907Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:36:09,907Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:09,929Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:09,929Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:09,931Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:09,931Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:09,934Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:35:56.397Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:09,957Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:09,957Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:09,960Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:35:56.397Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:10,388Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,390Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,390Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,408Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,410Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,410Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,497Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,506Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,507Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,508Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,508Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,552Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,556Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:10,558Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:10,558Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:10,662Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:10,663Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:36:10,684Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:10,684Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:10,685Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:10,693Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:10,700Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:10,700Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:10,702Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10133 {}
[INFO ] 2020-04-15T10:36:10,702Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10134 {}
[INFO ] 2020-04-15T10:36:10,702Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10135 {}
[INFO ] 2020-04-15T10:36:10,704Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:10,712Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:10,713Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:10,714Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:10,814Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10133 {}
[INFO ] 2020-04-15T10:36:10,918Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,920Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103556.381/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,920Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,935Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,939Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,939Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:10,951Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10133 {}
[INFO ] 2020-04-15T10:36:11,005Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10133 {}
[INFO ] 2020-04-15T10:36:11,053Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10133 {}
[INFO ] 2020-04-15T10:36:11,064Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,073Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,075Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,077Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,077Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,088Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLEUqDPUjKp5CuZ53rZeM9QZ7SUjY996K3Q9qhadWgcoHh bound on same address {}
[INFO ] 2020-04-15T10:36:11,117Z [Thread-0 (ActiveMQ-client-factory-threads-3445925)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DLEUqDPUjKp5CuZ53rZeM9QZ7SUjY996K3Q9qhadWgcoHh], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:11,142Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:11,150Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:11,154Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:11,154Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:11,156Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:11,156Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:11,162Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:11,162Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:11,162Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:11,220Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:11,239Z [driver-pool-thread-1] internal.RPCClient. - Startup took 76 msec {}
[INFO ] 2020-04-15T10:36:11,306Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:11,307Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:36:11,321Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:11,321Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,322Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:11,329Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,335Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:11,335Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:11,336Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10137 {}
[INFO ] 2020-04-15T10:36:11,336Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10138 {}
[INFO ] 2020-04-15T10:36:11,336Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10139 {}
[INFO ] 2020-04-15T10:36:11,340Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10129], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946966825) {}
[INFO ] 2020-04-15T10:36:11,348Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:11,363Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,366Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:11,436Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10137 {}
[INFO ] 2020-04-15T10:36:11,545Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10137 {}
[INFO ] 2020-04-15T10:36:11,577Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10137 {}
[INFO ] 2020-04-15T10:36:11,602Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10137 {}
[INFO ] 2020-04-15T10:36:11,623Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL2apkzFqCXU4ZDETEEmX3F9pyArXrbwNypXHhDXDn69JS bound on same address {}
[INFO ] 2020-04-15T10:36:11,640Z [Thread-0 (ActiveMQ-client-factory-threads-551956777)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DL2apkzFqCXU4ZDETEEmX3F9pyArXrbwNypXHhDXDn69JS], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:11,655Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:11,660Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,664Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:11,664Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:11,665Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:11,702Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,704Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:11,710Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:11,726Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:11,727Z [driver-pool-thread-0] internal.RPCClient. - Startup took 61 msec {}
[INFO ] 2020-04-15T10:36:11,987Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:11,988Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:11,998Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:12,000Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:12,001Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:12,008Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10137], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946971321) {}
[INFO ] 2020-04-15T10:36:12,339Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:12,340Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:12,347Z [InProcessNode-3-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10133], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946970684) {}
[INFO ] 2020-04-15T10:36:12,410Z [Thread-0 (ActiveMQ-client-factory-threads-1576059472)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.4103596095237188789, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=402c2838-8b98-4dca-a68e-e777919ab075, invocation_timestamp=2020-04-15T10:36:12.377Z, origin=default, session_id=7e1e59f6-d776-4b01-b114-2ef66c4e8ace, session_timestamp=2020-04-15T10:36:11.665Z}
[INFO ] 2020-04-15T10:36:12,435Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:12,435Z [Thread-0 (ActiveMQ-client-factory-threads-363670480)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.7257744418981916677, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=968cfca3-8098-4783-81f7-4bf5e9542e57, invocation_timestamp=2020-04-15T10:36:12.366Z, origin=default, session_id=0ef0e918-f3f4-4282-8777-9fbdb2ec7a34, session_timestamp=2020-04-15T10:36:11.163Z}
[INFO ] 2020-04-15T10:36:14,746Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:36:14,747Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:17,006Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:36:17,010Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:17,011Z [Thread-0 (ActiveMQ-client-factory-threads-1519606605)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.1806479269344556051, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=26c5a4ee-2255-46f5-8260-d408f2424270, invocation_timestamp=2020-04-15T10:36:09.864Z, origin=default, session_id=54a789b5-466a-4908-a39a-59444fe641c6, session_timestamp=2020-04-15T10:36:09.651Z}
[INFO ] 2020-04-15T10:36:19,251Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:36:19,319Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/NotaryService {}
[INFO ] 2020-04-15T10:36:19,321Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T10:36:19,321Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/NotaryService/cordapps] {}
[INFO ] 2020-04-15T10:36:19,321Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/NotaryService/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:36:19,321Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/NotaryService/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:19,332Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:19,332Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:19,335Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:19,335Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:19,339Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:36:19.253Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:19,681Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,682Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,682Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,691Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,692Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,692Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,744Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,751Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,752Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,753Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,753Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,787Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:19,803Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:19,813Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:19,813Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:19,899Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T10:36:19,902Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:19,902Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:19,903Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:19,914Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:19,920Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:19,920Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:19,921Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10141 {}
[INFO ] 2020-04-15T10:36:19,922Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10142 {}
[INFO ] 2020-04-15T10:36:19,922Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10143 {}
[INFO ] 2020-04-15T10:36:19,922Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:19,925Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:20,002Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10141 {}
[INFO ] 2020-04-15T10:36:20,088Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10141 {}
[INFO ] 2020-04-15T10:36:20,111Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10141 {}
[INFO ] 2020-04-15T10:36:20,132Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10141 {}
[INFO ] 2020-04-15T10:36:20,149Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL7QZtJHCmWCoHc9ccfhEV7PxVm4xCagohTbQ1ppXCipZy bound on same address {}
[INFO ] 2020-04-15T10:36:20,164Z [Thread-0 (ActiveMQ-client-factory-threads-985147535)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DL7QZtJHCmWCoHc9ccfhEV7PxVm4xCagohTbQ1ppXCipZy], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:20,178Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:20,180Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T10:36:20,180Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T10:36:20,184Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:20,187Z [Node thread-4] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:20,187Z [Node thread-4] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:20,187Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:20,219Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:20,233Z [driver-pool-thread-1] internal.RPCClient. - Startup took 45 msec {}
[INFO ] 2020-04-15T10:36:20,265Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankA {}
[INFO ] 2020-04-15T10:36:20,266Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T10:36:20,267Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankA/cordapps] {}
[INFO ] 2020-04-15T10:36:20,267Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankA/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:36:20,267Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankA/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:20,279Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB {}
[INFO ] 2020-04-15T10:36:20,279Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:20,280Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:20,281Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T10:36:20,282Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB/cordapps] {}
[INFO ] 2020-04-15T10:36:20,282Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T10:36:20,283Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB/cordapps/custom-cordapp_1_6_55492220-b122-4418-9470-2685900ed948.jar {}
[INFO ] 2020-04-15T10:36:20,294Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T10:36:20,295Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T10:36:20,302Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:20,302Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:20,304Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:36:19.253Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:20,315Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:20,315Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T10:36:20,318Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T10:36:19.253Z
      epoch=1
  } {}
[INFO ] 2020-04-15T10:36:20,619Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,621Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,621Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,633Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,635Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,635Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,700Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,706Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,707Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,708Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,708Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,753Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:20,756Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:20,757Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:20,757Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:20,854Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:20,855Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:36:20,870Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:20,870Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:20,872Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:20,878Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:20,883Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:20,884Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:20,886Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10145 {}
[INFO ] 2020-04-15T10:36:20,886Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10146 {}
[INFO ] 2020-04-15T10:36:20,886Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10147 {}
[INFO ] 2020-04-15T10:36:20,888Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:20,893Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:20,894Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:20,895Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:21,039Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10145 {}
[INFO ] 2020-04-15T10:36:21,180Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,181Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-103619.253/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,181Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,187Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10145 {}
[INFO ] 2020-04-15T10:36:21,199Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,201Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,201Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,228Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10145 {}
[INFO ] 2020-04-15T10:36:21,268Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10145 {}
[INFO ] 2020-04-15T10:36:21,300Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLAV5HJLTTgb5NvWPb8ayJEiDmAMG5WEswg8c1wDLAqSZW bound on same address {}
[INFO ] 2020-04-15T10:36:21,308Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,319Z [Thread-0 (ActiveMQ-client-factory-threads-258502062)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DLAV5HJLTTgb5NvWPb8ayJEiDmAMG5WEswg8c1wDLAqSZW], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:21,321Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,324Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,326Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,326Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,341Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:21,350Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:21,354Z [Node thread-5] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:21,354Z [Node thread-5] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:21,355Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:21,398Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:21,410Z [driver-pool-thread-0] internal.RPCClient. - Startup took 53 msec {}
[INFO ] 2020-04-15T10:36:21,415Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T10:36:21,421Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T10:36:21,422Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:21,422Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:21,520Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T10:36:21,521Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T10:36:21,539Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T10:36:21,539Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:21,541Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:21,546Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:21,550Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T10:36:21,550Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T10:36:21,551Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10149 {}
[INFO ] 2020-04-15T10:36:21,552Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10150 {}
[INFO ] 2020-04-15T10:36:21,552Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10151 {}
[INFO ] 2020-04-15T10:36:21,555Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:21,563Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:21,578Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10141], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586946979902) {}
[INFO ] 2020-04-15T10:36:21,579Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T10:36:21,587Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:21,590Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T10:36:21,662Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10149 {}
[INFO ] 2020-04-15T10:36:21,759Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10149 {}
[INFO ] 2020-04-15T10:36:21,784Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10149 {}
[INFO ] 2020-04-15T10:36:21,808Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10149 {}
[INFO ] 2020-04-15T10:36:21,827Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLEcCFHTxsysTBYbGnt9TrujvX9F89Bq89ojpCeujGhqAA bound on same address {}
[INFO ] 2020-04-15T10:36:21,841Z [Thread-0 (ActiveMQ-client-factory-threads-941390376)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLEcCFHTxsysTBYbGnt9TrujvX9F89Bq89ojpCeujGhqAA], sendQueues=[]) {}
[INFO ] 2020-04-15T10:36:21,853Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=CD675FC896B79B213F07CD924ACDF0D5F00AAFFE36F53CBF42C0463C40E0425D uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T10:36:21,858Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:21,861Z [Node thread-6] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T10:36:21,861Z [Node thread-6] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T10:36:21,862Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T10:36:21,894Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T10:36:21,904Z [driver-pool-thread-1] internal.RPCClient. - Startup took 42 msec {}
[INFO ] 2020-04-15T10:36:21,926Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:21,927Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T10:36:21,935Z [InProcessNode-4-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10145], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586946980870) {}
[INFO ] 2020-04-15T10:36:22,887Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:22,888Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:22,895Z [InProcessNode-5-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:22,925Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:22,925Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T10:36:22,931Z [InProcessNode-4-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10149], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586946981539) {}
[INFO ] 2020-04-15T10:36:22,958Z [Thread-0 (ActiveMQ-client-factory-threads-1661705029)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.5185590691974446430, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=b292ef34-dd1a-41d8-b901-36f1c17956d7, invocation_timestamp=2020-04-15T10:36:22.947Z, origin=default, session_id=853b80cd-eb99-441d-bc95-a187aea9a863, session_timestamp=2020-04-15T10:36:21.862Z}
[INFO ] 2020-04-15T10:36:22,967Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:22,971Z [Thread-0 (ActiveMQ-client-factory-threads-1737121450)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.1749133429773256905, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=a5eb2721-429e-4610-9806-47fcc1d5a969, invocation_timestamp=2020-04-15T10:36:22.942Z, origin=default, session_id=f7295a38-e2f5-47c5-a36c-027117de94d7, session_timestamp=2020-04-15T10:36:21.357Z}
[INFO ] 2020-04-15T10:36:25,245Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:36:25,245Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:27,505Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T10:36:27,508Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T10:36:29,745Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:37:55,509Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/NotaryService {}
[INFO ] 2020-04-15T11:37:55,930Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T11:37:56,040Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/NotaryService/cordapps] {}
[INFO ] 2020-04-15T11:37:56,055Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/NotaryService/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:37:56,062Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/NotaryService/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:37:56,626Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:37:56,654Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:37:56,700Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:37:56,700Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:37:56,788Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:37:52.936Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:00,176Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:00,179Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:00,179Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:00,212Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:00,259Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:00,264Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,346Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,842Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,844Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,847Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,847Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,906Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:02,935Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:02,948Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:02,948Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:03,135Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:03,140Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:03,140Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:03,144Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:03,253Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:03,304Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:03,313Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:03,317Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:03,331Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:03,593Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10165 {}
[INFO ] 2020-04-15T11:38:03,596Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10166 {}
[INFO ] 2020-04-15T11:38:03,596Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10167 {}
[INFO ] 2020-04-15T11:38:04,577Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10165 {}
[INFO ] 2020-04-15T11:38:04,757Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10165 {}
[INFO ] 2020-04-15T11:38:05,179Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10165 {}
[INFO ] 2020-04-15T11:38:05,279Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10165 {}
[INFO ] 2020-04-15T11:38:05,312Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLA4mHSgc9hnUbKWVQmzbggogSo64qkceVoSHLKasi5Faj bound on same address {}
[INFO ] 2020-04-15T11:38:05,393Z [Thread-0 (ActiveMQ-client-factory-threads-330968335)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DLA4mHSgc9hnUbKWVQmzbggogSo64qkceVoSHLKasi5Faj], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:05,418Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:05,423Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T11:38:05,425Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T11:38:05,934Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:05,949Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:05,949Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:05,955Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:05,993Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:06,112Z [driver-pool-thread-0] internal.RPCClient. - Startup took 139 msec {}
[INFO ] 2020-04-15T11:38:06,199Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankA {}
[INFO ] 2020-04-15T11:38:06,200Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T11:38:06,201Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankA/cordapps] {}
[INFO ] 2020-04-15T11:38:06,203Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankA/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:06,203Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankA/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:38:06,215Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB {}
[INFO ] 2020-04-15T11:38:06,216Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:06,216Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T11:38:06,216Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:06,217Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB/cordapps] {}
[INFO ] 2020-04-15T11:38:06,217Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:06,217Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:38:06,235Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:06,236Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:06,247Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:06,247Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:06,251Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:37:52.936Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:06,267Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:06,268Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:06,270Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:37:52.936Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:06,696Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,698Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,698Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,714Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,716Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,716Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,802Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,811Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,812Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,813Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,813Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,858Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:06,862Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:06,864Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:06,864Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:06,971Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:06,972Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:38:06,994Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:06,994Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:06,996Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:07,003Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,011Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:07,011Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:07,013Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10169 {}
[INFO ] 2020-04-15T11:38:07,013Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10170 {}
[INFO ] 2020-04-15T11:38:07,013Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10171 {}
[INFO ] 2020-04-15T11:38:07,016Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,026Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:07,027Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:07,028Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:07,147Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10169 {}
[INFO ] 2020-04-15T11:38:07,281Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10169 {}
[INFO ] 2020-04-15T11:38:07,309Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,310Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:07,328Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,331Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,332Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113752.919/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,332Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,336Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10169 {}
[INFO ] 2020-04-15T11:38:07,357Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,360Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,360Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,388Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10169 {}
[INFO ] 2020-04-15T11:38:07,426Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL4Q3N6sko3kgCGje6xu42LjD3BdxgswWE5k5wQTp52j15 bound on same address {}
[INFO ] 2020-04-15T11:38:07,452Z [Thread-0 (ActiveMQ-client-factory-threads-1586148025)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DL4Q3N6sko3kgCGje6xu42LjD3BdxgswWE5k5wQTp52j15], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:07,475Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:07,484Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,489Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:07,489Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:07,489Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:07,527Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,535Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:07,576Z [driver-pool-thread-1] internal.RPCClient. - Startup took 85 msec {}
[INFO ] 2020-04-15T11:38:07,578Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,580Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,582Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,582Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,636Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:07,641Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:07,642Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:07,642Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:07,741Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:07,743Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:38:07,762Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:07,762Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:07,763Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:07,771Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:07,779Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:07,780Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:07,781Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10173 {}
[INFO ] 2020-04-15T11:38:07,781Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10174 {}
[INFO ] 2020-04-15T11:38:07,781Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10175 {}
[INFO ] 2020-04-15T11:38:07,786Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10169], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950686994) {}
[INFO ] 2020-04-15T11:38:07,794Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:07,812Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10165], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950683140) {}
[INFO ] 2020-04-15T11:38:07,813Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:07,823Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:07,829Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:07,894Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10173 {}
[INFO ] 2020-04-15T11:38:07,987Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10173 {}
[INFO ] 2020-04-15T11:38:08,021Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10173 {}
[INFO ] 2020-04-15T11:38:08,048Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10173 {}
[INFO ] 2020-04-15T11:38:08,077Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLBBvKqW6FjuGXFaReLpqNXBz3LY8WfGmHRKS5uXrx5gyh bound on same address {}
[INFO ] 2020-04-15T11:38:08,098Z [Thread-0 (ActiveMQ-client-factory-threads-1712327486)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLBBvKqW6FjuGXFaReLpqNXBz3LY8WfGmHRKS5uXrx5gyh], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:08,115Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:08,122Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:08,127Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:08,127Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:08,128Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:08,177Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:08,190Z [driver-pool-thread-1] internal.RPCClient. - Startup took 62 msec {}
[INFO ] 2020-04-15T11:38:08,312Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:08,313Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:08,321Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:09,018Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:09,019Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:09,026Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10173], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950687762) {}
[INFO ] 2020-04-15T11:38:09,096Z [Thread-0 (ActiveMQ-client-factory-threads-686729628)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.6245172521593679235, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=b60a1edc-ca31-40d2-a0e9-fa9f6bf5da1c, invocation_timestamp=2020-04-15T11:38:09.059Z, origin=default, session_id=6bdd3d17-2879-4b05-b6bb-f6bf1811157d, session_timestamp=2020-04-15T11:38:08.128Z}
[INFO ] 2020-04-15T11:38:09,120Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:09,121Z [Thread-0 (ActiveMQ-client-factory-threads-1701063674)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.8259074313151299558, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=539d372e-d487-454f-b8ac-30858614bfb7, invocation_timestamp=2020-04-15T11:38:09.047Z, origin=default, session_id=901c72b9-e00a-4bf4-888e-44ab90ff1a57, session_timestamp=2020-04-15T11:38:07.491Z}
[INFO ] 2020-04-15T11:38:11,460Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:11,461Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:13,725Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:13,730Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:13,732Z [Thread-0 (ActiveMQ-client-factory-threads-1756913533)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.183142149655367436, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=e17ba264-756f-476e-aa30-c64717d1d1c4, invocation_timestamp=2020-04-15T11:38:06.175Z, origin=default, session_id=8158101e-c133-4408-907a-c2d21fa6dd67, session_timestamp=2020-04-15T11:38:05.975Z}
[INFO ] 2020-04-15T11:38:15,984Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:16,039Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/NotaryService {}
[INFO ] 2020-04-15T11:38:16,040Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T11:38:16,041Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/NotaryService/cordapps] {}
[INFO ] 2020-04-15T11:38:16,041Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/NotaryService/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:16,041Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/NotaryService/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:38:16,051Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:16,052Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:16,054Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,054Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,059Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:15.986Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:16,316Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,317Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,317Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,326Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,327Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,327Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,375Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,381Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,382Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,384Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,384Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,415Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:16,428Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:16,435Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:16,435Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:16,510Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:16,513Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:16,513Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:16,514Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:16,527Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:16,534Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:16,534Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:16,535Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10177 {}
[INFO ] 2020-04-15T11:38:16,536Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10178 {}
[INFO ] 2020-04-15T11:38:16,536Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10179 {}
[INFO ] 2020-04-15T11:38:16,536Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:16,540Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:16,618Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10177 {}
[INFO ] 2020-04-15T11:38:16,697Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10177 {}
[INFO ] 2020-04-15T11:38:16,718Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10177 {}
[INFO ] 2020-04-15T11:38:16,740Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10177 {}
[INFO ] 2020-04-15T11:38:16,758Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLAURzNWqKrREc46Lyo6KP1gZeuccvHZJFgAGfb97L9kZ1 bound on same address {}
[INFO ] 2020-04-15T11:38:16,773Z [Thread-0 (ActiveMQ-client-factory-threads-193374672)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DLAURzNWqKrREc46Lyo6KP1gZeuccvHZJFgAGfb97L9kZ1], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:16,785Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:16,787Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T11:38:16,787Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T11:38:16,791Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:16,793Z [Node thread-4] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:16,793Z [Node thread-4] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:16,793Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:16,817Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:16,828Z [driver-pool-thread-1] internal.RPCClient. - Startup took 34 msec {}
[INFO ] 2020-04-15T11:38:16,855Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankA {}
[INFO ] 2020-04-15T11:38:16,856Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T11:38:16,857Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankA/cordapps] {}
[INFO ] 2020-04-15T11:38:16,857Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankA/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:16,857Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankA/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:38:16,867Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB {}
[INFO ] 2020-04-15T11:38:16,867Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:16,867Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:16,867Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T11:38:16,868Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB/cordapps] {}
[INFO ] 2020-04-15T11:38:16,868Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:16,868Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB/cordapps/custom-cordapp_1_6_fe49733a-da78-4cb0-8cf5-0d3ce74fa376.jar {}
[INFO ] 2020-04-15T11:38:16,879Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:16,879Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:16,888Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,888Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,890Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:15.986Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:16,901Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,901Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:16,904Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:15.986Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:17,194Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,195Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,195Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,208Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,210Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,210Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,267Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,272Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,273Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,275Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,275Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,310Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,312Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:17,313Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,313Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,392Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,393Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:38:17,448Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:17,448Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:17,450Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:17,454Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:17,458Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:17,458Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:17,460Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10181 {}
[INFO ] 2020-04-15T11:38:17,460Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10182 {}
[INFO ] 2020-04-15T11:38:17,460Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10183 {}
[INFO ] 2020-04-15T11:38:17,462Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:17,465Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:17,466Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:17,466Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:17,563Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10181 {}
[INFO ] 2020-04-15T11:38:17,660Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,661Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113815.986/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,661Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,672Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,675Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,675Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,676Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10181 {}
[INFO ] 2020-04-15T11:38:17,711Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10181 {}
[INFO ] 2020-04-15T11:38:17,745Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10181 {}
[INFO ] 2020-04-15T11:38:17,750Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,756Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,757Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,759Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,759Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,768Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL5WLmviegrrpPia65MSxH6DPNpTwV9PmCwAm2p4KGeH7j bound on same address {}
[INFO ] 2020-04-15T11:38:17,782Z [Thread-0 (ActiveMQ-client-factory-threads-853496767)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DL5WLmviegrrpPia65MSxH6DPNpTwV9PmCwAm2p4KGeH7j], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:17,797Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:17,801Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:17,802Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:17,805Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:17,805Z [Node thread-5] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:17,805Z [Node thread-5] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:17,806Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:17,806Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,806Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,837Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:17,847Z [driver-pool-thread-0] internal.RPCClient. - Startup took 40 msec {}
[INFO ] 2020-04-15T11:38:17,893Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:38:17,893Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:38:17,905Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:17,906Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:17,906Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:17,910Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:17,914Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:17,914Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:17,915Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10185 {}
[INFO ] 2020-04-15T11:38:17,915Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10186 {}
[INFO ] 2020-04-15T11:38:17,915Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10187 {}
[INFO ] 2020-04-15T11:38:17,917Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10177], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950696513) {}
[INFO ] 2020-04-15T11:38:17,924Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:17,932Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:17,935Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:18,000Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10185 {}
[INFO ] 2020-04-15T11:38:18,107Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10185 {}
[INFO ] 2020-04-15T11:38:18,143Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10185 {}
[INFO ] 2020-04-15T11:38:18,170Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10185 {}
[INFO ] 2020-04-15T11:38:18,188Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLyTUnCjoWCHeVPcSkoBkBQ59jFahv8CgM9eJw9dpfhXa bound on same address {}
[INFO ] 2020-04-15T11:38:18,202Z [Thread-0 (ActiveMQ-client-factory-threads-1842232112)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLyTUnCjoWCHeVPcSkoBkBQ59jFahv8CgM9eJw9dpfhXa], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:18,214Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=5E7D8EE5C7F2FF0339D0081B809F8C190E30FD2175D2650519C42E3213248CE4 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:18,220Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:18,223Z [Node thread-6] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:18,223Z [Node thread-6] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:18,223Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:18,254Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:18,262Z [driver-pool-thread-1] internal.RPCClient. - Startup took 38 msec {}
[INFO ] 2020-04-15T11:38:18,463Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:18,463Z [InProcessNode-5-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:18,471Z [InProcessNode-5-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:18,540Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:18,541Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:18,551Z [InProcessNode-4-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:18,552Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:18,553Z [InProcessNode-4-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:38:18,558Z [InProcessNode-4-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10185], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950697906) {}
[INFO ] 2020-04-15T11:38:18,919Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:18,920Z [InProcessNode-6-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:38:18,925Z [InProcessNode-6-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10181], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950697448) {}
[INFO ] 2020-04-15T11:38:18,955Z [Thread-0 (ActiveMQ-client-factory-threads-165862106)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.4422813323025565216, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=723ade0d-29db-4ab1-8acf-82f22dde245e, invocation_timestamp=2020-04-15T11:38:18.942Z, origin=default, session_id=3231cebc-d5db-4c01-adc9-896f764b2136, session_timestamp=2020-04-15T11:38:18.224Z}
[INFO ] 2020-04-15T11:38:18,963Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:18,967Z [Thread-0 (ActiveMQ-client-factory-threads-189573839)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.6028416372661924893, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=f2de8c2f-d285-4bcd-b352-a3f1145ec4c7, invocation_timestamp=2020-04-15T11:38:18.936Z, origin=default, session_id=282bc62f-292c-44b9-a198-edf75fdef890, session_timestamp=2020-04-15T11:38:17.806Z}
[INFO ] 2020-04-15T11:38:21,241Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:21,241Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:23,500Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:23,503Z [main] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T11:38:23,503Z [Thread-0 (ActiveMQ-client-factory-threads-1545885435)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.7735372681605742721, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=af90ce88-4def-426e-84eb-7485c89e0e1c, invocation_timestamp=2020-04-15T11:38:16.845Z, origin=default, session_id=dfb41554-7ba8-4548-80f5-fb7a4d68b1c7, session_timestamp=2020-04-15T11:38:16.794Z}
[INFO ] 2020-04-15T11:38:25,741Z [main] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-15T11:38:48,189Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/NotaryService {}
[INFO ] 2020-04-15T11:38:48,729Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-15T11:38:48,837Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/NotaryService/cordapps] {}
[INFO ] 2020-04-15T11:38:48,852Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/NotaryService/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:48,858Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/NotaryService/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar {}
[INFO ] 2020-04-15T11:38:49,626Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:49,657Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:49,708Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:49,709Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:49,808Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:44.902Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:53,441Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:53,444Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:53,445Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:53,473Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:53,520Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:53,525Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:55,871Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,373Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,375Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,378Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,378Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,441Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:38:56,467Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:38:56,482Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:56,482Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:56,681Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T11:38:56,689Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:38:56,689Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:38:56,693Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:38:56,809Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:38:56,860Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:38:56,872Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:38:56,876Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:38:56,891Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:38:57,168Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10189 {}
[INFO ] 2020-04-15T11:38:57,171Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10190 {}
[INFO ] 2020-04-15T11:38:57,171Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10191 {}
[INFO ] 2020-04-15T11:38:58,113Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10189 {}
[INFO ] 2020-04-15T11:38:58,307Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10189 {}
[INFO ] 2020-04-15T11:38:58,769Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10189 {}
[INFO ] 2020-04-15T11:38:58,868Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10189 {}
[INFO ] 2020-04-15T11:38:58,903Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLD3kG3Y76nVP3MQCHLsP9USKuSVsVY3tT36vXBo5JjSR2 bound on same address {}
[INFO ] 2020-04-15T11:38:58,960Z [Thread-0 (ActiveMQ-client-factory-threads-1135769179)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DLD3kG3Y76nVP3MQCHLsP9USKuSVsVY3tT36vXBo5JjSR2], sendQueues=[]) {}
[INFO ] 2020-04-15T11:38:58,988Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=E23137C95ABA8AC959CD2C3D54F2438DA8F89CD98B77CE3D84B0A1851DD3B928 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:38:58,994Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T11:38:58,996Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T11:38:59,580Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:38:59,597Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:38:59,597Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:38:59,603Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:38:59,644Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:38:59,773Z [driver-pool-thread-1] internal.RPCClient. - Startup took 150 msec {}
[INFO ] 2020-04-15T11:38:59,868Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankA {}
[INFO ] 2020-04-15T11:38:59,869Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-15T11:38:59,869Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankA/cordapps] {}
[INFO ] 2020-04-15T11:38:59,870Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankA/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:59,870Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankA/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar {}
[INFO ] 2020-04-15T11:38:59,881Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:59,882Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:59,889Z [main] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB {}
[INFO ] 2020-04-15T11:38:59,890Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-15T11:38:59,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB/cordapps] {}
[INFO ] 2020-04-15T11:38:59,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T11:38:59,891Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB/cordapps/custom-cordapp_1_6_5c9ee16e-caee-4738-9cf8-0232055c187d.jar {}
[INFO ] 2020-04-15T11:38:59,909Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:59,909Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:59,910Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-15T11:38:59,911Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-15T11:38:59,913Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:44.902Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:38:59,933Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:59,933Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T11:38:59,936Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T11:38:44.902Z
      epoch=1
  } {}
[INFO ] 2020-04-15T11:39:00,438Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,439Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,439Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,459Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,461Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,461Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,558Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,568Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,569Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,571Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,571Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,628Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:00,632Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:39:00,634Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:00,635Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:00,758Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:00,759Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:39:00,781Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:39:00,781Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:00,782Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:39:00,788Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:00,796Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:39:00,796Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:39:00,798Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10193 {}
[INFO ] 2020-04-15T11:39:00,798Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10194 {}
[INFO ] 2020-04-15T11:39:00,798Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10195 {}
[INFO ] 2020-04-15T11:39:00,800Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:00,809Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:39:00,809Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:39:00,810Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:39:00,868Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:00,869Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:39:00,885Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:00,906Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10193 {}
[INFO ] 2020-04-15T11:39:01,056Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10193 {}
[INFO ] 2020-04-15T11:39:01,073Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,077Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/node-driver/20200415-113844.882/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,077Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,093Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,097Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,097Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,102Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10193 {}
[INFO ] 2020-04-15T11:39:01,153Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10193 {}
[INFO ] 2020-04-15T11:39:01,185Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL6dd76JgLf2ci6aT7hbw51H7PaCqZBqsaSNEBt4PmpZup bound on same address {}
[INFO ] 2020-04-15T11:39:01,215Z [Thread-0 (ActiveMQ-client-factory-threads-793483483)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DL6dd76JgLf2ci6aT7hbw51H7PaCqZBqsaSNEBt4PmpZup], sendQueues=[]) {}
[INFO ] 2020-04-15T11:39:01,220Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,235Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,236Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,239Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,239Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,239Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=E23137C95ABA8AC959CD2C3D54F2438DA8F89CD98B77CE3D84B0A1851DD3B928 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:39:01,251Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:01,255Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:39:01,255Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:39:01,256Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:39:01,311Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:39:01,330Z [driver-pool-thread-0] internal.RPCClient. - Startup took 72 msec {}
[INFO ] 2020-04-15T11:39:01,354Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T11:39:01,358Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-15T11:39:01,358Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:01,358Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:01,465Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T11:39:01,466Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T11:39:01,480Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T11:39:01,480Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:01,482Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:39:01,488Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:01,494Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T11:39:01,494Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-15T11:39:01,495Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10197 {}
[INFO ] 2020-04-15T11:39:01,496Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10198 {}
[INFO ] 2020-04-15T11:39:01,496Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10199 {}
[INFO ] 2020-04-15T11:39:01,504Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10193], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1586950740781) {}
[INFO ] 2020-04-15T11:39:01,507Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-15T11:39:01,522Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10189], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586950736689) {}
[INFO ] 2020-04-15T11:39:01,523Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T11:39:01,532Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:01,536Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T11:39:01,593Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10197 {}
[INFO ] 2020-04-15T11:39:01,675Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10197 {}
[INFO ] 2020-04-15T11:39:01,708Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10197 {}
[INFO ] 2020-04-15T11:39:01,737Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10197 {}
[INFO ] 2020-04-15T11:39:01,759Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLCebdv6VNa4fBr2zAr8ky4TkPmwvqjPqMeUw87KGBpH4G bound on same address {}
[INFO ] 2020-04-15T11:39:01,778Z [Thread-0 (ActiveMQ-client-factory-threads-2094788856)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLCebdv6VNa4fBr2zAr8ky4TkPmwvqjPqMeUw87KGBpH4G], sendQueues=[]) {}
[INFO ] 2020-04-15T11:39:01,794Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=E23137C95ABA8AC959CD2C3D54F2438DA8F89CD98B77CE3D84B0A1851DD3B928 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-15T11:39:01,800Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:01,806Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-15T11:39:01,806Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-15T11:39:01,806Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-15T11:39:01,852Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-15T11:39:01,867Z [driver-pool-thread-1] internal.RPCClient. - Startup took 60 msec {}
[INFO ] 2020-04-15T11:39:01,869Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:01,871Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:39:01,879Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:02,803Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:39:02,805Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-15T11:39:02,812Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10197], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1586950741480) {}
[INFO ] 2020-04-15T11:53:09,819Z [Thread-20] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-15T12:22:18,974Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122218.555/custom-cordapp_1_6_500f1a0a-7561-4b4a-9bbe-183342bf5a60.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122218.555/custom-cordapp_1_6_b04ada6b-8c5c-4d34-9d74-1a1dc3346468.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:22:19,042Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122218.555/custom-cordapp_1_6_500f1a0a-7561-4b4a-9bbe-183342bf5a60.jar {}
[INFO ] 2020-04-15T12:22:19,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122218.555/custom-cordapp_1_6_b04ada6b-8c5c-4d34-9d74-1a1dc3346468.jar {}
[INFO ] 2020-04-15T12:23:30,381Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122330.032/custom-cordapp_1_6_cd0d1d50-d55b-4fea-96ba-b0e1a40cc8b2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122330.032/custom-cordapp_1_6_c13402e0-1538-4497-af48-44da1159d682.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:23:30,448Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122330.032/custom-cordapp_1_6_cd0d1d50-d55b-4fea-96ba-b0e1a40cc8b2.jar {}
[INFO ] 2020-04-15T12:23:30,502Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-122330.032/custom-cordapp_1_6_c13402e0-1538-4497-af48-44da1159d682.jar {}
[INFO ] 2020-04-15T12:31:41,285Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123140.886/custom-cordapp_1_6_0a4d3756-b8e4-4d59-8acd-6eedc59ee62d.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123140.886/custom-cordapp_1_6_0a1eb59b-b034-485b-bee0-da6bb515343a.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:31:41,352Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123140.886/custom-cordapp_1_6_0a4d3756-b8e4-4d59-8acd-6eedc59ee62d.jar {}
[INFO ] 2020-04-15T12:31:41,410Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123140.886/custom-cordapp_1_6_0a1eb59b-b034-485b-bee0-da6bb515343a.jar {}
[INFO ] 2020-04-15T12:33:45,525Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123345.165/custom-cordapp_1_6_659c4734-32c7-433c-9033-e9d0392d504b.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123345.165/custom-cordapp_1_6_9a080667-1849-4fdd-91c1-4d9b927735fa.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:33:45,595Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123345.165/custom-cordapp_1_6_659c4734-32c7-433c-9033-e9d0392d504b.jar {}
[INFO ] 2020-04-15T12:33:45,648Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123345.165/custom-cordapp_1_6_9a080667-1849-4fdd-91c1-4d9b927735fa.jar {}
[INFO ] 2020-04-15T12:35:47,654Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123547.293/custom-cordapp_1_6_a1aa39ef-8a26-4b7f-9ae0-6a8bf1a1b1e0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123547.293/custom-cordapp_1_6_a57ff825-8c6a-4ea2-b06f-672a95beaba4.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:35:47,723Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123547.293/custom-cordapp_1_6_a1aa39ef-8a26-4b7f-9ae0-6a8bf1a1b1e0.jar {}
[INFO ] 2020-04-15T12:35:47,779Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123547.293/custom-cordapp_1_6_a57ff825-8c6a-4ea2-b06f-672a95beaba4.jar {}
[INFO ] 2020-04-15T12:36:27,796Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123627.432/custom-cordapp_1_6_bb601e37-958f-42c2-a4cf-b095e525ddde.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123627.432/custom-cordapp_1_6_0db67ebd-faf6-4dc0-a7f0-9ad9557b80d4.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:36:27,862Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123627.432/custom-cordapp_1_6_bb601e37-958f-42c2-a4cf-b095e525ddde.jar {}
[INFO ] 2020-04-15T12:36:27,918Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-123627.432/custom-cordapp_1_6_0db67ebd-faf6-4dc0-a7f0-9ad9557b80d4.jar {}
[INFO ] 2020-04-15T12:45:20,634Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-124520.249/custom-cordapp_1_6_a36c3bcf-cb88-4445-b1cd-ea9dc134601d.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-124520.249/custom-cordapp_1_6_3c5de130-2448-4cb3-8ef6-5045ceaf42e2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T12:45:20,696Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-124520.249/custom-cordapp_1_6_a36c3bcf-cb88-4445-b1cd-ea9dc134601d.jar {}
[INFO ] 2020-04-15T12:45:20,752Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/generated-custom-cordapps/20200415-124520.249/custom-cordapp_1_6_3c5de130-2448-4cb3-8ef6-5045ceaf42e2.jar {}
[ERROR] 2020-04-15T12:45:22,908Z [Test worker] internal.Verifier. - Error validating transaction 5195F27879507F7A771A2EF89EE3D62982AE30B0BA308AE749B755DF1A232584. [errorCode=1vhk4n4, moreInformationAt=https://errors.corda.net/OS/4.4/1vhk4n4] {}
java.lang.NullPointerException: null
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:50) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:306) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:338) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.4.jar:?]
	at com.example.test.contract.AssetContractTests.lambda$canCreateAssetOnLedger$1(AssetContractTests.java:29) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.4.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:48) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.4.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.4.jar:?]
	at com.example.test.contract.AssetContractTests.canCreateAssetOnLedger(AssetContractTests.java:28) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_241]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_241]
[INFO ] 2020-04-15T13:12:51,784Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:12:51,965Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:12:52,960Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:12:53,684Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:12:53,696Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:12:53,696Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:12:54,131Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:12:54,154Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:12:54,554Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:12:54,565Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:54,565Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:12:54,695Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:54,708Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:12:55,109Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:12:55,266Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:12:55,266Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:12:55,288Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:12:55,289Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:12:55,289Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:12:55,671Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:55,671Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:12:55,684Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:12:55,684Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:12:55,696Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:12:56,080Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:56,080Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:12:56,113Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:56,113Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:12:56,146Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:56,146Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:12:56,232Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:56,233Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:12:56,276Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:12:56,276Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:12:56,355Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,379Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,434Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:12:56,476Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,476Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:12:56,487Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,497Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:12:56,497Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,509Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,509Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:12:56,520Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,520Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:12:56,520Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,520Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,520Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:12:56,542Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,542Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:12:56,553Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,553Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,553Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:12:56,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,576Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,576Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:12:56,642Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,643Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:12:56,643Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,666Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,697Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,697Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,709Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:12:56,720Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:12:56,720Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:12:56,731Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:12:56,731Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:12:56,735Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:12:56,744Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:12:56,744Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:12:56,768Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:12:56,886Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-131247.259/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:12:56,890Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:12:56,896Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:12:56,979Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:12:57,535Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:12:57,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:12:57,608Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:12:57,608Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:12:57,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:12:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:13:01,078Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:01,081Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-131247.259/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:01,081Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:01,117Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:01,176Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:01,179Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:02,802Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,307Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,309Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,311Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,311Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,374Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:03,403Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:13:03,417Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:13:03,417Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:13:03,587Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:13:03,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:13:03,593Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:03,596Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:13:03,710Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:03,751Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:13:03,771Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:03,792Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:03,821Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:13:03,825Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T13:13:03,827Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T13:13:04,149Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:04,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:04,171Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:04,172Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:04,172Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:04,177Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-131247.259/nodes/1/cordapps] {}
[INFO ] 2020-04-15T13:13:04,177Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:13:04,177Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:13:04,183Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:13:04,204Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:13:04,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:13:04,233Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:13:04,233Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:13:04,236Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:12:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:13:04,672Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-131247.259/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,699Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,702Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,702Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,799Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,810Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,811Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,812Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,812Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,870Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:04,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:13:04,878Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:04,878Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:04,975Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:04,976Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:13:05,264Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:13:05,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,265Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:05,272Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,277Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:13:05,279Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,282Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:05,305Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:13:05,311Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,315Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:05,316Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:13:05,323Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,323Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:05,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,331Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:05,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:05,331Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:05,336Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-131247.259/nodes/2/cordapps] {}
[INFO ] 2020-04-15T13:13:05,336Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:13:05,336Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:13:05,341Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131247.259/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:13:05,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:13:05,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:13:05,376Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:13:05,376Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:13:05,378Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:12:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:13:05,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,717Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-131247.259/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,717Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,730Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,733Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,733Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,800Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,807Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,808Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,810Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,810Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,844Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:13:05,847Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:13:05,848Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:05,848Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:05,923Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:13:05,925Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:13:05,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:13:05,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:05,939Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:05,944Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:05,949Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:13:05,954Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:05,959Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:05,981Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:13:05,988Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:05,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956383593) {}
[INFO ] 2020-04-15T13:13:05,992Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:13:05,998Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:05,999Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:06,006Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956385264) {}
[INFO ] 2020-04-15T13:13:06,007Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:06,013Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:06,013Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:13:06,019Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:06,019Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:13:06,019Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956385938) {}
[INFO ] 2020-04-15T13:13:06,019Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:15:01,694Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:15:01,867Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:15:02,861Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:15:03,555Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:15:03,567Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:15:03,568Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:15:03,996Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:15:04,006Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:15:04,387Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:15:04,399Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:04,399Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:15:04,534Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:04,535Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:15:04,918Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:15:05,096Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:15:05,096Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:15:05,117Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:15:05,117Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:15:05,117Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:15:05,503Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:05,504Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:15:05,514Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:15:05,514Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:15:05,525Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:15:05,909Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:05,909Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:15:05,951Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:05,951Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:15:05,973Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:05,973Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:15:06,074Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:06,074Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:15:06,119Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:15:06,119Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:15:06,197Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,219Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,275Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:15:06,307Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,307Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:15:06,319Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,330Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:15:06,330Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,351Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,352Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:15:06,352Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,352Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:15:06,352Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,352Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,362Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:15:06,393Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,393Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:15:06,393Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,403Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,403Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:15:06,413Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,413Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,435Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:15:06,488Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,488Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:15:06,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,509Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:15:06,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:15:06,509Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:15:06,520Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,520Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:15:06,520Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,520Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,520Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:06,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:15:08,130Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:15:08,130Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:15:08,130Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:15:08,130Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:15:08,143Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:15:08,143Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:15:08,144Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:15:08,175Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:15:08,303Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-131457.205/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:15:08,306Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131457.205/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131457.205/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:15:08,313Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131457.205/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:15:08,384Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-131457.205/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:15:08,940Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:15:08,968Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:15:09,018Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:15:09,018Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:21:59,043Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:21:59,227Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:00,159Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:22:00,864Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:22:00,874Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:22:00,875Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:01,314Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:01,334Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:22:01,727Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:01,727Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:01,737Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:22:01,860Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:01,872Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:02,250Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:22:02,430Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:02,442Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:22:02,454Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:02,454Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:22:02,454Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:02,831Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:02,831Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:02,842Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:02,853Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:22:02,864Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:03,237Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:03,237Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:22:03,279Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:03,279Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:22:03,300Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:03,300Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:22:03,394Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:03,394Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:22:03,437Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:03,437Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:03,519Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,542Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,595Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:03,648Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,648Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:03,648Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,658Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:22:03,658Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,680Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,690Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:22:03,713Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:22:03,724Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,724Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,724Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:22:03,744Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,757Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:03,816Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,816Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:03,816Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,838Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:22:03,838Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:03,838Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,838Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:22:03,838Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,848Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:22:03,848Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,848Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,848Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,884Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,885Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:03,885Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:03,885Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:03,885Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:22:05,454Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:05,454Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:05,454Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:22:05,454Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:05,458Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:05,468Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:22:05,468Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:05,480Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:22:05,604Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132154.657/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:22:05,607Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132154.657/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132154.657/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:22:05,613Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132154.657/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:22:05,692Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132154.657/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:22:06,255Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:22:06,280Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:22:06,325Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:06,326Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:38,313Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:22:38,485Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:39,593Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:22:40,329Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:22:40,342Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:22:40,343Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:40,793Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:40,803Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:22:41,189Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:41,201Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:41,201Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:22:41,328Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:41,341Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:41,715Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:22:41,881Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:41,881Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:22:41,902Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:41,902Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:22:41,902Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:22:42,283Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,283Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:42,294Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:22:42,294Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:42,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:22:42,305Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:42,305Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:22:42,305Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:42,305Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:22:42,316Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:22:42,677Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,677Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:22:42,723Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,723Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:22:42,746Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,746Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:22:42,848Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,848Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:22:42,891Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:22:42,892Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:42,978Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,001Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,055Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:43,097Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,097Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:43,097Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,107Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:22:43,107Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,128Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,128Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:22:43,138Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,138Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:22:43,138Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,138Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,138Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:22:43,169Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,169Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:22:43,179Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,180Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,180Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:22:43,191Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,191Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,201Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:43,257Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:22:43,269Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,279Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:22:43,279Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:22:43,279Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,279Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:22:43,291Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,291Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:22:43,291Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,291Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,291Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,313Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,313Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:43,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:22:44,877Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:22:44,877Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:44,878Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:22:44,878Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:22:44,881Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:44,890Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:22:44,890Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:22:44,913Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:22:45,036Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132233.638/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:22:45,040Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:22:45,045Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:22:45,124Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:22:45,682Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:22:45,710Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:22:45,760Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:45,760Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:46,180Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:22:32.235Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:22:49,207Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:49,211Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132233.638/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:49,211Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:49,237Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:49,291Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:49,295Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:50,852Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,335Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,337Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,339Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,339Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,395Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:51,431Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:22:51,446Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:22:51,446Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:22:51,624Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:22:51,630Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:22:51,630Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:51,633Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:22:51,749Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:51,790Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:22:51,809Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:51,829Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:51,857Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:22:51,861Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T13:22:51,863Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T13:22:52,174Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:52,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:52,197Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:52,197Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:52,197Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:52,203Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132233.638/nodes/1/cordapps] {}
[INFO ] 2020-04-15T13:22:52,203Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:22:52,203Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:22:52,210Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:22:52,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:22:52,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:22:52,262Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:52,262Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:52,265Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:22:32.235Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:22:52,681Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,683Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132233.638/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,683Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,701Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,704Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,704Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,823Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,833Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,834Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,836Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,836Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,891Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:52,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:22:52,898Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:52,898Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:53,276Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:53,278Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:22:53,295Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:22:53,295Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,296Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:53,301Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,306Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:22:53,308Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,311Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:53,335Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:22:53,342Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:53,347Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:22:53,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,354Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:53,363Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,363Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:53,363Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:53,363Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:53,368Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132233.638/nodes/2/cordapps] {}
[INFO ] 2020-04-15T13:22:53,368Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:22:53,368Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:22:53,374Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132233.638/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:22:53,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:22:53,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:22:53,409Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:53,410Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:22:53,412Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:22:32.235Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:22:53,712Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,714Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132233.638/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,714Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,724Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,727Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,727Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,795Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,801Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,802Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,803Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,803Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,837Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:22:53,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:22:53,841Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:53,841Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:53,921Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:22:53,922Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:22:53,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:22:53,937Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:53,939Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:53,944Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:53,950Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:22:53,954Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:53,959Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:53,982Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:22:53,989Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:53,991Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586956971630) {}
[INFO ] 2020-04-15T13:22:53,993Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:22:54,000Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:54,001Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:54,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586956973295) {}
[INFO ] 2020-04-15T13:22:54,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:54,019Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:54,019Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:22:54,025Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:54,025Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:22:54,025Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586956973937) {}
[INFO ] 2020-04-15T13:22:54,025Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:06,675Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:24:06,860Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:24:07,890Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:24:08,576Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:24:08,587Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:24:08,588Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:24:09,033Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:24:09,057Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:24:09,443Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:24:09,453Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:09,453Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:24:09,578Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:09,589Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:24:09,959Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:24:10,126Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:24:10,126Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:24:10,149Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:24:10,150Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:24:10,150Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:24:10,524Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:10,524Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:24:10,535Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:24:10,545Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:24:10,545Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:24:10,546Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:24:10,546Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:24:10,546Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:24:10,546Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:24:10,559Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:24:10,940Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:10,940Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:24:10,984Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:10,984Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:24:11,006Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:11,006Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:24:11,107Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:11,108Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:24:11,155Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:24:11,155Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:24:11,242Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,265Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,325Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:24:11,370Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,370Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:24:11,370Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,382Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:24:11,382Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,404Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,405Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:24:11,438Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,438Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:24:11,449Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,449Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:24:11,463Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,463Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,475Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:24:11,531Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,531Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:24:11,542Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,553Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:24:11,553Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:24:11,565Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,566Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,599Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,599Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:11,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:24:13,176Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:24:13,177Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:24:13,177Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:24:13,177Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:24:13,192Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:24:13,192Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:24:13,201Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:24:13,214Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:24:13,337Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132401.978/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:24:13,340Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:24:13,346Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:24:13,424Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:24:13,972Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:24:13,999Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:24:14,048Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:14,048Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:14,417Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:24:00.668Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:24:17,418Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:17,422Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132401.978/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:17,422Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:17,450Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:17,502Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:17,507Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,051Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,529Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,531Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,533Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,533Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,598Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:19,633Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:24:19,648Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:24:19,648Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:24:19,829Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:24:19,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:24:19,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:19,838Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:24:19,955Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:20,003Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:24:20,019Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:20,041Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:20,071Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:24:20,076Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T13:24:20,078Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T13:24:20,395Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:20,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:20,417Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:20,417Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:20,417Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:20,423Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132401.978/nodes/1/cordapps] {}
[INFO ] 2020-04-15T13:24:20,423Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:24:20,423Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:24:20,429Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:24:20,460Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:24:20,461Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:24:20,480Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:20,481Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:20,483Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:24:00.668Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:24:20,954Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:20,955Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132401.978/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:20,955Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:20,972Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:20,974Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:20,974Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,085Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,096Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,097Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,098Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,098Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,150Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:21,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:24:21,157Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:21,157Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:21,506Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:21,507Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:24:21,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:24:21,527Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,528Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:21,534Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,540Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:24:21,543Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,547Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:21,575Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:24:21,582Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,586Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:21,588Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:24:21,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,598Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:21,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,608Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:21,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:21,608Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132401.978/nodes/2/cordapps] {}
[INFO ] 2020-04-15T13:24:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:24:21,614Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:24:21,621Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132401.978/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:24:21,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:24:21,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:24:21,659Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:21,659Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:24:21,661Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:24:00.668Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:24:22,004Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,006Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-132401.978/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,006Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,019Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,022Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,022Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,090Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,098Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,099Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,100Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,100Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,139Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:24:22,144Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:24:22,145Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:22,145Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:22,231Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:24:22,232Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:24:22,250Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:24:22,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,252Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:22,258Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,264Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:24:22,267Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,271Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:22,293Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:24:22,301Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,304Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586957059835) {}
[INFO ] 2020-04-15T13:24:22,305Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:24:22,314Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,315Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:22,323Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586957061526) {}
[INFO ] 2020-04-15T13:24:22,324Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:22,331Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,331Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:24:22,338Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,338Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:24:22,338Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586957062250) {}
[INFO ] 2020-04-15T13:24:22,338Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:25:45,834Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:25:46,025Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:25:47,028Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:25:47,765Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:25:47,775Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:25:47,776Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:25:48,212Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:25:48,225Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:25:48,620Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:25:48,630Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:48,630Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:25:48,753Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:48,764Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:25:49,154Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:25:49,345Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:25:49,345Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:25:49,368Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:25:49,368Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:25:49,368Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:25:49,753Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:49,753Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:25:49,764Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:25:49,775Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:25:49,775Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:25:49,775Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:25:49,775Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:25:49,786Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:25:49,786Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:25:49,786Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:25:50,173Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:50,173Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:25:50,217Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:50,217Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:25:50,238Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:50,238Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:25:50,335Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:50,335Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:25:50,368Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:25:50,378Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:25:50,454Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,475Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,518Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:25:50,562Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,562Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:25:50,572Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,583Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:25:50,583Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,593Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,605Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:25:50,639Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,639Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:25:50,651Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,651Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,651Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:25:50,662Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,662Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,677Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:25:50,731Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,731Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:25:50,741Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,753Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:25:50,753Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:25:50,753Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,753Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:25:50,764Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,764Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:25:50,764Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,764Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,764Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,798Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,799Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,799Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,799Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,799Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,800Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:50,811Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:25:52,364Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:25:52,364Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:25:52,375Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:25:52,375Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:25:52,378Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:25:52,389Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:25:52,389Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:25:52,403Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:25:52,528Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-132541.264/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:25:52,532Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132541.264/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132541.264/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:25:52,538Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132541.264/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:25:52,622Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-132541.264/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:25:53,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:25:53,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:25:53,258Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:25:53,259Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:54:54,932Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T13:54:55,165Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:54:56,327Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:54:57,054Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T13:54:57,064Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T13:54:57,065Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:54:57,487Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:54:57,497Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T13:54:57,893Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:54:57,893Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:57,893Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T13:54:58,026Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:58,026Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:54:58,380Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T13:54:58,545Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:54:58,545Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:54:58,568Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:54:58,568Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T13:54:58,568Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T13:54:58,924Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:58,924Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:54:58,934Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T13:54:58,945Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T13:54:59,324Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:59,324Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T13:54:59,367Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:59,368Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T13:54:59,389Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:59,390Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T13:54:59,479Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:59,479Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T13:54:59,522Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T13:54:59,522Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:54:59,599Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,622Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,676Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:54:59,711Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,711Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T13:54:59,721Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,721Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T13:54:59,721Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,745Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,755Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:54:59,787Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,787Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T13:54:59,787Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,799Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,799Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T13:54:59,799Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,811Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,812Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:54:59,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,879Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T13:54:59,879Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,901Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,937Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,937Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,949Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,949Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,949Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,949Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,949Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:54:59,950Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T13:55:01,492Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T13:55:01,492Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:55:01,492Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T13:55:01,492Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T13:55:01,506Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:55:01,506Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T13:55:01,506Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T13:55:01,530Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T13:55:01,660Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-135450.491/nodes/0/cordapps] {}
[INFO ] 2020-04-15T13:55:01,663Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:55:01,668Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:55:01,742Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:55:02,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:55:02,325Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:55:02,371Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:02,371Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:02,772Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:54:49.146Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:55:05,713Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:05,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-135450.491/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:05,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:05,746Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:05,809Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:05,813Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,343Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,787Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,788Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,791Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,791Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,850Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:07,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:55:07,891Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:55:07,891Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:55:08,064Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T13:55:08,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:55:08,070Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,073Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:55:08,196Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,241Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:55:08,255Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,274Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:08,301Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:55:08,306Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T13:55:08,308Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T13:55:08,624Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,651Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:08,651Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:08,651Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:08,657Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-135450.491/nodes/1/cordapps] {}
[INFO ] 2020-04-15T13:55:08,657Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:55:08,658Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:55:08,664Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:55:08,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:55:08,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:55:08,711Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:08,711Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:08,713Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:54:49.146Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:55:09,111Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,113Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-135450.491/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,113Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,130Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,133Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,133Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,238Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,251Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,252Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,255Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,255Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,312Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:09,317Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:55:09,319Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:09,319Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:09,672Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:09,673Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:55:09,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:55:09,690Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,692Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:09,698Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,704Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:55:09,707Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,710Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:09,736Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:55:09,743Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:09,747Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:55:09,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,755Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:09,763Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,763Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:09,763Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:09,763Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:09,767Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-135450.491/nodes/2/cordapps] {}
[INFO ] 2020-04-15T13:55:09,768Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T13:55:09,768Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T13:55:09,773Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-135450.491/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T13:55:09,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T13:55:09,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T13:55:09,808Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:09,809Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T13:55:09,810Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T13:54:49.146Z
      epoch=1
  } {}
[INFO ] 2020-04-15T13:55:10,099Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,100Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-135450.491/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,100Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,114Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,116Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,117Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,202Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,209Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,210Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,212Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,212Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,254Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T13:55:10,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T13:55:10,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:10,258Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:10,347Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T13:55:10,348Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T13:55:10,364Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T13:55:10,364Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,366Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:10,372Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,378Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T13:55:10,380Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,384Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:10,408Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T13:55:10,415Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,417Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586958908070) {}
[INFO ] 2020-04-15T13:55:10,419Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T13:55:10,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:10,436Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586958909690) {}
[INFO ] 2020-04-15T13:55:10,437Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:10,444Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,445Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T13:55:10,451Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,451Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T13:55:10,451Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586958910364) {}
[INFO ] 2020-04-15T13:55:10,451Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:55:51,661Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T14:55:51,845Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T14:55:52,744Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T14:55:53,429Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T14:55:53,440Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T14:55:53,440Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T14:55:53,856Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T14:55:53,880Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T14:55:54,260Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T14:55:54,260Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:54,260Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T14:55:54,379Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:54,390Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T14:55:54,752Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T14:55:54,906Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T14:55:54,906Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T14:55:54,929Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T14:55:54,930Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T14:55:54,930Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T14:55:55,292Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,292Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T14:55:55,303Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T14:55:55,313Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T14:55:55,324Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T14:55:55,712Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,712Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T14:55:55,756Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,756Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T14:55:55,780Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,780Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T14:55:55,863Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,863Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T14:55:55,906Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T14:55:55,906Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T14:55:56,049Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,070Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,122Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T14:55:56,153Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,153Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T14:55:56,163Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,174Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T14:55:56,174Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,186Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,196Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T14:55:56,197Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,197Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T14:55:56,197Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,197Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,197Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T14:55:56,228Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,228Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T14:55:56,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,239Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T14:55:56,250Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,250Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,262Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T14:55:56,317Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,317Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T14:55:56,328Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,338Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T14:55:56,338Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,351Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T14:55:56,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T14:55:56,397Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T14:55:56,409Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T14:55:56,409Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T14:55:56,409Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T14:55:56,409Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T14:55:56,413Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T14:55:56,424Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T14:55:56,424Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T14:55:56,454Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T14:55:56,568Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-145547.397/nodes/0/cordapps] {}
[INFO ] 2020-04-15T14:55:56,572Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T14:55:56,579Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T14:55:56,652Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T14:55:57,188Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T14:55:57,214Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T14:55:57,260Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:55:57,260Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:55:57,619Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T14:55:46.066Z
      epoch=1
  } {}
[INFO ] 2020-04-15T14:56:00,500Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:00,504Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-145547.397/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:00,504Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:00,531Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:00,584Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:00,588Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,119Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,570Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,572Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,574Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,574Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,630Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:02,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T14:56:02,678Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T14:56:02,678Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T14:56:02,846Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T14:56:02,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T14:56:02,852Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:02,856Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T14:56:02,973Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:03,013Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T14:56:03,032Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:03,052Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:03,080Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T14:56:03,085Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T14:56:03,087Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T14:56:03,399Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:03,419Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:03,420Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:03,420Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:03,420Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:03,426Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-145547.397/nodes/1/cordapps] {}
[INFO ] 2020-04-15T14:56:03,426Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T14:56:03,426Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T14:56:03,432Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T14:56:03,451Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T14:56:03,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T14:56:03,474Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:56:03,474Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:56:03,476Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T14:55:46.066Z
      epoch=1
  } {}
[INFO ] 2020-04-15T14:56:03,919Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:03,920Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-145547.397/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:03,920Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:03,944Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:03,946Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:03,946Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,033Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,042Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,043Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,044Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,045Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,092Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T14:56:04,098Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:04,098Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:04,179Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:04,180Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T14:56:04,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T14:56:04,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,460Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:04,466Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,472Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T14:56:04,474Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,479Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:04,506Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T14:56:04,514Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:04,520Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T14:56:04,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,529Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:04,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,540Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:04,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:04,540Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:04,546Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-145547.397/nodes/2/cordapps] {}
[INFO ] 2020-04-15T14:56:04,547Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T14:56:04,547Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T14:56:04,554Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-145547.397/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T14:56:04,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T14:56:04,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T14:56:04,593Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:56:04,593Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T14:56:04,595Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T14:55:46.066Z
      epoch=1
  } {}
[INFO ] 2020-04-15T14:56:04,903Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,905Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-145547.397/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,905Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,915Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,917Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,917Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,978Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,984Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,985Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,986Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:04,986Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:05,018Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T14:56:05,021Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T14:56:05,022Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:05,022Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:05,093Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T14:56:05,094Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T14:56:05,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T14:56:05,108Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,109Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:05,114Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,119Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T14:56:05,124Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,129Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:05,152Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T14:56:05,160Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,162Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586962562852) {}
[INFO ] 2020-04-15T14:56:05,163Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T14:56:05,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,171Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:05,180Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586962564458) {}
[INFO ] 2020-04-15T14:56:05,181Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:05,188Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T14:56:05,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T14:56:05,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586962565108) {}
[INFO ] 2020-04-15T14:56:05,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:03:57,262Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:03:57,436Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:03:58,385Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:03:59,056Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:03:59,065Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:03:59,066Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:03:59,500Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:03:59,511Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:03:59,912Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:03:59,925Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:03:59,925Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:04:00,046Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:00,058Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:04:00,442Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:04:00,596Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:04:00,608Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:04:00,628Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:04:00,628Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:04:00,628Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:04:01,003Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,003Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:04:01,016Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:04:01,016Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:04:01,027Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:04:01,444Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,444Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:04:01,500Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,500Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:04:01,535Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,535Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:04:01,653Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,653Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:04:01,695Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:04:01,705Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:04:01,780Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:01,800Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:04:01,863Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:04:01,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:04:01,909Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:04:01,909Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:04:01,921Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:04:01,921Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:01,946Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:04:01,979Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:01,979Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:04:01,992Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:01,993Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:01,993Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:04:02,003Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:04:02,014Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:04:02,070Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:04:02,070Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:04:02,082Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:04:02,092Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:04:02,092Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:04:02,102Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,102Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:04:02,102Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:04:02,103Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,103Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,103Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,133Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,133Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,145Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,145Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,145Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,145Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,146Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:04:02,156Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:04:02,156Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:04:02,156Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:04:02,156Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:04:02,170Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:04:02,179Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:04:02,179Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:04:02,201Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:04:02,325Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150353.154/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:04:02,329Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:04:02,335Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:04:02,414Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:04:02,985Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:04:03,012Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:04:03,060Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:03,061Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:03,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:03:53.113Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:04:06,631Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:06,637Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150353.154/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:06,637Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:06,666Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:06,723Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:06,727Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,314Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,813Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,814Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,817Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,817Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,880Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:08,913Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:04:08,936Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:04:08,936Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:04:09,112Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:04:09,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:04:09,118Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,121Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:04:09,233Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,275Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:04:09,288Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,320Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:09,348Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:04:09,352Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:04:09,355Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:04:09,674Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,695Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,696Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:09,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:09,697Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:09,702Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150353.154/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:04:09,703Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:04:09,703Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:04:09,709Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:04:09,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:04:09,731Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:04:09,754Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:09,755Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:09,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:03:53.113Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:04:10,161Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,163Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150353.154/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,163Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,183Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,185Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,185Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,302Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,310Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,311Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,313Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,313Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,356Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:10,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:04:10,362Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:10,362Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:10,440Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:10,441Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:04:10,456Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:04:10,456Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,458Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:10,463Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,467Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:04:10,469Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,473Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:10,831Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:04:10,838Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:10,843Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:04:10,849Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,850Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:10,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,857Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:10,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:10,857Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:10,862Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150353.154/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:04:10,862Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:04:10,862Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:04:10,867Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150353.154/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:04:10,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:04:10,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:04:10,904Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:10,904Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:04:10,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:03:53.113Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:04:11,197Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150353.154/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,207Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,208Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,209Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,269Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,275Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,276Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,277Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,277Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,309Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:04:11,312Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:04:11,313Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:11,313Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:11,385Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:04:11,387Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:04:11,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:04:11,400Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,401Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:11,406Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,412Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:04:11,414Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,417Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:11,438Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:04:11,443Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,445Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963049118) {}
[INFO ] 2020-04-15T15:04:11,446Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:04:11,452Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,453Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:11,460Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963050456) {}
[INFO ] 2020-04-15T15:04:11,460Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:11,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:04:11,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,471Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:04:11,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963051400) {}
[INFO ] 2020-04-15T15:04:11,475Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:21,670Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:08:21,860Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:08:22,882Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:08:23,599Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:08:23,610Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:08:23,611Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:08:24,053Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:08:24,075Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:08:24,487Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:08:24,487Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:24,487Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:08:24,629Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:24,640Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:08:25,050Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:08:25,201Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:08:25,213Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:08:25,226Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:08:25,226Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:08:25,226Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:08:25,610Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:25,610Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:08:25,620Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:08:25,621Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:08:25,633Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:08:25,999Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:25,999Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:08:26,051Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:26,051Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:08:26,075Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:26,075Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:08:26,163Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:26,164Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:08:26,210Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:08:26,210Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:08:26,300Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,334Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,396Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:08:26,437Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,437Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:08:26,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,450Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:08:26,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,471Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,471Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:08:26,483Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,483Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:08:26,483Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,483Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,483Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:08:26,514Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,514Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:08:26,527Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,527Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,527Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:08:26,537Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,537Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,550Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:08:26,604Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:08:26,615Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,627Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:08:26,629Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:08:26,629Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,629Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:08:26,639Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,639Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:08:26,639Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,639Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,639Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,670Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,670Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,680Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,681Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:08:26,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:08:26,681Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,691Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:08:26,701Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:08:26,701Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:08:26,701Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:08:26,701Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:08:26,721Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:08:26,729Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:08:26,729Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:08:26,751Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:08:26,877Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150817.376/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:08:26,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:08:26,886Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:08:26,966Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:08:27,528Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:08:27,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:08:27,604Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:27,604Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:28,046Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:08:17.336Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:08:31,210Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:31,218Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150817.376/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:31,218Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:31,252Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:31,322Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:31,327Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:32,955Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,450Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,451Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,454Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,454Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,517Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:33,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:08:33,561Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:08:33,561Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:08:33,752Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:08:33,758Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:08:33,758Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:33,761Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:08:33,872Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:33,919Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:08:33,934Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:33,958Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:33,986Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:08:33,992Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:08:33,994Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:08:34,323Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:34,349Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:34,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:34,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:34,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:34,356Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150817.376/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:08:34,357Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:08:34,357Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:08:34,363Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:08:34,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:08:34,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:08:34,412Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:34,412Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:34,414Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:08:17.336Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:08:34,872Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:34,874Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150817.376/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:34,874Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:34,891Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:34,893Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:34,893Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,009Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,019Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,020Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,022Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,022Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,080Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:08:35,089Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:35,089Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:35,188Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:35,189Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:08:35,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:08:35,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,207Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:35,483Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,488Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:08:35,491Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,494Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:35,517Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:08:35,523Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:35,527Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:08:35,534Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,535Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:35,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:35,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:35,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:35,550Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-150817.376/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:08:35,550Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:08:35,550Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:08:35,556Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-150817.376/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:08:35,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:08:35,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:08:35,588Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:35,589Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:08:35,590Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:08:17.336Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:08:35,901Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,903Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-150817.376/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,903Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,919Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,922Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,922Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,992Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,999Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:35,999Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:36,001Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:36,001Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:36,032Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:08:36,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:08:36,036Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:36,036Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:36,103Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:08:36,104Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:08:36,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:08:36,119Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,121Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:36,127Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,132Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:08:36,134Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,138Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:36,160Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7A0650887ACEE4A89BB5F4E2CCD171FBEFD0B5BD09307828BCA00AAAE06263F6 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:08:36,166Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,168Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963313758) {}
[INFO ] 2020-04-15T15:08:36,169Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:08:36,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,175Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:36,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963315205) {}
[INFO ] 2020-04-15T15:08:36,183Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:36,188Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,189Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:08:36,194Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,194Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:08:36,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963316119) {}
[INFO ] 2020-04-15T15:08:36,195Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[ERROR] 2020-04-15T15:08:36,532Z [Mock network] internal.Verifier. - Error validating transaction FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5. [errorCode=1vhk4n4, moreInformationAt=https://errors.corda.net/OS/4.4/1vhk4n4] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
java.lang.NullPointerException: null
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-15T15:08:36,534Z [Mock network] internal.Verifier. - Error validating transaction FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5. [errorCode=1vhk4n4, moreInformationAt=https://errors.corda.net/OS/4.4/1vhk4n4] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
java.lang.NullPointerException: null
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-15T15:08:36,534Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
[INFO ] 2020-04-15T15:08:36,538Z [Mock network] statemachine.StaffedFlowHospital. - Flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Invocation, sessionId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C4A21E8B88E1F5C459F6A41ADB6893E3025AD8118AD1EEC76AA85E9D643149EB), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@295189b3, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=29f3b303-c1a9-49ad-8529-a40cb9431590) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
[INFO ] 2020-04-15T15:08:36,540Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:08:36,543Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:08:36,555Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] errored, dumping all transitions:

 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.338Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e6d15e55-6780-465e-aa3a-27eacb1838f5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Invocation, sessionId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C4A21E8B88E1F5C459F6A41ADB6893E3025AD8118AD1EEC76AA85E9D643149EB), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290])
    SignalFlowHasStarted(flowId=[e6d15e55-6780-465e-aa3a-27eacb1838f5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.544Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4510917395467213012, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:08:36.290Z
    2020-04-15T15:08:36.537Z


 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.547Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.549Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:08:36.537Z
    2020-04-15T15:08:36.549Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
[WARN ] 2020-04-15T15:08:36,555Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] error [errorCode=iwbqe5, moreInformationAt=https://errors.corda.net/OS/4.4/iwbqe5] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:08:36,556Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=iwbqe5, moreInformationAt=https://errors.corda.net/OS/4.4/iwbqe5] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:08:36,585Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] errored, dumping all transitions:

 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.338Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[e6d15e55-6780-465e-aa3a-27eacb1838f5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Invocation, sessionId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C4A21E8B88E1F5C459F6A41ADB6893E3025AD8118AD1EEC76AA85E9D643149EB), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290])
    SignalFlowHasStarted(flowId=[e6d15e55-6780-465e-aa3a-27eacb1838f5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18290]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.544Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4510917395467213012, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:08:36.290Z
    2020-04-15T15:08:36.537Z


 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.547Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.549Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:08:36.537Z
    2020-04-15T15:08:36.549Z


 --- Transition of flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] ---
  Timestamp: 2020-04-15T15:08:36.581Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5, errorId=4510917395467213012)], sessions=[], senderUUID=29f3b303-c1a9-49ad-8529-a40cb9431590)
    CreateTransaction
    RemoveCheckpoint(id=[e6d15e55-6780-465e-aa3a-27eacb1838f5])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=e6d15e55-6780-465e-aa3a-27eacb1838f5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[e6d15e55-6780-465e-aa3a-27eacb1838f5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4510917395467213012, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Invocation, sessionId=0543ddd9-a77f-4300-afd5-8835acaa4b4c, timestamp: 2020-04-15T15:08:36.219Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C4A21E8B88E1F5C459F6A41ADB6893E3025AD8118AD1EEC76AA85E9D643149EB), errorState=Errored(errors=[FlowError(errorId=4510917395467213012, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@295189b3, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=29f3b303-c1a9-49ad-8529-a40cb9431590))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-15T15:08:36.549Z
    2020-04-15T15:08:36.555Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
[WARN ] 2020-04-15T15:08:36,585Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6d15e55-6780-465e-aa3a-27eacb1838f5] error [errorCode=iwbqe5, moreInformationAt=https://errors.corda.net/OS/4.4/iwbqe5] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e6d15e55-6780-465e-aa3a-27eacb1838f5, invocation_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, invocation_timestamp=2020-04-15T15:08:36.219Z, origin=Only For Testing, session_id=0543ddd9-a77f-4300-afd5-8835acaa4b4c, session_timestamp=2020-04-15T15:08:36.219Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: FEC6ED1B7E3760DBAFC38C52171A1587D9A7FEEF3C1DEF40D1207E33B645F0F5
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:51) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:13:36,189Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:13:36,364Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:13:37,503Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:13:38,262Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:13:38,283Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:13:38,283Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:13:38,731Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:13:38,751Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:13:39,141Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:13:39,153Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:39,154Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:13:39,283Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:39,294Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:13:39,665Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:13:39,839Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:13:39,851Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:13:39,862Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:13:39,862Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:13:39,862Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:13:40,247Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,248Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:13:40,269Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:13:40,269Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:13:40,269Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:13:40,279Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:13:40,279Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:13:40,279Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:13:40,279Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:13:40,279Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:13:40,690Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,690Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:13:40,732Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,733Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:13:40,764Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,765Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:13:40,864Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,864Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:13:40,907Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:13:40,907Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:13:40,997Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,019Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,081Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:13:41,116Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,126Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:13:41,126Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,137Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:13:41,137Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,168Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:13:41,191Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,191Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:13:41,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,204Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:13:41,214Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,214Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,225Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:13:41,280Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,282Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:13:41,292Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,304Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:13:41,304Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:13:41,304Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:13:41,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:13:41,305Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,305Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,315Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,337Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,337Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,347Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,348Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:13:41,358Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:13:41,369Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:13:41,370Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:13:41,370Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:13:41,373Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:13:41,382Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:13:41,382Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:13:41,406Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:13:41,530Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151331.529/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:13:41,534Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:13:41,540Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:13:41,623Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:13:42,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:13:42,237Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:13:42,286Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:42,286Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:42,745Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:13:31.488Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:13:45,858Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:45,861Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151331.529/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:45,861Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:45,888Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:45,939Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:45,942Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,460Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,909Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,911Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,913Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,913Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:47,972Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:48,001Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:13:48,016Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:13:48,016Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:13:48,190Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:13:48,196Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:13:48,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,200Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:13:48,315Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,354Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:13:48,367Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,388Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:48,414Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=04B8620588BF8F58BE5A9A21F54A68F0AA7F330AEC1855667C8B2632AADD977B uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:13:48,418Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:13:48,420Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:13:48,713Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,735Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,736Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:48,736Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:48,736Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:48,742Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151331.529/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:13:48,742Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:13:48,742Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:13:48,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:13:48,780Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:13:48,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:13:48,799Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:48,799Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:48,801Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:13:31.488Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:13:49,240Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151331.529/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,259Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,262Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,262Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,358Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,367Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,368Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,370Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,370Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,424Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:49,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:13:49,431Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:49,431Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:49,520Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:49,521Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:13:49,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:13:49,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,544Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:49,550Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,813Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:13:49,816Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,819Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:49,845Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=04B8620588BF8F58BE5A9A21F54A68F0AA7F330AEC1855667C8B2632AADD977B uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:13:49,852Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,856Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:49,857Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:13:49,865Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:49,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,876Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:49,876Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:49,876Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:49,881Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151331.529/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:13:49,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:13:49,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:13:49,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151331.529/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:13:49,905Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:13:49,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:13:49,922Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:49,922Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:13:49,924Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:13:31.488Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:13:50,225Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,227Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151331.529/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,227Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,242Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,245Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,245Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,310Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,317Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,317Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,319Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,319Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,352Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:13:50,355Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:13:50,356Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:50,356Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:50,427Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:13:50,428Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:13:50,442Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:13:50,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,443Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:50,449Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,455Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:13:50,458Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,461Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:50,485Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=04B8620588BF8F58BE5A9A21F54A68F0AA7F330AEC1855667C8B2632AADD977B uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:13:50,491Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963628196) {}
[INFO ] 2020-04-15T15:13:50,495Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:13:50,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:50,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963629543) {}
[INFO ] 2020-04-15T15:13:50,510Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:50,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,517Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:13:50,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:13:50,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963630442) {}
[INFO ] 2020-04-15T15:13:50,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[ERROR] 2020-04-15T15:13:50,864Z [Mock network] internal.Verifier. - Error validating transaction A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-15T15:13:50,866Z [Mock network] internal.Verifier. - Error validating transaction A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-15T15:13:50,866Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
[INFO ] 2020-04-15T15:13:50,870Z [Mock network] statemachine.StaffedFlowHospital. - Flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Invocation, sessionId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8D13FA76516F34AC4A1484EF879D92BEBBCEA11A9D23F9198F98891ED7FB8734), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@11752070, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=3351aa8f-9ea2-491a-994c-9725f3f9cf45) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
[INFO ] 2020-04-15T15:13:50,873Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:13:50,876Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:13:50,887Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] errored, dumping all transitions:

 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.662Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6efb2b65-2f91-4327-8c83-0708b43bd2fc], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Invocation, sessionId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8D13FA76516F34AC4A1484EF879D92BEBBCEA11A9D23F9198F98891ED7FB8734), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05])
    SignalFlowHasStarted(flowId=[6efb2b65-2f91-4327-8c83-0708b43bd2fc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.877Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2970489322651480775, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:13:50.614Z
    2020-04-15T15:13:50.869Z


 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.880Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.882Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:13:50.869Z
    2020-04-15T15:13:50.882Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
[WARN ] 2020-04-15T15:13:50,887Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:13:50,889Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:13:50,918Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] errored, dumping all transitions:

 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.662Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6efb2b65-2f91-4327-8c83-0708b43bd2fc], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Invocation, sessionId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8D13FA76516F34AC4A1484EF879D92BEBBCEA11A9D23F9198F98891ED7FB8734), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05])
    SignalFlowHasStarted(flowId=[6efb2b65-2f91-4327-8c83-0708b43bd2fc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@200b1c05]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.877Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2970489322651480775, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:13:50.614Z
    2020-04-15T15:13:50.869Z


 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.880Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.882Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:13:50.869Z
    2020-04-15T15:13:50.882Z


 --- Transition of flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] ---
  Timestamp: 2020-04-15T15:13:50.914Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D, errorId=2970489322651480775)], sessions=[], senderUUID=3351aa8f-9ea2-491a-994c-9725f3f9cf45)
    CreateTransaction
    RemoveCheckpoint(id=[6efb2b65-2f91-4327-8c83-0708b43bd2fc])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=6efb2b65-2f91-4327-8c83-0708b43bd2fc)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[6efb2b65-2f91-4327-8c83-0708b43bd2fc], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2970489322651480775, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Invocation, sessionId=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, timestamp: 2020-04-15T15:13:50.547Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8D13FA76516F34AC4A1484EF879D92BEBBCEA11A9D23F9198F98891ED7FB8734), errorState=Errored(errors=[FlowError(errorId=2970489322651480775, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@11752070, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=3351aa8f-9ea2-491a-994c-9725f3f9cf45))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-15T15:13:50.882Z
    2020-04-15T15:13:50.888Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
[WARN ] 2020-04-15T15:13:50,918Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6efb2b65-2f91-4327-8c83-0708b43bd2fc] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6efb2b65-2f91-4327-8c83-0708b43bd2fc, invocation_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, invocation_timestamp=2020-04-15T15:13:50.547Z, origin=Only For Testing, session_id=e233a184-e5e9-4a2a-9150-03fc64c6b9ff, session_timestamp=2020-04-15T15:13:50.547Z, thread-id=332}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: A94170CB9846D0BDCE834A173A51B9D32751FA44A406FAAE271D59BF5627D29D
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:53) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:15:25,727Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:15:25,886Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:15:26,843Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:15:27,532Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:15:27,543Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:15:27,543Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:15:27,956Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:15:27,978Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:15:28,345Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:15:28,357Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:28,357Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:15:28,475Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:28,488Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:15:28,838Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:15:28,996Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:15:28,996Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:15:29,019Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:15:29,019Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:15:29,019Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:15:29,381Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,382Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:15:29,393Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:15:29,403Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:15:29,404Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:15:29,404Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:15:29,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:15:29,404Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:15:29,404Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:15:29,414Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:15:29,759Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,759Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:15:29,804Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,804Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:15:29,826Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,826Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:15:29,926Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,927Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:15:29,982Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:15:29,982Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:15:30,061Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,082Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,125Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:15:30,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,158Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:15:30,168Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,179Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:15:30,179Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,189Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,189Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:15:30,199Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,199Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:15:30,199Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,199Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,199Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:15:30,233Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,233Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:15:30,233Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,246Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,246Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:15:30,258Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,258Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,258Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:15:30,315Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,315Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:15:30,325Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,336Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:15:30,336Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:15:30,346Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,346Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:15:30,347Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:15:30,347Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,347Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,348Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,380Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,380Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,390Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:15:30,391Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:15:30,391Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,391Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:15:30,401Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:15:30,411Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:15:30,411Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:15:30,411Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:15:30,414Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:15:30,424Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:15:30,424Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:15:30,446Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:15:30,558Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151521.583/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:15:30,562Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:15:30,568Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:15:30,647Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:15:31,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:15:31,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:15:31,273Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:31,274Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:31,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:15:21.543Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:15:34,640Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:34,644Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151521.583/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:34,644Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:34,675Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:34,746Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:34,750Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,266Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,720Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,722Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,724Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,724Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,789Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:36,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:15:36,831Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:15:36,831Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:15:37,003Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:15:37,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:15:37,009Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,012Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:15:37,119Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,167Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:15:37,180Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,202Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:37,230Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7E1A0AC8D3C6CA0C49F9FF23AC8506D8A97F19E620D54DA50EDE018FA2B3312D uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:15:37,235Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:15:37,238Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:15:37,556Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,577Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:37,578Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:37,578Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:37,583Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151521.583/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:15:37,583Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:15:37,583Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:15:37,589Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:15:37,613Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:15:37,613Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:15:37,629Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:37,629Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:37,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:15:21.543Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:15:38,045Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,047Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151521.583/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,047Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,064Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,066Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,066Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,158Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,168Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,169Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,171Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,171Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,222Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:38,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:15:38,229Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:38,229Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:38,323Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:38,325Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:15:38,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:15:38,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:38,351Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,356Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:15:38,358Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,361Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:38,651Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7E1A0AC8D3C6CA0C49F9FF23AC8506D8A97F19E620D54DA50EDE018FA2B3312D uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:15:38,659Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,664Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:38,666Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:15:38,673Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,674Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:38,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:38,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:38,682Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:38,687Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151521.583/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:15:38,687Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:15:38,687Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:15:38,693Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151521.583/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:15:38,713Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:15:38,713Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:15:38,729Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:38,729Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:15:38,731Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:15:21.543Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:15:39,025Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,026Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151521.583/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,026Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,036Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,037Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,037Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,102Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,108Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,109Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,110Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,110Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,144Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:15:39,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:15:39,148Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:39,148Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:39,222Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:15:39,223Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:15:39,237Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:15:39,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,238Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:39,243Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,249Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:15:39,252Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,256Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:39,280Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7E1A0AC8D3C6CA0C49F9FF23AC8506D8A97F19E620D54DA50EDE018FA2B3312D uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:15:39,287Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,289Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963737009) {}
[INFO ] 2020-04-15T15:15:39,290Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:15:39,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,298Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:39,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963738339) {}
[INFO ] 2020-04-15T15:15:39,308Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:39,315Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,316Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:15:39,325Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,325Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:15:39,325Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963739237) {}
[INFO ] 2020-04-15T15:15:39,325Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[ERROR] 2020-04-15T15:15:39,696Z [Mock network] internal.Verifier. - Error validating transaction 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-15T15:15:39,698Z [Mock network] internal.Verifier. - Error validating transaction 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-15T15:15:39,698Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
[INFO ] 2020-04-15T15:15:39,702Z [Mock network] statemachine.StaffedFlowHospital. - Flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Invocation, sessionId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F2B7D0437DCA03E2E18EC3D2A88BB457BBB9B3A1B11B29CC2EF1AEC7D006E321), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@1be7252a, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=970b2578-474d-4bb6-8bc6-535f23ef3930) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
[INFO ] 2020-04-15T15:15:39,704Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:15:39,707Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:15:39,717Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] errored, dumping all transitions:

 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.476Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Invocation, sessionId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F2B7D0437DCA03E2E18EC3D2A88BB457BBB9B3A1B11B29CC2EF1AEC7D006E321), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a])
    SignalFlowHasStarted(flowId=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.708Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1287310715932554158, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:15:39.427Z
    2020-04-15T15:15:39.701Z


 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.711Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.712Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:15:39.701Z
    2020-04-15T15:15:39.712Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
[WARN ] 2020-04-15T15:15:39,717Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:15:39,719Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:15:39,742Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] errored, dumping all transitions:

 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.476Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Invocation, sessionId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F2B7D0437DCA03E2E18EC3D2A88BB457BBB9B3A1B11B29CC2EF1AEC7D006E321), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a])
    SignalFlowHasStarted(flowId=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@72521f9a]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.708Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1287310715932554158, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:15:39.427Z
    2020-04-15T15:15:39.701Z


 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.711Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.712Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:15:39.701Z
    2020-04-15T15:15:39.712Z


 --- Transition of flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] ---
  Timestamp: 2020-04-15T15:15:39.738Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0, errorId=-1287310715932554158)], sessions=[], senderUUID=970b2578-474d-4bb6-8bc6-535f23ef3930)
    CreateTransaction
    RemoveCheckpoint(id=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[f60db8f3-58d3-499b-a1bd-b3d538a7c5d9], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1287310715932554158, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Invocation, sessionId=a22ae927-fd2c-4799-a15f-47ecad06a71f, timestamp: 2020-04-15T15:15:39.352Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=F2B7D0437DCA03E2E18EC3D2A88BB457BBB9B3A1B11B29CC2EF1AEC7D006E321), errorState=Errored(errors=[FlowError(errorId=-1287310715932554158, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@1be7252a, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=970b2578-474d-4bb6-8bc6-535f23ef3930))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-15T15:15:39.712Z
    2020-04-15T15:15:39.717Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
[WARN ] 2020-04-15T15:15:39,742Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [f60db8f3-58d3-499b-a1bd-b3d538a7c5d9] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f60db8f3-58d3-499b-a1bd-b3d538a7c5d9, invocation_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, invocation_timestamp=2020-04-15T15:15:39.352Z, origin=Only For Testing, session_id=a22ae927-fd2c-4799-a15f-47ecad06a71f, session_timestamp=2020-04-15T15:15:39.352Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: 633A905F8752B4566F5D6512459EBFA76FCA21DA9AA9A40E7997E93523758DC0
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:54) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:40) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:18:50,009Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:18:50,187Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:18:51,152Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:18:51,836Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:18:51,856Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:18:51,857Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:18:52,269Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:18:52,280Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:18:52,664Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:18:52,664Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:52,664Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:18:52,785Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:52,796Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:18:53,153Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:18:53,314Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:18:53,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:18:53,335Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:18:53,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:18:53,335Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:18:53,704Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:53,704Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:18:53,715Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:18:53,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:18:53,739Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:18:54,087Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:54,087Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:18:54,132Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:54,133Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:18:54,155Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:54,155Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:18:54,245Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:54,245Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:18:54,286Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:18:54,298Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:18:54,376Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,398Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,441Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:18:54,486Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,486Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:18:54,486Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,498Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:18:54,498Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,521Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:18:54,554Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,554Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:18:54,564Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,564Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,564Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:18:54,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,576Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,586Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:18:54,640Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,651Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:18:54,652Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,662Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:18:54,662Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:18:54,672Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,672Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:18:54,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:18:54,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,706Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,706Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:18:54,730Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:18:54,730Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:18:54,730Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:18:54,730Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:18:54,744Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:18:54,744Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:18:54,752Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:18:54,774Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:18:54,891Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151845.863/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:18:54,894Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:18:54,901Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:18:54,980Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:18:55,516Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:18:55,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:18:55,581Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:18:55,581Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:18:56,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:18:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:18:58,920Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:18:58,925Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151845.863/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:18:58,925Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:18:58,950Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:18:59,005Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:18:59,008Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:00,482Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:00,944Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:00,946Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:00,948Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:00,948Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:01,003Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:01,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:19:01,044Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:19:01,044Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:19:01,208Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:19:01,214Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:19:01,214Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,224Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:19:01,333Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,372Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:19:01,386Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,406Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:01,430Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7F8315B5F59C37A8617DCE1E6CFAD78921CC4A71B11A39FEB4175E4E211F7EB3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:19:01,434Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:19:01,436Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:19:01,723Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:01,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:01,754Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:01,760Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151845.863/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:19:01,760Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:19:01,760Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:19:01,767Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:19:01,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:19:01,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:19:01,809Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:19:01,809Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:19:01,811Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:18:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:19:02,216Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,217Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151845.863/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,217Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,234Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,237Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,237Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,346Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,356Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,357Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,359Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,359Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,406Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:02,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:19:02,414Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:02,414Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:02,518Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:02,519Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:19:02,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:19:02,534Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,535Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:02,852Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,857Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:19:02,859Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,863Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:02,885Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7F8315B5F59C37A8617DCE1E6CFAD78921CC4A71B11A39FEB4175E4E211F7EB3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:19:02,891Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:02,895Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:19:02,903Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,903Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:02,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,912Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:02,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:02,912Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:02,916Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-151845.863/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:19:02,916Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:19:02,917Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:19:02,922Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-151845.863/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:19:02,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:19:02,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:19:02,953Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:19:02,953Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:19:02,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:18:45.826Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:19:03,241Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-151845.863/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,256Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,258Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,322Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,328Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,329Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,330Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,330Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,364Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:19:03,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:19:03,368Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:03,368Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:03,443Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:19:03,444Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:19:03,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:19:03,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,460Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:03,465Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,471Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:19:03,473Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,477Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:03,502Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=7F8315B5F59C37A8617DCE1E6CFAD78921CC4A71B11A39FEB4175E4E211F7EB3 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:19:03,510Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586963941214) {}
[INFO ] 2020-04-15T15:19:03,513Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:19:03,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,520Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:03,527Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586963942534) {}
[INFO ] 2020-04-15T15:19:03,528Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:03,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,534Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:19:03,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,540Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:19:03,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586963943458) {}
[INFO ] 2020-04-15T15:19:03,540Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[ERROR] 2020-04-15T15:19:03,877Z [Mock network] internal.Verifier. - Error validating transaction F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-15T15:19:03,879Z [Mock network] internal.Verifier. - Error validating transaction F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-15T15:19:03,879Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
[INFO ] 2020-04-15T15:19:03,883Z [Mock network] statemachine.StaffedFlowHospital. - Flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Invocation, sessionId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=84A26EB36A29917A0077175852553355E60A77D50088D75B792F3A2E67B8FA81), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@726c918c, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=bbc26169-fe00-4b79-ad74-9ab6db2bb3e2) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
[INFO ] 2020-04-15T15:19:03,886Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:19:03,889Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:19:03,900Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] errored, dumping all transitions:

 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.684Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Invocation, sessionId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=84A26EB36A29917A0077175852553355E60A77D50088D75B792F3A2E67B8FA81), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7])
    SignalFlowHasStarted(flowId=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.890Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3786549011881221654, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:19:03.636Z
    2020-04-15T15:19:03.882Z


 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.893Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.895Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:19:03.882Z
    2020-04-15T15:19:03.895Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
[WARN ] 2020-04-15T15:19:03,900Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:19:03,902Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:19:03,931Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] errored, dumping all transitions:

 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.684Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Invocation, sessionId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=84A26EB36A29917A0077175852553355E60A77D50088D75B792F3A2E67B8FA81), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7])
    SignalFlowHasStarted(flowId=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@73d194c7]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.890Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3786549011881221654, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:19:03.636Z
    2020-04-15T15:19:03.882Z


 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.893Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.895Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:19:03.882Z
    2020-04-15T15:19:03.895Z


 --- Transition of flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] ---
  Timestamp: 2020-04-15T15:19:03.927Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC, errorId=-3786549011881221654)], sessions=[], senderUUID=bbc26169-fe00-4b79-ad74-9ab6db2bb3e2)
    CreateTransaction
    RemoveCheckpoint(id=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-3786549011881221654, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Invocation, sessionId=8848ce3c-d12e-4a4e-a0d1-de356931680e, timestamp: 2020-04-15T15:19:03.565Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=84A26EB36A29917A0077175852553355E60A77D50088D75B792F3A2E67B8FA81), errorState=Errored(errors=[FlowError(errorId=-3786549011881221654, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@726c918c, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=bbc26169-fe00-4b79-ad74-9ab6db2bb3e2))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-15T15:19:03.895Z
    2020-04-15T15:19:03.900Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
[WARN ] 2020-04-15T15:19:03,931Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5d21357c-a4a2-4bb6-9ee9-6da38e3a5fd4, invocation_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, invocation_timestamp=2020-04-15T15:19:03.565Z, origin=Only For Testing, session_id=8848ce3c-d12e-4a4e-a0d1-de356931680e, session_timestamp=2020-04-15T15:19:03.565Z, thread-id=331}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: F59A5AB256F18E6534151F1C6DC9B77711F33766B95213EFC5A634A42674D7EC
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:55) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:41) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:21:24,617Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:21:24,804Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:21:25,694Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:21:25,709Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:21:25,741Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:21:25,742Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:21:25,742Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:21:25,742Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,742Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:21:25,750Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,750Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:21:25,750Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:21:25,750Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:21:25,750Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:21:25,760Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:21:25,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:21:25,760Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:21:25,803Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:21:25,804Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:21:25,824Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,824Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:21:25,824Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,824Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:21:25,834Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,834Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:21:25,846Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,846Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:21:25,857Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:21:25,857Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:21:25,869Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,869Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,881Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:21:25,892Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,892Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:21:25,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,904Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:21:25,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,904Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:25,905Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:21:25,915Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:25,915Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:21:25,927Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:25,927Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,927Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:21:25,927Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,927Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,937Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:21:25,960Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,960Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:21:25,970Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:25,980Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,003Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,003Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:21:26,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:21:26,005Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:26,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:21:26,014Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:21:26,024Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:21:26,024Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:21:26,025Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:21:26,028Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:21:26,046Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:21:26,046Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:21:26,079Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:21:26,221Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152120.052/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:21:26,225Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:21:26,242Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:21:26,334Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:21:26,970Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:21:26,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:21:27,045Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:27,045Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:27,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:21:20.006Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:21:30,338Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:30,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152120.052/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:30,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:30,364Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:30,421Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:30,425Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:31,905Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,369Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,370Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,373Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,373Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,427Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:32,456Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:21:32,471Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:21:32,471Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:21:32,642Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:21:32,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:21:32,648Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:32,653Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:21:32,773Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:32,814Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:21:32,828Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:32,851Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:32,877Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B5D9008D80CA55796045C2267B02050FCBFA9A7AC1304458FB448DCF049B85A5 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:21:32,882Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:21:32,884Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:21:33,188Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:33,209Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:33,210Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:33,211Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:33,211Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:33,223Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152120.052/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:21:33,224Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:21:33,224Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:21:33,229Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:21:33,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:21:33,249Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:21:33,266Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:33,266Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:33,268Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:21:20.006Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:21:33,682Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,684Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152120.052/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,684Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,701Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,702Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,702Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,779Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,789Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,790Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,792Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,792Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,837Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:33,841Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:21:33,843Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:33,843Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:33,931Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:33,932Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:21:33,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:21:33,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:33,947Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:33,951Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:33,956Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:21:33,958Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:33,961Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:33,983Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B5D9008D80CA55796045C2267B02050FCBFA9A7AC1304458FB448DCF049B85A5 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:21:33,990Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:33,993Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:33,994Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:21:34,001Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:34,002Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:34,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:34,010Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:34,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:34,010Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:34,014Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152120.052/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:21:34,015Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:21:34,015Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:21:34,021Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152120.052/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:21:34,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:21:34,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:21:34,059Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:34,059Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:21:34,061Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:21:20.006Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:21:34,370Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152120.052/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,383Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,385Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,385Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,727Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,733Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,734Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,736Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,736Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,767Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:21:34,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:21:34,771Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:34,771Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:34,839Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:21:34,841Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:21:34,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:21:34,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,858Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:34,864Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,869Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:21:34,871Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,875Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:34,894Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=B5D9008D80CA55796045C2267B02050FCBFA9A7AC1304458FB448DCF049B85A5 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:21:34,899Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,901Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964092648) {}
[INFO ] 2020-04-15T15:21:34,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:21:34,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,909Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:34,915Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964093946) {}
[INFO ] 2020-04-15T15:21:34,916Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:34,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:21:34,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,927Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:21:34,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964094857) {}
[INFO ] 2020-04-15T15:21:34,927Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[ERROR] 2020-04-15T15:21:35,266Z [Mock network] internal.Verifier. - Error validating transaction B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-15T15:21:35,268Z [Mock network] internal.Verifier. - Error validating transaction B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F. [errorCode=8j2ksq, moreInformationAt=https://errors.corda.net/OS/4.4/8j2ksq] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
java.lang.NullPointerException: null
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-15T15:21:35,268Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
[INFO ] 2020-04-15T15:21:35,272Z [Mock network] statemachine.StaffedFlowHospital. - Flow [924ed253-8fbb-4de7-84fe-aaa326895fea] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Invocation, sessionId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=502BD9CAA618A0B18BB7CF616C740D10F1F28EBC5753E96A1CF2847AEA5D6E9A), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@4b3f0298, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=c2243c56-20bf-467a-816e-ac457bfbb863) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
[INFO ] 2020-04-15T15:21:35,274Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:21:35,277Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:21:35,289Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [924ed253-8fbb-4de7-84fe-aaa326895fea] errored, dumping all transitions:

 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.065Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[924ed253-8fbb-4de7-84fe-aaa326895fea], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Invocation, sessionId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=502BD9CAA618A0B18BB7CF616C740D10F1F28EBC5753E96A1CF2847AEA5D6E9A), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5])
    SignalFlowHasStarted(flowId=[924ed253-8fbb-4de7-84fe-aaa326895fea])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.279Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3712887206993072925, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:21:35.018Z
    2020-04-15T15:21:35.271Z


 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.282Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.283Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:21:35.271Z
    2020-04-15T15:21:35.283Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
[WARN ] 2020-04-15T15:21:35,289Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [924ed253-8fbb-4de7-84fe-aaa326895fea] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:21:35,291Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-15T15:21:35,324Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [924ed253-8fbb-4de7-84fe-aaa326895fea] errored, dumping all transitions:

 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.065Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[924ed253-8fbb-4de7-84fe-aaa326895fea], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Invocation, sessionId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=502BD9CAA618A0B18BB7CF616C740D10F1F28EBC5753E96A1CF2847AEA5D6E9A), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5])
    SignalFlowHasStarted(flowId=[924ed253-8fbb-4de7-84fe-aaa326895fea])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@564012a5]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.279Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3712887206993072925, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-15T15:21:35.018Z
    2020-04-15T15:21:35.271Z


 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.282Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.283Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-15T15:21:35.271Z
    2020-04-15T15:21:35.283Z


 --- Transition of flow [924ed253-8fbb-4de7-84fe-aaa326895fea] ---
  Timestamp: 2020-04-15T15:21:35.319Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F, errorId=3712887206993072925)], sessions=[], senderUUID=c2243c56-20bf-467a-816e-ac457bfbb863)
    CreateTransaction
    RemoveCheckpoint(id=[924ed253-8fbb-4de7-84fe-aaa326895fea])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=924ed253-8fbb-4de7-84fe-aaa326895fea)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[924ed253-8fbb-4de7-84fe-aaa326895fea], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3712887206993072925, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Invocation, sessionId=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, timestamp: 2020-04-15T15:21:34.950Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAssetFlow, classToInitiateWith=class org.r3.flow.CreateAssetFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=935828D9592E2FE9E8C07E957A3BCF041AD8CE57EBCEF641D6EE729CBA387C96), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=502BD9CAA618A0B18BB7CF616C740D10F1F28EBC5753E96A1CF2847AEA5D6E9A), errorState=Errored(errors=[FlowError(errorId=3712887206993072925, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAssetFlow@4b3f0298, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=c2243c56-20bf-467a-816e-ac457bfbb863))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-15T15:21:35.283Z
    2020-04-15T15:21:35.290Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
[WARN ] 2020-04-15T15:21:35,324Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [924ed253-8fbb-4de7-84fe-aaa326895fea] error [errorCode=uyy8iv, moreInformationAt=https://errors.corda.net/OS/4.4/uyy8iv] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=924ed253-8fbb-4de7-84fe-aaa326895fea, invocation_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, invocation_timestamp=2020-04-15T15:21:34.950Z, origin=Only For Testing, session_id=9b2eb95f-86e9-4c5d-94e7-9bfa6fc60c20, session_timestamp=2020-04-15T15:21:34.950Z, thread-id=326}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: , contract: org.r3.contract.AssetContract, transaction: B62A74E63589360526953378882396D0BFF5C0BF6148032E8D325FA3BD6EBB1F
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:59) ~[main/:?]
	at org.r3.flow.CreateAssetFlow.call(CreateAssetFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.NullPointerException
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[?:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[?:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[?:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[?:1.8.0_241]
	at org.r3.contract.AssetContract.keysFromParticipants(AssetContract.java:57) ~[cordapp-example-contracts-0.2.jar:?]
	at org.r3.contract.AssetContract.lambda$verify$0(AssetContract.java:43) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at org.r3.contract.AssetContract.verify(AssetContract.java:36) ~[cordapp-example-contracts-0.2.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-15T15:22:28,177Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-15T15:22:28,340Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:22:29,286Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:22:29,987Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-15T15:22:29,997Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-15T15:22:29,998Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:22:30,414Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:22:30,427Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-15T15:22:30,813Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:22:30,813Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:30,813Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-15T15:22:30,937Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:30,948Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:22:31,313Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-15T15:22:31,481Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:22:31,481Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:22:31,492Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:22:31,504Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-15T15:22:31,504Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-15T15:22:31,862Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:31,862Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:22:31,872Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-15T15:22:31,872Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-15T15:22:31,883Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-15T15:22:32,243Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:32,243Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-15T15:22:32,289Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:32,289Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-15T15:22:32,301Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:32,301Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-15T15:22:32,398Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:32,398Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-15T15:22:32,441Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-15T15:22:32,441Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:22:32,526Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,548Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,601Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:22:32,633Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,633Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-15T15:22:32,645Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,645Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-15T15:22:32,645Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,666Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-15T15:22:32,676Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,676Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-15T15:22:32,676Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,676Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,676Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:22:32,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,708Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-15T15:22:32,719Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,719Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,719Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-15T15:22:32,729Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,729Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,740Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:22:32,806Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,807Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-15T15:22:32,807Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,827Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,844Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,863Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,863Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,874Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-15T15:22:32,885Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-15T15:22:32,885Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:22:32,885Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-15T15:22:32,885Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-15T15:22:32,899Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:22:32,909Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-15T15:22:32,909Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-15T15:22:32,921Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-15T15:22:33,036Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152224.012/nodes/0/cordapps] {}
[INFO ] 2020-04-15T15:22:33,039Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:22:33,046Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:22:33,124Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:22:33,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:22:33,680Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:22:33,722Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:33,723Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:34,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:22:23.973Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:22:37,021Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:37,026Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152224.012/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:37,026Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:37,050Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:37,103Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:37,107Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:38,592Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,067Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,068Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,071Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,071Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,128Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:39,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:22:39,170Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:22:39,170Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:22:39,342Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-15T15:22:39,347Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:22:39,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,350Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:22:39,460Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,501Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:22:39,516Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,540Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:39,575Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:22:39,580Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-15T15:22:39,583Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-15T15:22:39,895Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,915Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,916Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:39,916Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:39,917Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:39,922Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152224.012/nodes/1/cordapps] {}
[INFO ] 2020-04-15T15:22:39,922Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:22:39,922Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:22:39,928Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:22:39,947Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:22:39,948Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:22:39,965Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:39,965Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:39,967Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:22:23.973Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:22:40,382Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,383Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152224.012/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,383Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,400Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,402Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,402Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,520Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,533Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,535Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,537Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,537Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,603Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:40,609Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:22:40,612Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:40,612Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:40,711Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:40,713Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:22:40,728Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:22:40,728Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:40,729Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,006Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,012Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:22:41,015Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,019Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:41,042Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:22:41,050Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,054Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:41,055Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:22:41,064Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,065Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,072Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,072Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:41,073Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,073Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:41,078Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200415-152224.012/nodes/2/cordapps] {}
[INFO ] 2020-04-15T15:22:41,078Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-15T15:22:41,078Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-15T15:22:41,083Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200415-152224.012/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-15T15:22:41,098Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-15T15:22:41,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-15T15:22:41,114Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:41,114Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-15T15:22:41,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-15T15:22:23.973Z
      epoch=1
  } {}
[INFO ] 2020-04-15T15:22:41,385Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,387Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200415-152224.012/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,387Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,400Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,402Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,402Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,477Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,483Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,484Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,485Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,485Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,516Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-15T15:22:41,520Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-15T15:22:41,521Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:41,521Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:41,588Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-15T15:22:41,590Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-15T15:22:41,604Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-15T15:22:41,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,605Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,611Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,619Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-15T15:22:41,622Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,626Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:41,649Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-15T15:22:41,655Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,657Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1586964159347) {}
[INFO ] 2020-04-15T15:22:41,659Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-15T15:22:41,666Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,675Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1586964160728) {}
[INFO ] 2020-04-15T15:22:41,676Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,682Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-15T15:22:41,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,688Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:41,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1586964161604) {}
[INFO ] 2020-04-15T15:22:41,688Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-15T15:22:42,122Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4bcb5e9e-caa9-4a4a-a2c3-18d2fcb4ad58, invocation_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, invocation_timestamp=2020-04-15T15:22:41.713Z, origin=Only For Testing, session_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, session_timestamp=2020-04-15T15:22:41.713Z, thread-id=331, tx_id=322856307AED46BAF26DCF5F095AA15537327019D987846525ACFA9A2BD5B9DF}
[INFO ] 2020-04-15T15:22:42,122Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4bcb5e9e-caa9-4a4a-a2c3-18d2fcb4ad58, invocation_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, invocation_timestamp=2020-04-15T15:22:41.713Z, origin=Only For Testing, session_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, session_timestamp=2020-04-15T15:22:41.713Z, thread-id=331, tx_id=322856307AED46BAF26DCF5F095AA15537327019D987846525ACFA9A2BD5B9DF}
[INFO ] 2020-04-15T15:22:42,202Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4bcb5e9e-caa9-4a4a-a2c3-18d2fcb4ad58, invocation_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, invocation_timestamp=2020-04-15T15:22:41.713Z, origin=Only For Testing, session_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, session_timestamp=2020-04-15T15:22:41.713Z, thread-id=331, tx_id=322856307AED46BAF26DCF5F095AA15537327019D987846525ACFA9A2BD5B9DF}
[INFO ] 2020-04-15T15:22:42,202Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4bcb5e9e-caa9-4a4a-a2c3-18d2fcb4ad58, invocation_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, invocation_timestamp=2020-04-15T15:22:41.713Z, origin=Only For Testing, session_id=5d2ec2d0-c854-4f8f-a7c7-0de5c5ddcacd, session_timestamp=2020-04-15T15:22:41.713Z, thread-id=331, tx_id=322856307AED46BAF26DCF5F095AA15537327019D987846525ACFA9A2BD5B9DF}
[INFO ] 2020-04-16T09:21:42,903Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T09:21:43,092Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T09:21:44,120Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T09:21:44,856Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T09:21:44,867Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T09:21:44,868Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T09:21:45,317Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T09:21:45,328Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T09:21:45,738Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T09:21:45,738Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:45,738Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T09:21:45,872Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:45,873Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T09:21:46,257Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T09:21:46,425Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T09:21:46,437Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T09:21:46,449Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T09:21:46,449Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T09:21:46,449Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T09:21:46,834Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:46,834Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T09:21:46,845Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T09:21:46,845Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T09:21:46,857Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T09:21:47,241Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:47,241Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T09:21:47,282Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:47,282Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T09:21:47,306Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:47,306Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T09:21:47,402Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:47,403Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T09:21:47,448Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T09:21:47,448Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T09:21:47,525Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,538Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,581Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T09:21:47,623Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,623Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T09:21:47,633Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,643Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T09:21:47,643Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,664Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,674Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T09:21:47,697Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T09:21:47,708Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,708Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,709Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T09:21:47,719Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,731Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,731Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T09:21:47,797Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,797Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T09:21:47,797Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T09:21:47,821Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,831Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,865Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T09:21:47,888Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T09:21:47,888Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T09:21:47,888Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T09:21:47,888Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T09:21:47,902Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T09:21:47,912Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T09:21:47,912Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T09:21:47,924Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T09:21:48,045Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-092138.438/nodes/0/cordapps] {}
[INFO ] 2020-04-16T09:21:48,049Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T09:21:48,056Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T09:21:48,140Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T09:21:48,718Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T09:21:48,744Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T09:21:48,794Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:48,794Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:49,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T09:21:38.396Z
      epoch=1
  } {}
[INFO ] 2020-04-16T09:21:52,288Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:52,291Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-092138.438/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:52,291Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:52,315Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:52,366Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:52,369Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:53,981Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,482Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,483Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,486Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,486Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,550Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:54,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T09:21:54,597Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T09:21:54,597Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T09:21:54,782Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T09:21:54,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T09:21:54,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:54,792Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T09:21:54,906Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:54,953Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T09:21:54,967Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:54,989Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:55,016Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T09:21:55,021Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T09:21:55,023Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T09:21:55,338Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:55,359Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:55,360Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:55,361Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:55,361Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:55,366Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-092138.438/nodes/1/cordapps] {}
[INFO ] 2020-04-16T09:21:55,366Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T09:21:55,366Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T09:21:55,372Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T09:21:55,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T09:21:55,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T09:21:55,416Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:55,416Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:55,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T09:21:38.396Z
      epoch=1
  } {}
[INFO ] 2020-04-16T09:21:55,821Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,822Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-092138.438/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,822Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,838Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,840Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,840Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,953Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,966Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,967Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,969Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:55,969Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,026Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T09:21:56,033Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:56,033Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:56,135Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:56,136Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T09:21:56,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T09:21:56,152Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,154Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:56,161Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,165Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T09:21:56,169Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,172Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:56,474Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T09:21:56,483Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:56,489Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T09:21:56,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,496Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:56,504Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,504Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:56,504Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:56,504Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:56,509Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-092138.438/nodes/2/cordapps] {}
[INFO ] 2020-04-16T09:21:56,509Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T09:21:56,509Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T09:21:56,514Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-092138.438/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T09:21:56,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T09:21:56,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T09:21:56,548Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:56,548Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T09:21:56,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T09:21:38.396Z
      epoch=1
  } {}
[INFO ] 2020-04-16T09:21:56,862Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,863Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-092138.438/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,863Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,875Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,878Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,878Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,942Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,949Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,949Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,951Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,951Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,983Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T09:21:56,986Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T09:21:56,986Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:56,986Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:57,057Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T09:21:57,058Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T09:21:57,074Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T09:21:57,074Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,075Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:57,080Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,085Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T09:21:57,087Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,091Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:57,110Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=64A5E81187B1E0CF902452E900A7C625D2A6B460873996B16EB87285F430C26E uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T09:21:57,116Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,119Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587028914788) {}
[INFO ] 2020-04-16T09:21:57,120Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T09:21:57,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,127Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:57,135Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587028916152) {}
[INFO ] 2020-04-16T09:21:57,139Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:57,145Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,145Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T09:21:57,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,151Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:57,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587028917074) {}
[INFO ] 2020-04-16T09:21:57,151Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T09:21:57,610Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=017d3ac7-f06a-4654-8953-8a069744f3a4, invocation_id=423b566b-2250-41c3-b45f-af04e09ef32b, invocation_timestamp=2020-04-16T09:21:57.177Z, origin=Only For Testing, session_id=423b566b-2250-41c3-b45f-af04e09ef32b, session_timestamp=2020-04-16T09:21:57.177Z, thread-id=332, tx_id=B48B78B726B403985F7E6B5810971B4C4DC6EC0F81045AF61DC4A7141EBA0F3F}
[INFO ] 2020-04-16T09:21:57,610Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=017d3ac7-f06a-4654-8953-8a069744f3a4, invocation_id=423b566b-2250-41c3-b45f-af04e09ef32b, invocation_timestamp=2020-04-16T09:21:57.177Z, origin=Only For Testing, session_id=423b566b-2250-41c3-b45f-af04e09ef32b, session_timestamp=2020-04-16T09:21:57.177Z, thread-id=332, tx_id=B48B78B726B403985F7E6B5810971B4C4DC6EC0F81045AF61DC4A7141EBA0F3F}
[INFO ] 2020-04-16T09:21:57,688Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=017d3ac7-f06a-4654-8953-8a069744f3a4, invocation_id=423b566b-2250-41c3-b45f-af04e09ef32b, invocation_timestamp=2020-04-16T09:21:57.177Z, origin=Only For Testing, session_id=423b566b-2250-41c3-b45f-af04e09ef32b, session_timestamp=2020-04-16T09:21:57.177Z, thread-id=332, tx_id=B48B78B726B403985F7E6B5810971B4C4DC6EC0F81045AF61DC4A7141EBA0F3F}
[INFO ] 2020-04-16T09:21:57,688Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=017d3ac7-f06a-4654-8953-8a069744f3a4, invocation_id=423b566b-2250-41c3-b45f-af04e09ef32b, invocation_timestamp=2020-04-16T09:21:57.177Z, origin=Only For Testing, session_id=423b566b-2250-41c3-b45f-af04e09ef32b, session_timestamp=2020-04-16T09:21:57.177Z, thread-id=332, tx_id=B48B78B726B403985F7E6B5810971B4C4DC6EC0F81045AF61DC4A7141EBA0F3F}
[INFO ] 2020-04-16T11:49:06,843Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T11:49:07,036Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T11:49:08,284Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T11:49:09,071Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T11:49:09,082Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T11:49:09,093Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T11:49:09,575Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T11:49:09,596Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T11:49:10,024Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T11:49:10,035Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:10,035Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T11:49:10,182Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:10,194Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T11:49:10,612Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T11:49:10,790Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T11:49:10,802Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T11:49:10,813Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T11:49:10,825Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T11:49:10,825Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T11:49:11,228Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,228Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T11:49:11,238Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T11:49:11,249Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T11:49:11,249Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T11:49:11,259Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T11:49:11,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T11:49:11,259Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T11:49:11,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T11:49:11,259Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T11:49:11,668Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,669Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T11:49:11,724Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,724Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T11:49:11,745Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,745Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T11:49:11,869Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,870Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T11:49:11,925Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T11:49:11,925Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T11:49:12,025Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,057Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,116Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T11:49:12,158Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,158Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T11:49:12,159Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,169Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T11:49:12,169Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,191Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,191Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T11:49:12,191Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T11:49:12,204Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,204Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,204Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T11:49:12,226Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,227Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T11:49:12,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,239Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T11:49:12,251Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,251Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,261Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T11:49:12,316Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,329Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T11:49:12,329Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,341Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T11:49:12,341Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T11:49:12,341Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,341Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T11:49:12,352Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,352Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T11:49:12,352Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,352Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,352Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T11:49:12,388Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,399Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T11:49:12,399Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T11:49:12,410Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T11:49:12,410Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T11:49:12,410Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T11:49:12,414Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T11:49:12,423Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T11:49:12,424Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T11:49:12,448Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T11:49:12,575Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-114902.115/nodes/0/cordapps] {}
[INFO ] 2020-04-16T11:49:12,579Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T11:49:12,585Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T11:49:12,669Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T11:49:13,312Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T11:49:13,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T11:49:13,391Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:13,391Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:13,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T11:49:02.064Z
      epoch=1
  } {}
[INFO ] 2020-04-16T11:49:17,219Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:17,223Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-114902.115/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:17,223Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:17,253Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:17,318Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:17,323Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,230Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,784Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,786Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,789Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,789Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,852Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:19,883Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T11:49:19,899Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T11:49:19,899Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T11:49:20,097Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T11:49:20,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T11:49:20,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,107Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T11:49:20,241Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,285Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T11:49:20,302Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,334Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:20,364Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5A66644275C407C03F0F8F2D9EF87E5FD22AA162029CFFAA769EA5BC82356EEA uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T11:49:20,370Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T11:49:20,372Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T11:49:20,729Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,755Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,756Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:20,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:20,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:20,763Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-114902.115/nodes/1/cordapps] {}
[INFO ] 2020-04-16T11:49:20,763Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T11:49:20,763Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T11:49:20,770Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T11:49:20,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T11:49:20,795Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T11:49:20,821Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:20,821Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:20,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T11:49:02.064Z
      epoch=1
  } {}
[INFO ] 2020-04-16T11:49:21,281Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,283Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-114902.115/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,283Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,303Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,306Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,306Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,426Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,439Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,440Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,442Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,443Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,502Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:21,507Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T11:49:21,510Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:21,510Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:21,617Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:21,619Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T11:49:21,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T11:49:21,639Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:21,641Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:21,936Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:21,942Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T11:49:21,944Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:21,948Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:21,973Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5A66644275C407C03F0F8F2D9EF87E5FD22AA162029CFFAA769EA5BC82356EEA uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T11:49:21,980Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:21,984Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:21,985Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T11:49:21,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:21,997Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:22,007Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:22,007Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:22,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:22,008Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:22,013Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-114902.115/nodes/2/cordapps] {}
[INFO ] 2020-04-16T11:49:22,013Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T11:49:22,013Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T11:49:22,020Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-114902.115/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T11:49:22,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T11:49:22,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T11:49:22,061Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:22,061Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T11:49:22,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T11:49:02.064Z
      epoch=1
  } {}
[INFO ] 2020-04-16T11:49:22,424Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,426Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-114902.115/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,426Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,441Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,444Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,444Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,515Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,521Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,522Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,524Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,524Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,563Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T11:49:22,566Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T11:49:22,567Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:22,567Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:22,643Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T11:49:22,644Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T11:49:22,660Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T11:49:22,660Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,661Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:22,666Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,672Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T11:49:22,675Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,682Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:22,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5A66644275C407C03F0F8F2D9EF87E5FD22AA162029CFFAA769EA5BC82356EEA uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T11:49:22,712Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587037760104) {}
[INFO ] 2020-04-16T11:49:22,716Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T11:49:22,723Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,724Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:22,734Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587037761639) {}
[INFO ] 2020-04-16T11:49:22,735Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:22,743Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,743Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T11:49:22,751Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,751Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:22,751Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587037762660) {}
[INFO ] 2020-04-16T11:49:22,751Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T11:49:23,248Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f1eedb04-67c6-41be-8d26-f23aaa44eb7a, invocation_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, invocation_timestamp=2020-04-16T11:49:22.781Z, origin=Only For Testing, session_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, session_timestamp=2020-04-16T11:49:22.781Z, thread-id=331, tx_id=BFA0510BCCA14239A63C9F463791D81B46F76BBF7BC3A63814C3FD6428E9A5BA}
[INFO ] 2020-04-16T11:49:23,248Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f1eedb04-67c6-41be-8d26-f23aaa44eb7a, invocation_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, invocation_timestamp=2020-04-16T11:49:22.781Z, origin=Only For Testing, session_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, session_timestamp=2020-04-16T11:49:22.781Z, thread-id=331, tx_id=BFA0510BCCA14239A63C9F463791D81B46F76BBF7BC3A63814C3FD6428E9A5BA}
[INFO ] 2020-04-16T11:49:23,329Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f1eedb04-67c6-41be-8d26-f23aaa44eb7a, invocation_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, invocation_timestamp=2020-04-16T11:49:22.781Z, origin=Only For Testing, session_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, session_timestamp=2020-04-16T11:49:22.781Z, thread-id=331, tx_id=BFA0510BCCA14239A63C9F463791D81B46F76BBF7BC3A63814C3FD6428E9A5BA}
[INFO ] 2020-04-16T11:49:23,330Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=f1eedb04-67c6-41be-8d26-f23aaa44eb7a, invocation_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, invocation_timestamp=2020-04-16T11:49:22.781Z, origin=Only For Testing, session_id=ec66b02a-acb1-4d95-82ec-aaf5b5a6ae10, session_timestamp=2020-04-16T11:49:22.781Z, thread-id=331, tx_id=BFA0510BCCA14239A63C9F463791D81B46F76BBF7BC3A63814C3FD6428E9A5BA}
[INFO ] 2020-04-16T12:48:58,695Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T12:48:58,904Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:49:00,115Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:49:00,859Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T12:49:00,869Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:49:00,870Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:49:01,327Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:49:01,340Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T12:49:01,784Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:49:01,784Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:01,784Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T12:49:01,919Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:01,930Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:49:02,344Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T12:49:02,518Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:49:02,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:49:02,542Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:49:02,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:49:02,543Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:49:02,947Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:02,947Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:49:02,947Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T12:49:02,958Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:49:02,970Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:49:03,402Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:03,402Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T12:49:03,460Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:03,460Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T12:49:03,484Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:03,484Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T12:49:03,580Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:03,580Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T12:49:03,637Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:49:03,637Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:49:03,741Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,764Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:49:03,822Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:49:03,869Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:49:03,869Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:49:03,869Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:49:03,880Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T12:49:03,880Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:03,915Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:49:03,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:03,942Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:49:03,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:03,957Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T12:49:03,969Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:03,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:49:03,980Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:49:04,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:49:04,040Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:49:04,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:49:04,062Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,063Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,098Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,098Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:04,109Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T12:49:04,120Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:49:04,120Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:49:04,120Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T12:49:04,120Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:49:04,136Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:49:04,146Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T12:49:04,146Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:49:04,160Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T12:49:04,311Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-124853.991/nodes/0/cordapps] {}
[INFO ] 2020-04-16T12:49:04,315Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:49:04,321Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:49:04,415Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:49:05,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:49:05,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:49:05,147Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:05,148Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:05,148Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:49:05,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:48:53.951Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:49:09,020Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:09,024Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-124853.991/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:09,024Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:09,054Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:09,119Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:09,125Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:10,987Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,539Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,541Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,544Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,544Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,609Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:11,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:49:11,654Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:49:11,654Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:49:11,862Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:49:11,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:49:11,868Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:11,872Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:49:12,005Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:12,053Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:49:12,069Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:12,094Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:12,138Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9A5E16ACEE9D2E652AE2A10EA8B3EB1220146D5FB3211B748EACC495F73D8417 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:49:12,144Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T12:49:12,147Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T12:49:12,512Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:12,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:12,537Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:12,537Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:12,537Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:12,543Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-124853.991/nodes/1/cordapps] {}
[INFO ] 2020-04-16T12:49:12,544Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:49:12,544Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:49:12,550Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:49:12,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:49:12,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:49:12,589Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:12,589Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:12,589Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:49:12,592Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:48:53.951Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:49:13,043Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,045Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-124853.991/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,045Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,066Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,069Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,069Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,203Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,216Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,217Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,219Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,219Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,281Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:13,288Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:49:13,290Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:13,290Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:13,403Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:13,405Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:49:13,423Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:49:13,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,425Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:13,728Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,734Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:49:13,737Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,741Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:13,767Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9A5E16ACEE9D2E652AE2A10EA8B3EB1220146D5FB3211B748EACC495F73D8417 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:49:13,775Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,779Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:13,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:49:13,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,789Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:13,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:13,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:13,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:13,803Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-124853.991/nodes/2/cordapps] {}
[INFO ] 2020-04-16T12:49:13,804Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:49:13,804Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:49:13,810Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-124853.991/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:49:13,827Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:49:13,827Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:49:13,845Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:13,845Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:49:13,845Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:49:13,847Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:48:53.951Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:49:14,184Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,186Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-124853.991/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,186Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,204Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,207Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,207Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,277Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,284Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,285Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,286Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,286Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,321Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:49:14,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:49:14,325Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:14,325Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:14,401Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:49:14,402Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:49:14,419Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:49:14,419Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,420Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:14,427Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,431Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:49:14,434Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,439Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:14,466Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9A5E16ACEE9D2E652AE2A10EA8B3EB1220146D5FB3211B748EACC495F73D8417 uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:49:14,474Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041351868) {}
[INFO ] 2020-04-16T12:49:14,478Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:49:14,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,487Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:14,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041353423) {}
[INFO ] 2020-04-16T12:49:14,495Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:14,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,503Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:49:14,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,509Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:14,510Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041354419) {}
[INFO ] 2020-04-16T12:49:14,510Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:49:15,006Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=decb55d2-20a6-4d3d-a6ef-6908e0b29af4, invocation_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, invocation_timestamp=2020-04-16T12:49:14.540Z, origin=Only For Testing, session_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, session_timestamp=2020-04-16T12:49:14.540Z, thread-id=332, tx_id=86C8053C7BD03A1F34DFEBD6B06B5421AF5F46B24FD540D259B7BC2E4C8B0E46}
[INFO ] 2020-04-16T12:49:15,006Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=decb55d2-20a6-4d3d-a6ef-6908e0b29af4, invocation_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, invocation_timestamp=2020-04-16T12:49:14.540Z, origin=Only For Testing, session_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, session_timestamp=2020-04-16T12:49:14.540Z, thread-id=332, tx_id=86C8053C7BD03A1F34DFEBD6B06B5421AF5F46B24FD540D259B7BC2E4C8B0E46}
[INFO ] 2020-04-16T12:49:15,084Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=decb55d2-20a6-4d3d-a6ef-6908e0b29af4, invocation_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, invocation_timestamp=2020-04-16T12:49:14.540Z, origin=Only For Testing, session_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, session_timestamp=2020-04-16T12:49:14.540Z, thread-id=332, tx_id=86C8053C7BD03A1F34DFEBD6B06B5421AF5F46B24FD540D259B7BC2E4C8B0E46}
[INFO ] 2020-04-16T12:49:15,084Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=decb55d2-20a6-4d3d-a6ef-6908e0b29af4, invocation_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, invocation_timestamp=2020-04-16T12:49:14.540Z, origin=Only For Testing, session_id=eb493df4-46c8-49ef-99e6-3df7c5b6f5d8, session_timestamp=2020-04-16T12:49:14.540Z, thread-id=332, tx_id=86C8053C7BD03A1F34DFEBD6B06B5421AF5F46B24FD540D259B7BC2E4C8B0E46}
[INFO ] 2020-04-16T12:49:15,165Z [Mock network] corda.flow. - Flow raised an error: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
[INFO ] 2020-04-16T12:49:15,168Z [Mock network] statemachine.StaffedFlowHospital. - Flow [db98e7f6-be32-4d86-b63a-61b97847d4da] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Invocation, sessionId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAuctionFlow$Initiator, classToInitiateWith=class org.r3.flow.CreateAuctionFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=2D3ECD109D8F0DF11CA7E60CE1B38851B4D9160E925F6EBE28A3E5B87AA3B2CE), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C2FBA5CAF7F373D28EDEFE00517828874B23C08C1BEB521E8EA0D7148CE217EA), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flow.CreateAuctionFlow$Initiator@57acb994, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=913b7310-5fea-42de-966d-1c1a573451d8) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
[INFO ] 2020-04-16T12:49:15,170Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().
	at net.corda.core.transactions.TransactionBuilder.requireNotNullContractClassName(TransactionBuilder.kt:771) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState$default(TransactionBuilder.kt:758) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState(TransactionBuilder.kt) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:70) ~[main/:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-16T12:49:15,173Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().
	at net.corda.core.transactions.TransactionBuilder.requireNotNullContractClassName(TransactionBuilder.kt:771) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState$default(TransactionBuilder.kt:758) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState(TransactionBuilder.kt) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:70) ~[main/:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-16T12:49:15,187Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [db98e7f6-be32-4d86-b63a-61b97847d4da] errored, dumping all transitions:

 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[db98e7f6-be32-4d86-b63a-61b97847d4da], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Invocation, sessionId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAuctionFlow$Initiator, classToInitiateWith=class org.r3.flow.CreateAuctionFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=2D3ECD109D8F0DF11CA7E60CE1B38851B4D9160E925F6EBE28A3E5B87AA3B2CE), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C2FBA5CAF7F373D28EDEFE00517828874B23C08C1BEB521E8EA0D7148CE217EA), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3])
    SignalFlowHasStarted(flowId=[db98e7f6-be32-4d86-b63a-61b97847d4da])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.174Z
  Event: Error(exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-2294621500849821718, exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-16T12:49:15.150Z
    2020-04-16T12:49:15.167Z


 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.180Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-16T12:49:15.167Z
    2020-04-16T12:49:15.179Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
[WARN ] 2020-04-16T12:49:15,187Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [db98e7f6-be32-4d86-b63a-61b97847d4da] error [errorCode=gljrrh, moreInformationAt=https://errors.corda.net/OS/4.4/gljrrh] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().
	at net.corda.core.transactions.TransactionBuilder.requireNotNullContractClassName(TransactionBuilder.kt:771) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState$default(TransactionBuilder.kt:758) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState(TransactionBuilder.kt) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:70) ~[main/:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-16T12:49:15,189Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
[WARN ] 2020-04-16T12:49:15,206Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [db98e7f6-be32-4d86-b63a-61b97847d4da] errored, dumping all transitions:

 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[db98e7f6-be32-4d86-b63a-61b97847d4da], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Invocation, sessionId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAuctionFlow$Initiator, classToInitiateWith=class org.r3.flow.CreateAuctionFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=2D3ECD109D8F0DF11CA7E60CE1B38851B4D9160E925F6EBE28A3E5B87AA3B2CE), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C2FBA5CAF7F373D28EDEFE00517828874B23C08C1BEB521E8EA0D7148CE217EA), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3])
    SignalFlowHasStarted(flowId=[db98e7f6-be32-4d86-b63a-61b97847d4da])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7724bde3]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.174Z
  Event: Error(exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-2294621500849821718, exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2020-04-16T12:49:15.150Z
    2020-04-16T12:49:15.167Z


 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.180Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2020-04-16T12:49:15.167Z
    2020-04-16T12:49:15.179Z


 --- Transition of flow [db98e7f6-be32-4d86-b63a-61b97847d4da] ---
  Timestamp: 2020-04-16T12:49:15.199Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-2294621500849821718)], sessions=[], senderUUID=913b7310-5fea-42de-966d-1c1a573451d8)
    CreateTransaction
    RemoveCheckpoint(id=[db98e7f6-be32-4d86-b63a-61b97847d4da])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=db98e7f6-be32-4d86-b63a-61b97847d4da)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[db98e7f6-be32-4d86-b63a-61b97847d4da], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-2294621500849821718, exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Invocation, sessionId=d8787b71-2438-4747-8bea-dba43eb44a2d, timestamp: 2020-04-16T12:49:15.144Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class org.r3.flow.CreateAuctionFlow$Initiator, classToInitiateWith=class org.r3.flow.CreateAuctionFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=cordapp-example-workflows-0.2, corDappHash=2D3ECD109D8F0DF11CA7E60CE1B38851B4D9160E925F6EBE28A3E5B87AA3B2CE), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C2FBA5CAF7F373D28EDEFE00517828874B23C08C1BEB521E8EA0D7148CE217EA), errorState=Errored(errors=[FlowError(errorId=-2294621500849821718, exception=java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flow.CreateAuctionFlow$Initiator@57acb994, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=913b7310-5fea-42de-966d-1c1a573451d8))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2020-04-16T12:49:15.179Z
    2020-04-16T12:49:15.188Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
[WARN ] 2020-04-16T12:49:15,206Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [db98e7f6-be32-4d86-b63a-61b97847d4da] error [errorCode=gljrrh, moreInformationAt=https://errors.corda.net/OS/4.4/gljrrh] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=db98e7f6-be32-4d86-b63a-61b97847d4da, invocation_id=d8787b71-2438-4747-8bea-dba43eb44a2d, invocation_timestamp=2020-04-16T12:49:15.144Z, origin=Only For Testing, session_id=d8787b71-2438-4747-8bea-dba43eb44a2d, session_timestamp=2020-04-16T12:49:15.144Z, thread-id=332}
java.lang.IllegalArgumentException: Unable to infer Contract class name because state class org.r3.state.AuctionState is not annotated with @BelongsToContract, and does not have an enclosing class which implements Contract. Either annotate org.r3.state.AuctionState with @BelongsToContract, or supply an explicit contract parameter to addOutputState().
	at net.corda.core.transactions.TransactionBuilder.requireNotNullContractClassName(TransactionBuilder.kt:771) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState$default(TransactionBuilder.kt:758) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addOutputState(TransactionBuilder.kt) ~[corda-core-4.4.jar:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:70) ~[main/:?]
	at org.r3.flow.CreateAuctionFlow$Initiator.call(CreateAuctionFlow.java:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-16T12:50:57,582Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T12:50:57,787Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:50:58,958Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:50:59,703Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T12:50:59,715Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:50:59,716Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:51:00,176Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:51:00,188Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T12:51:00,626Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:51:00,636Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:00,637Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T12:51:00,768Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:00,781Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:51:01,187Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T12:51:01,361Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:51:01,361Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:51:01,383Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:51:01,384Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:51:01,384Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:51:01,791Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:01,791Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:51:01,791Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T12:51:01,802Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:51:01,812Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T12:51:01,813Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:51:01,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:51:01,813Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:51:01,813Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:51:01,813Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:51:02,192Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:02,192Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T12:51:02,246Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:02,246Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T12:51:02,278Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:02,278Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T12:51:02,401Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:02,401Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T12:51:02,454Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:51:02,466Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:51:02,565Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,586Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,648Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:51:02,693Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,693Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:51:02,693Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,703Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T12:51:02,704Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,724Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,735Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:51:02,770Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,770Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:51:02,780Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,780Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,780Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T12:51:02,790Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,790Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,800Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:51:02,866Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,867Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:51:02,867Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,878Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T12:51:02,878Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:51:02,890Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,890Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T12:51:02,890Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,890Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T12:51:02,891Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,891Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,891Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,925Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,925Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,925Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,925Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,926Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T12:51:02,949Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:51:02,949Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:51:02,949Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T12:51:02,949Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:51:02,963Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:51:02,971Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T12:51:02,971Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:51:02,999Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T12:51:03,162Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125052.812/nodes/0/cordapps] {}
[INFO ] 2020-04-16T12:51:03,166Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:51:03,174Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:51:03,262Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:51:03,933Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:51:03,960Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:51:04,009Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:04,009Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:04,009Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:51:04,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:50:52.766Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:51:07,868Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:07,873Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125052.812/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:07,873Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:07,904Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:07,984Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:07,989Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:09,920Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,528Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,530Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,533Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,533Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,595Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:10,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:51:10,646Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:51:10,646Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:51:10,858Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:51:10,864Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:51:10,864Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:10,868Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:51:11,011Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:11,063Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:51:11,079Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:11,104Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:11,138Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:51:11,143Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T12:51:11,145Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T12:51:11,520Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:11,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:11,556Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:11,556Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:11,556Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125052.812/nodes/1/cordapps] {}
[INFO ] 2020-04-16T12:51:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:51:11,563Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:51:11,570Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:51:11,595Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:51:11,596Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:51:11,615Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:11,615Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:11,615Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:51:11,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:50:52.766Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:51:12,090Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,092Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125052.812/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,092Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,109Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,112Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,112Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,257Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,267Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,269Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,271Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,271Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,324Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:12,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:51:12,340Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:12,340Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:12,440Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:12,442Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:51:12,745Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:51:12,745Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:12,751Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,756Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:51:12,759Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,762Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:12,787Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:51:12,795Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:12,799Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:51:12,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,807Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:12,816Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,816Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:12,816Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:12,816Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:12,822Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125052.812/nodes/2/cordapps] {}
[INFO ] 2020-04-16T12:51:12,822Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:51:12,822Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:51:12,829Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125052.812/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:51:12,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:51:12,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:51:12,864Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:12,865Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:51:12,865Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:51:12,867Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:50:52.766Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:51:13,196Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125052.812/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,212Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,215Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,215Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,297Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,305Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,305Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,307Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,307Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,351Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:51:13,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:51:13,357Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:13,357Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:13,446Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:51:13,447Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:51:13,462Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:51:13,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,463Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:13,469Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,474Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:51:13,476Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,480Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:13,508Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:51:13,517Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041470864) {}
[INFO ] 2020-04-16T12:51:13,522Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:51:13,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,534Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:13,544Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041472745) {}
[INFO ] 2020-04-16T12:51:13,546Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:13,553Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,554Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:51:13,563Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,563Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:13,563Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041473462) {}
[INFO ] 2020-04-16T12:51:13,563Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:51:14,112Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8ac387ed-3076-4ffa-b7db-00658b322839, invocation_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, invocation_timestamp=2020-04-16T12:51:13.596Z, origin=Only For Testing, session_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, session_timestamp=2020-04-16T12:51:13.596Z, thread-id=331, tx_id=AAF9A6E4E256019911A9D8E02ECA48C5AF88A5CC9CE2BA3DB597B55B04B786F5}
[INFO ] 2020-04-16T12:51:14,112Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8ac387ed-3076-4ffa-b7db-00658b322839, invocation_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, invocation_timestamp=2020-04-16T12:51:13.596Z, origin=Only For Testing, session_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, session_timestamp=2020-04-16T12:51:13.596Z, thread-id=331, tx_id=AAF9A6E4E256019911A9D8E02ECA48C5AF88A5CC9CE2BA3DB597B55B04B786F5}
[INFO ] 2020-04-16T12:51:14,201Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8ac387ed-3076-4ffa-b7db-00658b322839, invocation_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, invocation_timestamp=2020-04-16T12:51:13.596Z, origin=Only For Testing, session_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, session_timestamp=2020-04-16T12:51:13.596Z, thread-id=331, tx_id=AAF9A6E4E256019911A9D8E02ECA48C5AF88A5CC9CE2BA3DB597B55B04B786F5}
[INFO ] 2020-04-16T12:51:14,201Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8ac387ed-3076-4ffa-b7db-00658b322839, invocation_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, invocation_timestamp=2020-04-16T12:51:13.596Z, origin=Only For Testing, session_id=7d88cc4c-9d50-4fea-829e-cad57729ffb8, session_timestamp=2020-04-16T12:51:13.596Z, thread-id=331, tx_id=AAF9A6E4E256019911A9D8E02ECA48C5AF88A5CC9CE2BA3DB597B55B04B786F5}
[INFO ] 2020-04-16T12:51:14,445Z [Mock network] corda.flow. - Flow raised an error: Transaction context is missing. This might happen if a suspendable method is not annotated with @Suspendable annotation.. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6bfeba19-10c4-474c-8e5b-1cd93b4d5f60, invocation_id=e40f9f06-809f-41cc-83cc-3a6f083c1773, invocation_timestamp=2020-04-16T12:51:14.273Z, origin=Only For Testing, session_id=e40f9f06-809f-41cc-83cc-3a6f083c1773, session_timestamp=2020-04-16T12:51:14.273Z, thread-id=331, tx_id=230EDDA69BAD3A485495244F53D01F603D733515F839F36F208CA0BFBEB60268}
[WARN ] 2020-04-16T12:51:14,445Z [Mock network] corda.flow. - Caught exception from flow [errorCode=wxd0n9, moreInformationAt=https://errors.corda.net/OS/4.4/wxd0n9] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6bfeba19-10c4-474c-8e5b-1cd93b4d5f60, invocation_id=e40f9f06-809f-41cc-83cc-3a6f083c1773, invocation_timestamp=2020-04-16T12:51:14.273Z, origin=Only For Testing, session_id=e40f9f06-809f-41cc-83cc-3a6f083c1773, session_timestamp=2020-04-16T12:51:14.273Z, thread-id=331, tx_id=230EDDA69BAD3A485495244F53D01F603D733515F839F36F208CA0BFBEB60268}
java.lang.IllegalArgumentException: Transaction context is missing. This might happen if a suspendable method is not annotated with @Suspendable annotation.
	at net.corda.node.services.statemachine.FlowStateMachineImpl.checkDbTransaction(FlowStateMachineImpl.kt:231) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventImmediately(FlowStateMachineImpl.kt:222) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:292) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-16T12:52:16,005Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T12:52:16,229Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:17,492Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:52:18,289Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T12:52:18,300Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:52:18,305Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:18,770Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:18,781Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T12:52:19,261Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:19,273Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:19,273Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T12:52:19,433Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:19,445Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:19,940Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T12:52:20,120Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:20,120Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:52:20,141Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:20,142Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:52:20,142Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:20,566Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:20,566Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:20,579Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T12:52:20,590Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:20,590Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T12:52:20,601Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:20,601Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:52:20,601Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:20,601Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:52:20,601Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:20,990Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:20,990Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T12:52:21,046Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:21,046Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T12:52:21,079Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:21,080Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T12:52:21,202Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:21,202Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T12:52:21,257Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:21,257Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:21,369Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,390Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,444Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:21,487Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,487Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:21,499Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,509Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T12:52:21,509Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,530Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,530Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T12:52:21,530Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,530Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T12:52:21,531Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,531Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,541Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:52:21,565Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,565Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:52:21,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,577Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T12:52:21,588Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,588Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,600Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:21,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:21,663Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T12:52:21,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:21,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,673Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T12:52:21,685Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T12:52:21,685Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,685Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,685Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,717Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,717Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:21,728Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T12:52:23,297Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:23,297Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:23,297Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T12:52:23,297Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:23,302Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:23,312Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T12:52:23,312Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:23,339Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T12:52:23,483Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125209.843/nodes/0/cordapps] {}
[INFO ] 2020-04-16T12:52:23,488Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:52:23,494Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:52:23,574Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:52:24,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:52:24,295Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:52:24,366Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:24,366Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:24,367Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:52:24,860Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:09.777Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:52:28,237Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:28,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125209.843/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:28,242Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:28,273Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:28,336Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:28,341Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,259Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,824Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,826Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,830Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,830Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,896Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:30,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:52:30,946Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:52:30,946Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:52:31,193Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:52:31,201Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:52:31,201Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,206Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:52:31,374Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,432Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:52:31,451Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,480Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:31,523Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:52:31,529Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T12:52:31,531Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T12:52:31,963Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,992Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,994Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:31,994Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:31,994Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:32,002Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125209.843/nodes/1/cordapps] {}
[INFO ] 2020-04-16T12:52:32,002Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:52:32,002Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:52:32,012Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:52:32,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:52:32,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:52:32,067Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:32,067Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:32,067Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:52:32,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:09.777Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:52:32,745Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,747Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125209.843/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,747Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,768Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,771Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,771Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,887Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,900Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,901Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,903Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,903Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,967Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:32,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:52:32,975Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:32,975Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:33,092Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:33,094Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:52:33,114Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:52:33,114Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,116Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:33,440Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,447Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:52:33,449Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,453Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:33,485Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:52:33,494Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:33,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:52:33,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:33,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,518Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:33,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:33,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:33,525Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125209.843/nodes/2/cordapps] {}
[INFO ] 2020-04-16T12:52:33,525Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:52:33,525Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:52:33,532Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125209.843/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:52:33,553Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:52:33,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:52:33,574Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:33,574Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:52:33,574Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:52:33,577Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:09.777Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:52:33,946Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:33,948Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125209.843/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:33,948Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:33,963Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:33,965Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:33,965Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,052Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,062Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,063Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,065Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,065Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,113Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:52:34,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:52:34,119Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:34,119Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:34,235Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:52:34,238Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:52:34,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:52:34,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,265Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:34,272Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,277Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:52:34,280Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,284Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:34,320Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:52:34,330Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,334Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041551201) {}
[INFO ] 2020-04-16T12:52:34,335Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:52:34,349Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,350Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:34,362Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041553114) {}
[INFO ] 2020-04-16T12:52:34,363Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:34,374Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,375Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:52:34,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,385Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:34,386Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041554263) {}
[INFO ] 2020-04-16T12:52:34,386Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:52:34,965Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=41ad47cb-0dc2-4acf-9153-2856917a8b7d, invocation_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, invocation_timestamp=2020-04-16T12:52:34.425Z, origin=Only For Testing, session_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, session_timestamp=2020-04-16T12:52:34.425Z, thread-id=331, tx_id=282C5F5F060F7283DE84F5EB01AAC472F558157BB695874F6F6CA210E7669FDB}
[INFO ] 2020-04-16T12:52:34,965Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=41ad47cb-0dc2-4acf-9153-2856917a8b7d, invocation_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, invocation_timestamp=2020-04-16T12:52:34.425Z, origin=Only For Testing, session_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, session_timestamp=2020-04-16T12:52:34.425Z, thread-id=331, tx_id=282C5F5F060F7283DE84F5EB01AAC472F558157BB695874F6F6CA210E7669FDB}
[INFO ] 2020-04-16T12:52:35,072Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=41ad47cb-0dc2-4acf-9153-2856917a8b7d, invocation_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, invocation_timestamp=2020-04-16T12:52:34.425Z, origin=Only For Testing, session_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, session_timestamp=2020-04-16T12:52:34.425Z, thread-id=331, tx_id=282C5F5F060F7283DE84F5EB01AAC472F558157BB695874F6F6CA210E7669FDB}
[INFO ] 2020-04-16T12:52:35,073Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=41ad47cb-0dc2-4acf-9153-2856917a8b7d, invocation_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, invocation_timestamp=2020-04-16T12:52:34.425Z, origin=Only For Testing, session_id=d7f14ccf-98d7-4e89-8daa-69580bd3b844, session_timestamp=2020-04-16T12:52:34.425Z, thread-id=331, tx_id=282C5F5F060F7283DE84F5EB01AAC472F558157BB695874F6F6CA210E7669FDB}
[INFO ] 2020-04-16T12:52:35,405Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3eff091c-6741-4cbc-8fc5-0b0a77105d92, invocation_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, invocation_timestamp=2020-04-16T12:52:35.168Z, origin=Only For Testing, session_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, session_timestamp=2020-04-16T12:52:35.168Z, thread-id=331, tx_id=79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D}
[INFO ] 2020-04-16T12:52:35,532Z [Mock network] corda.flow. - Received a notarisation request for Tx [79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000003, flow-id=4c5666af-048c-4b0d-afc6-e767d7287d35, invocation_id=a3c228fa-bf98-441b-a7de-9e88f836d2cf, invocation_timestamp=2020-04-16T12:52:35.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a3c228fa-bf98-441b-a7de-9e88f836d2cf, session_timestamp=2020-04-16T12:52:35.497Z, thread-id=331}
[INFO ] 2020-04-16T12:52:35,743Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: []. TxId: 79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D {}
[INFO ] 2020-04-16T12:52:35,751Z [Mock network] corda.flow. - Transaction [79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000003, flow-id=4c5666af-048c-4b0d-afc6-e767d7287d35, invocation_id=a3c228fa-bf98-441b-a7de-9e88f836d2cf, invocation_timestamp=2020-04-16T12:52:35.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a3c228fa-bf98-441b-a7de-9e88f836d2cf, session_timestamp=2020-04-16T12:52:35.497Z, thread-id=331}
[INFO ] 2020-04-16T12:52:35,770Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3eff091c-6741-4cbc-8fc5-0b0a77105d92, invocation_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, invocation_timestamp=2020-04-16T12:52:35.168Z, origin=Only For Testing, session_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, session_timestamp=2020-04-16T12:52:35.168Z, thread-id=331, tx_id=79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D}
[INFO ] 2020-04-16T12:52:35,772Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3eff091c-6741-4cbc-8fc5-0b0a77105d92, invocation_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, invocation_timestamp=2020-04-16T12:52:35.168Z, origin=Only For Testing, session_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, session_timestamp=2020-04-16T12:52:35.168Z, thread-id=331, tx_id=79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D}
[INFO ] 2020-04-16T12:52:35,793Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3eff091c-6741-4cbc-8fc5-0b0a77105d92, invocation_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, invocation_timestamp=2020-04-16T12:52:35.168Z, origin=Only For Testing, session_id=462eb5bb-d1a6-4dfc-ab9e-e20af8d69512, session_timestamp=2020-04-16T12:52:35.168Z, thread-id=331, tx_id=79C712AF36E4E1564667A459CD93FF45102799364C7761473FF8765D6C46CA5D}
[INFO ] 2020-04-16T12:52:35,846Z [Mock network] corda.flow. - Flow raised an error: Transaction context is missing. This might happen if a suspendable method is not annotated with @Suspendable annotation.. Sending it to flow hospital to be triaged. {fiber-id=10000004, flow-id=98b0a71c-6496-4e5f-9729-4b83ae708964, invocation_id=0618f587-36c5-45b9-bded-331438f7a642, invocation_timestamp=2020-04-16T12:52:35.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0618f587-36c5-45b9-bded-331438f7a642, session_timestamp=2020-04-16T12:52:35.828Z, thread-id=331}
[WARN ] 2020-04-16T12:52:35,847Z [Mock network] corda.flow. - Caught exception from flow [errorCode=wxd0n9, moreInformationAt=https://errors.corda.net/OS/4.4/wxd0n9] {fiber-id=10000004, flow-id=98b0a71c-6496-4e5f-9729-4b83ae708964, invocation_id=0618f587-36c5-45b9-bded-331438f7a642, invocation_timestamp=2020-04-16T12:52:35.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0618f587-36c5-45b9-bded-331438f7a642, session_timestamp=2020-04-16T12:52:35.828Z, thread-id=331}
java.lang.IllegalArgumentException: Transaction context is missing. This might happen if a suspendable method is not annotated with @Suspendable annotation.
	at net.corda.node.services.statemachine.FlowStateMachineImpl.checkDbTransaction(FlowStateMachineImpl.kt:231) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventImmediately(FlowStateMachineImpl.kt:222) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:292) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_241]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_241]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_241]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-16T12:52:54,149Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java ... {}
[INFO ] 2020-04-16T12:52:54,380Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:55,602Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:52:56,358Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-16T12:52:56,369Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-16T12:52:56,374Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:52:56,839Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:56,849Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-16T12:52:57,295Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:57,295Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:57,295Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-16T12:52:57,442Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:57,452Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:57,876Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-16T12:52:58,083Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:58,083Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:52:58,105Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:58,105Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-16T12:52:58,106Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-16T12:52:58,509Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:58,509Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:58,519Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-04-16T12:52:58,530Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-04-16T12:52:58,542Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-16T12:52:58,968Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:58,968Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-04-16T12:52:59,023Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:59,023Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-04-16T12:52:59,047Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:59,047Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-04-16T12:52:59,151Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:59,151Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-04-16T12:52:59,191Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-16T12:52:59,202Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:52:59,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,311Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,371Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:59,414Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,414Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:59,425Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,425Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-04-16T12:52:59,425Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,445Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,458Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:52:59,489Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,489Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-04-16T12:52:59,499Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,499Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,499Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-04-16T12:52:59,510Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,510Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,521Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:59,577Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,577Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-04-16T12:52:59,589Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,599Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-04-16T12:52:59,599Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-04-16T12:52:59,599Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,599Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-04-16T12:52:59,609Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-04-16T12:52:59,610Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,610Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,610Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,642Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:52:59,653Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-04-16T12:53:01,233Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-16T12:53:01,233Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:53:01,233Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-04-16T12:53:01,233Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-16T12:53:01,237Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:53:01,247Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/.gradle {}
[INFO ] 2020-04-16T12:53:01,247Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-16T12:53:01,272Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-16T12:53:01,412Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125248.000/nodes/0/cordapps] {}
[INFO ] 2020-04-16T12:53:01,416Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/0/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/0/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:53:01,422Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/0/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:53:01,499Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/0/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:53:02,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:53:02,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:53:02,190Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:02,190Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:02,190Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:53:02,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:47.954Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:53:05,797Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:05,802Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125248.000/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:05,802Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:05,831Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:05,890Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:05,895Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:07,693Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,241Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,249Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,252Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,252Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,312Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:08,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:53:08,363Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:53:08,363Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:53:08,565Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-16T12:53:08,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:53:08,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:08,575Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:53:08,697Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:08,756Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:53:08,771Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:08,797Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:08,827Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:53:08,832Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-16T12:53:08,834Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-16T12:53:09,192Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:09,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:09,219Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:09,219Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:09,219Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:09,226Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125248.000/nodes/1/cordapps] {}
[INFO ] 2020-04-16T12:53:09,226Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/1/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/1/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:53:09,226Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/1/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:53:09,233Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/1/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:53:09,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:53:09,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:53:09,283Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:09,283Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:09,283Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:53:09,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:47.954Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:53:09,729Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,731Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125248.000/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,731Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,758Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,760Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,760Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,876Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,889Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,890Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,892Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,892Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,953Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:09,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:53:09,961Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:09,961Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:10,070Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:10,071Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:53:10,092Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:53:10,092Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,094Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:10,405Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,411Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:53:10,413Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,417Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:10,441Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:53:10,448Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,452Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:10,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:53:10,464Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,465Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:10,474Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,474Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:10,474Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:10,474Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:10,480Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200416-125248.000/nodes/2/cordapps] {}
[INFO ] 2020-04-16T12:53:10,480Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/2/cordapps/cordapp-example-workflows-0.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/2/cordapps/cordapp-example-contracts-0.2.jar, rootPackageName=null) {}
[INFO ] 2020-04-16T12:53:10,480Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/2/cordapps/cordapp-example-workflows-0.2.jar {}
[INFO ] 2020-04-16T12:53:10,487Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/cordapp-example/workflows-java/build/mock-network/20200416-125248.000/nodes/2/cordapps/cordapp-example-contracts-0.2.jar {}
[INFO ] 2020-04-16T12:53:10,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-16T12:53:10,506Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-16T12:53:10,524Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:10,524Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.MessageFlow$Initiator to initiate com.example.flow.MessageFlow$Acceptor (version 1) {}
[INFO ] 2020-04-16T12:53:10,524Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flow.CreateAuctionFlow$Initiator to initiate org.r3.flow.CreateAuctionFlow$Responder (version 1) {}
[INFO ] 2020-04-16T12:53:10,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2020-04-16T12:52:47.954Z
      epoch=1
  } {}
[INFO ] 2020-04-16T12:53:10,869Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,870Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200416-125248.000/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,870Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,887Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,890Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,890Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,963Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,969Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,970Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,971Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:10,971Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:11,008Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-16T12:53:11,012Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-16T12:53:11,013Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:11,013Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:11,083Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-04-16T12:53:11,084Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-16T12:53:11,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-16T12:53:11,099Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,101Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:11,106Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,110Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-16T12:53:11,113Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,120Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:11,144Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=3AF22BC49D84B7248378991FAA65C5294EE3FFD9BC9549DAE6F80453A5F46E6A uploader=app filename=CorDapp Example {}
[INFO ] 2020-04-16T12:53:11,152Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587041588571) {}
[INFO ] 2020-04-16T12:53:11,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-16T12:53:11,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,166Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:11,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587041590092) {}
[INFO ] 2020-04-16T12:53:11,176Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:11,185Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,186Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-16T12:53:11,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,195Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:11,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587041591099) {}
[INFO ] 2020-04-16T12:53:11,195Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-16T12:53:11,714Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24b67189-fc0a-4bd5-a9bf-6cd4e9cfb151, invocation_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, invocation_timestamp=2020-04-16T12:53:11.226Z, origin=Only For Testing, session_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, session_timestamp=2020-04-16T12:53:11.226Z, thread-id=331, tx_id=947EA9ED4E1BA708D43C75600F95D9F152F5595349847A9A2438BBD22675F543}
[INFO ] 2020-04-16T12:53:11,714Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24b67189-fc0a-4bd5-a9bf-6cd4e9cfb151, invocation_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, invocation_timestamp=2020-04-16T12:53:11.226Z, origin=Only For Testing, session_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, session_timestamp=2020-04-16T12:53:11.226Z, thread-id=331, tx_id=947EA9ED4E1BA708D43C75600F95D9F152F5595349847A9A2438BBD22675F543}
[INFO ] 2020-04-16T12:53:11,793Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24b67189-fc0a-4bd5-a9bf-6cd4e9cfb151, invocation_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, invocation_timestamp=2020-04-16T12:53:11.226Z, origin=Only For Testing, session_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, session_timestamp=2020-04-16T12:53:11.226Z, thread-id=331, tx_id=947EA9ED4E1BA708D43C75600F95D9F152F5595349847A9A2438BBD22675F543}
[INFO ] 2020-04-16T12:53:11,793Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24b67189-fc0a-4bd5-a9bf-6cd4e9cfb151, invocation_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, invocation_timestamp=2020-04-16T12:53:11.226Z, origin=Only For Testing, session_id=ab4ae972-84a6-43cf-8f61-b55c60a810ef, session_timestamp=2020-04-16T12:53:11.226Z, thread-id=331, tx_id=947EA9ED4E1BA708D43C75600F95D9F152F5595349847A9A2438BBD22675F543}
[INFO ] 2020-04-16T12:53:12,034Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,134Z [Mock network] corda.flow. - Received a notarisation request for Tx [B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000003, flow-id=2b1b8be9-6b81-43a9-97f1-15c14660bf80, invocation_id=3667a10f-50f3-4700-893c-031c9a37be06, invocation_timestamp=2020-04-16T12:53:12.104Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3667a10f-50f3-4700-893c-031c9a37be06, session_timestamp=2020-04-16T12:53:12.104Z, thread-id=331}
[INFO ] 2020-04-16T12:53:12,330Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: []. TxId: B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD {}
[INFO ] 2020-04-16T12:53:12,338Z [Mock network] corda.flow. - Transaction [B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000003, flow-id=2b1b8be9-6b81-43a9-97f1-15c14660bf80, invocation_id=3667a10f-50f3-4700-893c-031c9a37be06, invocation_timestamp=2020-04-16T12:53:12.104Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3667a10f-50f3-4700-893c-031c9a37be06, session_timestamp=2020-04-16T12:53:12.104Z, thread-id=331}
[INFO ] 2020-04-16T12:53:12,358Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,360Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,377Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,423Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=5c2cf250-266b-4b31-8e5e-e5e6d7f20837, invocation_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, invocation_timestamp=2020-04-16T12:53:12.399Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, session_timestamp=2020-04-16T12:53:12.399Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,491Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=5c2cf250-266b-4b31-8e5e-e5e6d7f20837, invocation_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, invocation_timestamp=2020-04-16T12:53:12.399Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, session_timestamp=2020-04-16T12:53:12.399Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,499Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=5c2cf250-266b-4b31-8e5e-e5e6d7f20837, invocation_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, invocation_timestamp=2020-04-16T12:53:12.399Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, session_timestamp=2020-04-16T12:53:12.399Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,509Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=5c2cf250-266b-4b31-8e5e-e5e6d7f20837, invocation_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, invocation_timestamp=2020-04-16T12:53:12.399Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b0e6991e-1742-43f4-96bf-f2e85634aea0, session_timestamp=2020-04-16T12:53:12.399Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,520Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
[INFO ] 2020-04-16T12:53:12,520Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=a6e0eed8-a018-4d83-9587-1ea24d3286d7, invocation_id=a98fc81d-df64-48d8-8014-1dca3eff2296, invocation_timestamp=2020-04-16T12:53:11.858Z, origin=Only For Testing, session_id=a98fc81d-df64-48d8-8014-1dca3eff2296, session_timestamp=2020-04-16T12:53:11.858Z, thread-id=331, tx_id=B309358AD14686DFD65181F0C23189728ADC1E8E23AB7C39118F7C248223FCCD}
